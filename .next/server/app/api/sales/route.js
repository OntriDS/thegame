"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/sales/route";
exports.ids = ["app/api/sales/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "node:buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:buffer");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:util");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsales%2Froute&page=%2Fapi%2Fsales%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsales%2Froute.ts&appDir=C%3A%5CUsers%5CUsuario%5CAKILES%5CGAME%20WEB%20APP%5CSPLIT%5Cthegame%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUsuario%5CAKILES%5CGAME%20WEB%20APP%5CSPLIT%5Cthegame&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsales%2Froute&page=%2Fapi%2Fsales%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsales%2Froute.ts&appDir=C%3A%5CUsers%5CUsuario%5CAKILES%5CGAME%20WEB%20APP%5CSPLIT%5Cthegame%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUsuario%5CAKILES%5CGAME%20WEB%20APP%5CSPLIT%5Cthegame&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_Usuario_AKILES_GAME_WEB_APP_SPLIT_thegame_app_api_sales_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/sales/route.ts */ \"(rsc)/./app/api/sales/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/sales/route\",\n        pathname: \"/api/sales\",\n        filename: \"route\",\n        bundlePath: \"app/api/sales/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\Usuario\\\\AKILES\\\\GAME WEB APP\\\\SPLIT\\\\thegame\\\\app\\\\api\\\\sales\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_Usuario_AKILES_GAME_WEB_APP_SPLIT_thegame_app_api_sales_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/sales/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzYWxlcyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGc2FsZXMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZzYWxlcyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNVc3VhcmlvJTVDQUtJTEVTJTVDR0FNRSUyMFdFQiUyMEFQUCU1Q1NQTElUJTVDdGhlZ2FtZSU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDVXN1YXJpbyU1Q0FLSUxFUyU1Q0dBTUUlMjBXRUIlMjBBUFAlNUNTUExJVCU1Q3RoZWdhbWUmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ21DO0FBQ2hIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGhlZ2FtZS1hZG1pbi8/OWM5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxVc3VhcmlvXFxcXEFLSUxFU1xcXFxHQU1FIFdFQiBBUFBcXFxcU1BMSVRcXFxcdGhlZ2FtZVxcXFxhcHBcXFxcYXBpXFxcXHNhbGVzXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9zYWxlcy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3NhbGVzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9zYWxlcy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXFVzdWFyaW9cXFxcQUtJTEVTXFxcXEdBTUUgV0VCIEFQUFxcXFxTUExJVFxcXFx0aGVnYW1lXFxcXGFwcFxcXFxhcGlcXFxcc2FsZXNcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3NhbGVzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsales%2Froute&page=%2Fapi%2Fsales%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsales%2Froute.ts&appDir=C%3A%5CUsers%5CUsuario%5CAKILES%5CGAME%20WEB%20APP%5CSPLIT%5Cthegame%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUsuario%5CAKILES%5CGAME%20WEB%20APP%5CSPLIT%5Cthegame&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/sales/route.ts":
/*!********************************!*\
  !*** ./app/api/sales/route.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm/v4.js\");\n/* harmony import */ var _data_store_datastore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/datastore */ \"(rsc)/./data-store/datastore.ts\");\n/* harmony import */ var _lib_api_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/api-auth */ \"(rsc)/./lib/api-auth.ts\");\n// app/api/sales/route.ts\n\n\n\n\nasync function GET(req) {\n    if (!await (0,_lib_api_auth__WEBPACK_IMPORTED_MODULE_2__.requireAdminAuth)(req)) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: \"Unauthorized\"\n    }, {\n        status: 401\n    });\n    const sales = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllSales)();\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(sales);\n}\nasync function POST(req) {\n    if (!await (0,_lib_api_auth__WEBPACK_IMPORTED_MODULE_2__.requireAdminAuth)(req)) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: \"Unauthorized\"\n    }, {\n        status: 401\n    });\n    const body = await req.json();\n    const sale = {\n        ...body,\n        id: body.id || (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(),\n        createdAt: body.createdAt ? new Date(body.createdAt) : new Date(),\n        updatedAt: new Date(),\n        links: body.links || []\n    };\n    const saved = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.upsertSale)(sale);\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(saved);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3NhbGVzL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHlCQUF5QjtBQUMrQjtBQUN0QjtBQUUrQjtBQUNmO0FBRTNDLGVBQWVNLElBQUlDLEdBQWdCO0lBQ3hDLElBQUksQ0FBRSxNQUFNRiwrREFBZ0JBLENBQUNFLE1BQU8sT0FBT1AscURBQVlBLENBQUNRLElBQUksQ0FBQztRQUFFQyxPQUFPO0lBQWUsR0FBRztRQUFFQyxRQUFRO0lBQUk7SUFDdEcsTUFBTUMsUUFBUSxNQUFNUixrRUFBV0E7SUFDL0IsT0FBT0gscURBQVlBLENBQUNRLElBQUksQ0FBQ0c7QUFDM0I7QUFFTyxlQUFlQyxLQUFLTCxHQUFnQjtJQUN6QyxJQUFJLENBQUUsTUFBTUYsK0RBQWdCQSxDQUFDRSxNQUFPLE9BQU9QLHFEQUFZQSxDQUFDUSxJQUFJLENBQUM7UUFBRUMsT0FBTztJQUFlLEdBQUc7UUFBRUMsUUFBUTtJQUFJO0lBQ3RHLE1BQU1HLE9BQVEsTUFBTU4sSUFBSUMsSUFBSTtJQUM1QixNQUFNTSxPQUFhO1FBQ2pCLEdBQUdELElBQUk7UUFDUEUsSUFBSUYsS0FBS0UsRUFBRSxJQUFJYixnREFBSUE7UUFDbkJjLFdBQVdILEtBQUtHLFNBQVMsR0FBRyxJQUFJQyxLQUFLSixLQUFLRyxTQUFTLElBQUksSUFBSUM7UUFDM0RDLFdBQVcsSUFBSUQ7UUFDZkUsT0FBT04sS0FBS00sS0FBSyxJQUFJLEVBQUU7SUFDekI7SUFDQSxNQUFNQyxRQUFRLE1BQU1oQixpRUFBVUEsQ0FBQ1U7SUFDL0IsT0FBT2QscURBQVlBLENBQUNRLElBQUksQ0FBQ1k7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aGVnYW1lLWFkbWluLy4vYXBwL2FwaS9zYWxlcy9yb3V0ZS50cz81MGNkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGFwcC9hcGkvc2FsZXMvcm91dGUudHNcclxuaW1wb3J0IHsgTmV4dFJlc3BvbnNlLCBOZXh0UmVxdWVzdCB9IGZyb20gJ25leHQvc2VydmVyJztcclxuaW1wb3J0IHsgdjQgYXMgdXVpZCB9IGZyb20gJ3V1aWQnO1xyXG5pbXBvcnQgdHlwZSB7IFNhbGUgfSBmcm9tICdAL3R5cGVzL2VudGl0aWVzJztcclxuaW1wb3J0IHsgZ2V0QWxsU2FsZXMsIHVwc2VydFNhbGUgfSBmcm9tICdAL2RhdGEtc3RvcmUvZGF0YXN0b3JlJztcclxuaW1wb3J0IHsgcmVxdWlyZUFkbWluQXV0aCB9IGZyb20gJ0AvbGliL2FwaS1hdXRoJztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxOiBOZXh0UmVxdWVzdCkge1xyXG4gIGlmICghKGF3YWl0IHJlcXVpcmVBZG1pbkF1dGgocmVxKSkpIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiAnVW5hdXRob3JpemVkJyB9LCB7IHN0YXR1czogNDAxIH0pO1xyXG4gIGNvbnN0IHNhbGVzID0gYXdhaXQgZ2V0QWxsU2FsZXMoKTtcclxuICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oc2FsZXMpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXE6IE5leHRSZXF1ZXN0KSB7XHJcbiAgaWYgKCEoYXdhaXQgcmVxdWlyZUFkbWluQXV0aChyZXEpKSkgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6ICdVbmF1dGhvcml6ZWQnIH0sIHsgc3RhdHVzOiA0MDEgfSk7XHJcbiAgY29uc3QgYm9keSA9IChhd2FpdCByZXEuanNvbigpKSBhcyBTYWxlO1xyXG4gIGNvbnN0IHNhbGU6IFNhbGUgPSB7IFxyXG4gICAgLi4uYm9keSwgXHJcbiAgICBpZDogYm9keS5pZCB8fCB1dWlkKCksIFxyXG4gICAgY3JlYXRlZEF0OiBib2R5LmNyZWF0ZWRBdCA/IG5ldyBEYXRlKGJvZHkuY3JlYXRlZEF0KSA6IG5ldyBEYXRlKCksIFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgpLCBcclxuICAgIGxpbmtzOiBib2R5LmxpbmtzIHx8IFtdIFxyXG4gIH07XHJcbiAgY29uc3Qgc2F2ZWQgPSBhd2FpdCB1cHNlcnRTYWxlKHNhbGUpO1xyXG4gIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihzYXZlZCk7XHJcbn1cclxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsInY0IiwidXVpZCIsImdldEFsbFNhbGVzIiwidXBzZXJ0U2FsZSIsInJlcXVpcmVBZG1pbkF1dGgiLCJHRVQiLCJyZXEiLCJqc29uIiwiZXJyb3IiLCJzdGF0dXMiLCJzYWxlcyIsIlBPU1QiLCJib2R5Iiwic2FsZSIsImlkIiwiY3JlYXRlZEF0IiwiRGF0ZSIsInVwZGF0ZWRBdCIsImxpbmtzIiwic2F2ZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/sales/route.ts\n");

/***/ }),

/***/ "(rsc)/./data-store/datastore.ts":
/*!*********************************!*\
  !*** ./data-store/datastore.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAllCharacters: () => (/* binding */ getAllCharacters),\n/* harmony export */   getAllFinancials: () => (/* binding */ getAllFinancials),\n/* harmony export */   getAllItems: () => (/* binding */ getAllItems),\n/* harmony export */   getAllPlayers: () => (/* binding */ getAllPlayers),\n/* harmony export */   getAllSales: () => (/* binding */ getAllSales),\n/* harmony export */   getAllSettlements: () => (/* binding */ getAllSettlements),\n/* harmony export */   getAllSites: () => (/* binding */ getAllSites),\n/* harmony export */   getAllTasks: () => (/* binding */ getAllTasks),\n/* harmony export */   getCharacterById: () => (/* binding */ getCharacterById),\n/* harmony export */   getCompanyAssets: () => (/* binding */ getCompanyAssets),\n/* harmony export */   getConversionRates: () => (/* binding */ getConversionRates),\n/* harmony export */   getFinancialById: () => (/* binding */ getFinancialById),\n/* harmony export */   getItemById: () => (/* binding */ getItemById),\n/* harmony export */   getPersonalAssets: () => (/* binding */ getPersonalAssets),\n/* harmony export */   getPlayerById: () => (/* binding */ getPlayerById),\n/* harmony export */   getPointsConversionRates: () => (/* binding */ getPointsConversionRates),\n/* harmony export */   getSaleById: () => (/* binding */ getSaleById),\n/* harmony export */   getSettlementById: () => (/* binding */ getSettlementById),\n/* harmony export */   getSiteById: () => (/* binding */ getSiteById),\n/* harmony export */   getSitesByRadius: () => (/* binding */ getSitesByRadius),\n/* harmony export */   getSitesBySettlement: () => (/* binding */ getSitesBySettlement),\n/* harmony export */   getTaskById: () => (/* binding */ getTaskById),\n/* harmony export */   removeCharacter: () => (/* binding */ removeCharacter),\n/* harmony export */   removeFinancial: () => (/* binding */ removeFinancial),\n/* harmony export */   removeItem: () => (/* binding */ removeItem),\n/* harmony export */   removePlayer: () => (/* binding */ removePlayer),\n/* harmony export */   removeSale: () => (/* binding */ removeSale),\n/* harmony export */   removeSettlement: () => (/* binding */ removeSettlement),\n/* harmony export */   removeSite: () => (/* binding */ removeSite),\n/* harmony export */   removeTask: () => (/* binding */ removeTask),\n/* harmony export */   saveCompanyAssets: () => (/* binding */ saveCompanyAssets),\n/* harmony export */   saveConversionRates: () => (/* binding */ saveConversionRates),\n/* harmony export */   savePersonalAssets: () => (/* binding */ savePersonalAssets),\n/* harmony export */   savePointsConversionRates: () => (/* binding */ savePointsConversionRates),\n/* harmony export */   upsertCharacter: () => (/* binding */ upsertCharacter),\n/* harmony export */   upsertFinancial: () => (/* binding */ upsertFinancial),\n/* harmony export */   upsertItem: () => (/* binding */ upsertItem),\n/* harmony export */   upsertPlayer: () => (/* binding */ upsertPlayer),\n/* harmony export */   upsertSale: () => (/* binding */ upsertSale),\n/* harmony export */   upsertSettlement: () => (/* binding */ upsertSettlement),\n/* harmony export */   upsertSite: () => (/* binding */ upsertSite),\n/* harmony export */   upsertTask: () => (/* binding */ upsertTask)\n/* harmony export */ });\n/* harmony import */ var _types_enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/enums */ \"(rsc)/./types/enums.ts\");\n/* harmony import */ var _repositories_task_repo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./repositories/task.repo */ \"(rsc)/./data-store/repositories/task.repo.ts\");\n/* harmony import */ var _repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./repositories/item.repo */ \"(rsc)/./data-store/repositories/item.repo.ts\");\n/* harmony import */ var _repositories_financial_repo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./repositories/financial.repo */ \"(rsc)/./data-store/repositories/financial.repo.ts\");\n/* harmony import */ var _repositories_sale_repo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./repositories/sale.repo */ \"(rsc)/./data-store/repositories/sale.repo.ts\");\n/* harmony import */ var _repositories_character_repo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./repositories/character.repo */ \"(rsc)/./data-store/repositories/character.repo.ts\");\n/* harmony import */ var _repositories_player_repo__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./repositories/player.repo */ \"(rsc)/./data-store/repositories/player.repo.ts\");\n/* harmony import */ var _repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./repositories/site.repo */ \"(rsc)/./data-store/repositories/site.repo.ts\");\n/* harmony import */ var _kv__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./kv */ \"(rsc)/./data-store/kv.ts\");\n/* harmony import */ var _workflows_entities_workflows_task_workflow__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/workflows/entities-workflows/task.workflow */ \"(rsc)/./workflows/entities-workflows/task.workflow.ts\");\n/* harmony import */ var _workflows_entities_workflows_item_workflow__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/workflows/entities-workflows/item.workflow */ \"(rsc)/./workflows/entities-workflows/item.workflow.ts\");\n/* harmony import */ var _workflows_entities_workflows_financial_workflow__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @/workflows/entities-workflows/financial.workflow */ \"(rsc)/./workflows/entities-workflows/financial.workflow.ts\");\n/* harmony import */ var _workflows_entities_workflows_sale_workflow__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @/workflows/entities-workflows/sale.workflow */ \"(rsc)/./workflows/entities-workflows/sale.workflow.ts\");\n/* harmony import */ var _workflows_entities_workflows_character_workflow__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @/workflows/entities-workflows/character.workflow */ \"(rsc)/./workflows/entities-workflows/character.workflow.ts\");\n/* harmony import */ var _workflows_entities_workflows_player_workflow__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @/workflows/entities-workflows/player.workflow */ \"(rsc)/./workflows/entities-workflows/player.workflow.ts\");\n/* harmony import */ var _workflows_entities_workflows_site_workflow__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @/workflows/entities-workflows/site.workflow */ \"(rsc)/./workflows/entities-workflows/site.workflow.ts\");\n/* harmony import */ var _links_links_workflows__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @/links/links-workflows */ \"(rsc)/./links/links-workflows.ts\");\n// data-store/datastore.ts\n// Orchestration layer: repositories → workflows → links → logging\n\n\n\n\n\n\n\n\n\n// Import workflow functions individually to avoid TypeScript issues\n\n\n\n\n\n\n\n\n// TASKS\nasync function upsertTask(task) {\n    const previous = await (0,_repositories_task_repo__WEBPACK_IMPORTED_MODULE_1__.getTaskById)(task.id);\n    const saved = await (0,_repositories_task_repo__WEBPACK_IMPORTED_MODULE_1__.upsertTask)(task);\n    await (0,_workflows_entities_workflows_task_workflow__WEBPACK_IMPORTED_MODULE_9__.onTaskUpsert)(saved, previous || undefined);\n    await (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_16__.processLinkEntity)(saved, _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK);\n    return saved;\n}\nasync function getAllTasks() {\n    return await (0,_repositories_task_repo__WEBPACK_IMPORTED_MODULE_1__.getAllTasks)();\n}\nasync function getTaskById(id) {\n    return await (0,_repositories_task_repo__WEBPACK_IMPORTED_MODULE_1__.getTaskById)(id);\n}\nasync function removeTask(id) {\n    const existing = await (0,_repositories_task_repo__WEBPACK_IMPORTED_MODULE_1__.getTaskById)(id);\n    await (0,_repositories_task_repo__WEBPACK_IMPORTED_MODULE_1__.deleteTask)(id);\n    if (existing) {\n        // Call task deletion workflow for cleanup\n        const { removeTaskLogEntriesOnDelete } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/workflows/entities-workflows/task.workflow */ \"(rsc)/./workflows/entities-workflows/task.workflow.ts\"));\n        await removeTaskLogEntriesOnDelete(id);\n    }\n}\n// ITEMS\nasync function upsertItem(item) {\n    const previous = await (0,_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__.getItemById)(item.id);\n    const saved = await (0,_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__.upsertItem)(item);\n    await (0,_workflows_entities_workflows_item_workflow__WEBPACK_IMPORTED_MODULE_10__.onItemUpsert)(saved, previous || undefined);\n    await (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_16__.processLinkEntity)(saved, _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM);\n    return saved;\n}\nasync function getAllItems() {\n    return await (0,_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__.getAllItems)();\n}\nasync function getItemById(id) {\n    return await (0,_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__.getItemById)(id);\n}\nasync function removeItem(id) {\n    const existing = await (0,_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__.getItemById)(id);\n    await (0,_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__.deleteItem)(id);\n    if (existing) {\n        // Call item deletion workflow for cleanup\n        const { removeItemEffectsOnDelete } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/workflows/entities-workflows/item.workflow */ \"(rsc)/./workflows/entities-workflows/item.workflow.ts\"));\n        await removeItemEffectsOnDelete(id);\n    }\n}\n// FINANCIALS\nasync function upsertFinancial(financial) {\n    const previous = await (0,_repositories_financial_repo__WEBPACK_IMPORTED_MODULE_3__.getFinancialById)(financial.id);\n    const saved = await (0,_repositories_financial_repo__WEBPACK_IMPORTED_MODULE_3__.upsertFinancial)(financial);\n    await (0,_workflows_entities_workflows_financial_workflow__WEBPACK_IMPORTED_MODULE_11__.onFinancialUpsert)(saved, previous || undefined);\n    await (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_16__.processLinkEntity)(saved, _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL);\n    return saved;\n}\nasync function getAllFinancials() {\n    return await (0,_repositories_financial_repo__WEBPACK_IMPORTED_MODULE_3__.getAllFinancials)();\n}\nasync function getFinancialById(id) {\n    return await (0,_repositories_financial_repo__WEBPACK_IMPORTED_MODULE_3__.getFinancialById)(id);\n}\nasync function removeFinancial(id) {\n    const existing = await (0,_repositories_financial_repo__WEBPACK_IMPORTED_MODULE_3__.getFinancialById)(id);\n    await (0,_repositories_financial_repo__WEBPACK_IMPORTED_MODULE_3__.deleteFinancial)(id);\n    if (existing) {\n        // Call financial deletion workflow for cleanup\n        const { removeRecordEffectsOnDelete } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/workflows/entities-workflows/financial.workflow */ \"(rsc)/./workflows/entities-workflows/financial.workflow.ts\"));\n        await removeRecordEffectsOnDelete(id);\n    }\n}\n// SALES\nasync function upsertSale(sale) {\n    const previous = await (0,_repositories_sale_repo__WEBPACK_IMPORTED_MODULE_4__.getSaleById)(sale.id);\n    const saved = await (0,_repositories_sale_repo__WEBPACK_IMPORTED_MODULE_4__.upsertSale)(sale);\n    await (0,_workflows_entities_workflows_sale_workflow__WEBPACK_IMPORTED_MODULE_12__.onSaleUpsert)(saved, previous || undefined);\n    await (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_16__.processLinkEntity)(saved, _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE);\n    return saved;\n}\nasync function getAllSales() {\n    return await (0,_repositories_sale_repo__WEBPACK_IMPORTED_MODULE_4__.getAllSales)();\n}\nasync function getSaleById(id) {\n    return await (0,_repositories_sale_repo__WEBPACK_IMPORTED_MODULE_4__.getSaleById)(id);\n}\nasync function removeSale(id) {\n    const existing = await (0,_repositories_sale_repo__WEBPACK_IMPORTED_MODULE_4__.getSaleById)(id);\n    await (0,_repositories_sale_repo__WEBPACK_IMPORTED_MODULE_4__.deleteSale)(id);\n    if (existing) {\n        // Call sale deletion workflow for cleanup\n        const { removeSaleEffectsOnDelete } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/workflows/entities-workflows/sale.workflow */ \"(rsc)/./workflows/entities-workflows/sale.workflow.ts\"));\n        await removeSaleEffectsOnDelete(id);\n    }\n}\n// CHARACTERS\nasync function upsertCharacter(character) {\n    const previous = await (0,_repositories_character_repo__WEBPACK_IMPORTED_MODULE_5__.getCharacterById)(character.id);\n    const saved = await (0,_repositories_character_repo__WEBPACK_IMPORTED_MODULE_5__.upsertCharacter)(character);\n    await (0,_workflows_entities_workflows_character_workflow__WEBPACK_IMPORTED_MODULE_13__.onCharacterUpsert)(saved, previous || undefined);\n    await (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_16__.processLinkEntity)(saved, _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER);\n    return saved;\n}\nasync function getAllCharacters() {\n    return await (0,_repositories_character_repo__WEBPACK_IMPORTED_MODULE_5__.getAllCharacters)();\n}\nasync function getCharacterById(id) {\n    return await (0,_repositories_character_repo__WEBPACK_IMPORTED_MODULE_5__.getCharacterById)(id);\n}\nasync function removeCharacter(id) {\n    const existing = await (0,_repositories_character_repo__WEBPACK_IMPORTED_MODULE_5__.getCharacterById)(id);\n    await (0,_repositories_character_repo__WEBPACK_IMPORTED_MODULE_5__.deleteCharacter)(id);\n    if (existing) {\n        // Call character deletion workflow for cleanup\n        const { removeCharacterEffectsOnDelete } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/workflows/entities-workflows/character.workflow */ \"(rsc)/./workflows/entities-workflows/character.workflow.ts\"));\n        await removeCharacterEffectsOnDelete(id);\n    }\n}\n// PLAYERS\nasync function upsertPlayer(player) {\n    const previous = await (0,_repositories_player_repo__WEBPACK_IMPORTED_MODULE_6__.getPlayerById)(player.id);\n    const saved = await (0,_repositories_player_repo__WEBPACK_IMPORTED_MODULE_6__.upsertPlayer)(player);\n    await (0,_workflows_entities_workflows_player_workflow__WEBPACK_IMPORTED_MODULE_14__.onPlayerUpsert)(saved, previous || undefined);\n    await (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_16__.processLinkEntity)(saved, _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER);\n    return saved;\n}\nasync function getAllPlayers() {\n    return await (0,_repositories_player_repo__WEBPACK_IMPORTED_MODULE_6__.getAllPlayers)();\n}\nasync function getPlayerById(id) {\n    return await (0,_repositories_player_repo__WEBPACK_IMPORTED_MODULE_6__.getPlayerById)(id);\n}\nasync function removePlayer(id) {\n    const existing = await (0,_repositories_player_repo__WEBPACK_IMPORTED_MODULE_6__.getPlayerById)(id);\n    await (0,_repositories_player_repo__WEBPACK_IMPORTED_MODULE_6__.deletePlayer)(id);\n    if (existing) {\n        // Call player deletion workflow for cleanup\n        const { removePlayerEffectsOnDelete } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/workflows/entities-workflows/player.workflow */ \"(rsc)/./workflows/entities-workflows/player.workflow.ts\"));\n        await removePlayerEffectsOnDelete(id);\n    }\n}\n// SITES\nasync function upsertSite(site) {\n    const previous = await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.getSiteById)(site.id);\n    const saved = await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.upsertSite)(site);\n    await (0,_workflows_entities_workflows_site_workflow__WEBPACK_IMPORTED_MODULE_15__.onSiteUpsert)(saved, previous || undefined);\n    await (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_16__.processLinkEntity)(saved, _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE);\n    return saved;\n}\nasync function getAllSites() {\n    return await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.getAllSites)();\n}\nasync function getSiteById(id) {\n    return await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.getSiteById)(id);\n}\nasync function removeSite(id) {\n    const existing = await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.getSiteById)(id);\n    await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.deleteSite)(id);\n    if (existing) {\n        // Call site deletion workflow for cleanup\n        const { removeSiteEffectsOnDelete } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/workflows/entities-workflows/site.workflow */ \"(rsc)/./workflows/entities-workflows/site.workflow.ts\"));\n        await removeSiteEffectsOnDelete(id);\n    }\n}\n// ============================================================================\n// SETTLEMENT METHODS (Reference data for Sites)\n// ============================================================================\nasync function getAllSettlements() {\n    return await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.getAllSettlements)();\n}\nasync function getSettlementById(id) {\n    return await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.getSettlementById)(id);\n}\nasync function upsertSettlement(settlement) {\n    return await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.upsertSettlement)(settlement);\n}\nasync function removeSettlement(id) {\n    await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.removeSettlement)(id);\n}\n// ============================================================================\n// SITE QUERY METHODS\n// ============================================================================\nasync function getSitesBySettlement(settlementId) {\n    return await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.getSitesBySettlement)(settlementId);\n}\nasync function getSitesByRadius(centerLat, centerLng, radiusMeters) {\n    return await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.getSitesByRadius)(centerLat, centerLng, radiusMeters);\n}\n// POINTS CONVERSION RATES\nasync function getPointsConversionRates() {\n    const rates = await (0,_kv__WEBPACK_IMPORTED_MODULE_8__.kvGet)(\"data:points-conversion-rates\");\n    return rates || {\n        hpToJ$: 10,\n        fpToJ$: 15,\n        rpToJ$: 12,\n        xpToJ$: 3,\n        j$ToUSD: 10\n    };\n}\nasync function savePointsConversionRates(rates) {\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_8__.kvSet)(\"data:points-conversion-rates\", rates);\n}\n// COMPANY ASSETS\nasync function getCompanyAssets() {\n    const assets = await (0,_kv__WEBPACK_IMPORTED_MODULE_8__.kvGet)(\"data:company-assets\");\n    return assets || {\n        cash: 0,\n        bank: 0,\n        bitcoin: 0,\n        toCharge: 0,\n        toPay: 0,\n        companyJ$: 0,\n        materials: {\n            value: 0,\n            cost: 0\n        },\n        equipment: {\n            value: 0,\n            cost: 0\n        },\n        artworks: {\n            value: 0,\n            cost: 0\n        },\n        prints: {\n            value: 0,\n            cost: 0\n        },\n        stickers: {\n            value: 0,\n            cost: 0\n        },\n        merch: {\n            value: 0,\n            cost: 0\n        }\n    };\n}\nasync function saveCompanyAssets(assets) {\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_8__.kvSet)(\"data:company-assets\", assets);\n}\n// PERSONAL ASSETS\nasync function getPersonalAssets() {\n    const assets = await (0,_kv__WEBPACK_IMPORTED_MODULE_8__.kvGet)(\"data:personal-assets\");\n    return assets || {\n        cash: 0,\n        bank: 0,\n        bitcoin: 0,\n        crypto: 0,\n        toCharge: 0,\n        toPay: 0,\n        personalJ$: 0,\n        vehicle: 0,\n        properties: 0,\n        nfts: 0,\n        other: 0\n    };\n}\nasync function savePersonalAssets(assets) {\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_8__.kvSet)(\"data:personal-assets\", assets);\n}\n// CONVERSION RATES\nasync function getConversionRates() {\n    const rates = await (0,_kv__WEBPACK_IMPORTED_MODULE_8__.kvGet)(\"data:conversion-rates\");\n    return rates || {\n        hpToJ$: 10,\n        fpToJ$: 15,\n        rpToJ$: 12,\n        xpToJ$: 3,\n        j$ToUSD: 10,\n        colonesToUsd: 500,\n        bitcoinToUsd: 50000,\n        jungleCoinsToUsd: 0.1\n    };\n}\nasync function saveConversionRates(rates) {\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_8__.kvSet)(\"data:conversion-rates\", rates);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./data-store/datastore.ts\n");

/***/ }),

/***/ "(rsc)/./data-store/effects-registry.ts":
/*!****************************************!*\
  !*** ./data-store/effects-registry.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearEffect: () => (/* binding */ clearEffect),\n/* harmony export */   clearEffectsByPrefix: () => (/* binding */ clearEffectsByPrefix),\n/* harmony export */   clearProcessingStack: () => (/* binding */ clearProcessingStack),\n/* harmony export */   endProcessing: () => (/* binding */ endProcessing),\n/* harmony export */   getProcessingStatus: () => (/* binding */ getProcessingStatus),\n/* harmony export */   hasEffect: () => (/* binding */ hasEffect),\n/* harmony export */   isProcessing: () => (/* binding */ isProcessing),\n/* harmony export */   markEffect: () => (/* binding */ markEffect),\n/* harmony export */   startProcessing: () => (/* binding */ startProcessing)\n/* harmony export */ });\n/* harmony import */ var _kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kv */ \"(rsc)/./data-store/kv.ts\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./keys */ \"(rsc)/./data-store/keys.ts\");\n// data-store/effects-registry.ts\n// Idempotency registry stored in KV. Avoids global flags and server HTTP loops.\n\n\nasync function hasEffect(effectKey) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildEffectKey)(effectKey);\n    const val = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n    return val === true;\n}\nasync function markEffect(effectKey, ttl) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildEffectKey)(effectKey);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, true);\n}\nasync function clearEffect(effectKey) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildEffectKey)(effectKey);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, false);\n}\nasync function clearEffectsByPrefix(entityType, entityId, prefix) {\n    // For now, we'll implement a simple version that clears all effects for an entity\n    // In a full implementation, this would scan and clear effects with the given prefix\n    console.log(`[clearEffectsByPrefix] Clearing effects for ${entityType}:${entityId} with prefix: ${prefix}`);\n// TODO: Implement proper prefix-based clearing when needed\n}\n// ============================================================================\n// LIGHTWEIGHT CIRCUIT BREAKER: Circular reference detection and depth limits\n// ============================================================================\n// Processing stack tracking for circular reference detection\nconst processingStack = new Set();\nconst MAX_DEPTH = 5;\n/**\r\n * Check if an entity is currently being processed\r\n */ function isProcessing(entityType, entityId) {\n    return processingStack.has(`${entityType}:${entityId}`);\n}\n/**\r\n * Start processing an entity - throws error if circular reference detected\r\n */ function startProcessing(entityType, entityId) {\n    const key = `${entityType}:${entityId}`;\n    if (processingStack.has(key)) {\n        throw new Error(`Circular reference detected: ${key}`);\n    }\n    if (processingStack.size >= MAX_DEPTH) {\n        throw new Error(`Max processing depth exceeded: ${MAX_DEPTH}`);\n    }\n    processingStack.add(key);\n    console.log(`[CircuitBreaker] Started processing: ${key} (depth: ${processingStack.size})`);\n}\n/**\r\n * End processing an entity\r\n */ function endProcessing(entityType, entityId) {\n    const key = `${entityType}:${entityId}`;\n    processingStack.delete(key);\n    console.log(`[CircuitBreaker] Ended processing: ${key} (depth: ${processingStack.size})`);\n}\n/**\r\n * Get current processing status for debugging\r\n */ function getProcessingStatus() {\n    return {\n        stack: Array.from(processingStack),\n        depth: processingStack.size,\n        maxDepth: MAX_DEPTH\n    };\n}\n/**\r\n * Clear all processing state (emergency reset)\r\n */ function clearProcessingStack() {\n    processingStack.clear();\n    console.log(`[CircuitBreaker] Cleared processing stack`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9kYXRhLXN0b3JlL2VmZmVjdHMtcmVnaXN0cnkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQSxpQ0FBaUM7QUFDakMsZ0ZBQWdGO0FBRTVDO0FBQ0k7QUFFakMsZUFBZUcsVUFBVUMsU0FBaUI7SUFDL0MsTUFBTUMsTUFBTUgscURBQWNBLENBQUNFO0lBQzNCLE1BQU1FLE1BQU0sTUFBTU4sMENBQUtBLENBQVVLO0lBQ2pDLE9BQU9DLFFBQVE7QUFDakI7QUFFTyxlQUFlQyxXQUFXSCxTQUFpQixFQUFFSSxHQUFZO0lBQzlELE1BQU1ILE1BQU1ILHFEQUFjQSxDQUFDRTtJQUMzQixNQUFNSCwwQ0FBS0EsQ0FBQ0ksS0FBSztBQUNuQjtBQUVPLGVBQWVJLFlBQVlMLFNBQWlCO0lBQ2pELE1BQU1DLE1BQU1ILHFEQUFjQSxDQUFDRTtJQUMzQixNQUFNSCwwQ0FBS0EsQ0FBQ0ksS0FBSztBQUNuQjtBQUVPLGVBQWVLLHFCQUFxQkMsVUFBa0IsRUFBRUMsUUFBZ0IsRUFBRUMsTUFBYztJQUM3RixrRkFBa0Y7SUFDbEYsb0ZBQW9GO0lBQ3BGQyxRQUFRQyxHQUFHLENBQUMsQ0FBQyw0Q0FBNEMsRUFBRUosV0FBVyxDQUFDLEVBQUVDLFNBQVMsY0FBYyxFQUFFQyxPQUFPLENBQUM7QUFDMUcsMkRBQTJEO0FBQzdEO0FBRUEsK0VBQStFO0FBQy9FLDZFQUE2RTtBQUM3RSwrRUFBK0U7QUFFL0UsNkRBQTZEO0FBQzdELE1BQU1HLGtCQUFrQixJQUFJQztBQUM1QixNQUFNQyxZQUFZO0FBRWxCOztDQUVDLEdBQ00sU0FBU0MsYUFBYVIsVUFBa0IsRUFBRUMsUUFBZ0I7SUFDL0QsT0FBT0ksZ0JBQWdCSSxHQUFHLENBQUMsQ0FBQyxFQUFFVCxXQUFXLENBQUMsRUFBRUMsU0FBUyxDQUFDO0FBQ3hEO0FBRUE7O0NBRUMsR0FDTSxTQUFTUyxnQkFBZ0JWLFVBQWtCLEVBQUVDLFFBQWdCO0lBQ2xFLE1BQU1QLE1BQU0sQ0FBQyxFQUFFTSxXQUFXLENBQUMsRUFBRUMsU0FBUyxDQUFDO0lBRXZDLElBQUlJLGdCQUFnQkksR0FBRyxDQUFDZixNQUFNO1FBQzVCLE1BQU0sSUFBSWlCLE1BQU0sQ0FBQyw2QkFBNkIsRUFBRWpCLElBQUksQ0FBQztJQUN2RDtJQUVBLElBQUlXLGdCQUFnQk8sSUFBSSxJQUFJTCxXQUFXO1FBQ3JDLE1BQU0sSUFBSUksTUFBTSxDQUFDLCtCQUErQixFQUFFSixVQUFVLENBQUM7SUFDL0Q7SUFFQUYsZ0JBQWdCUSxHQUFHLENBQUNuQjtJQUNwQlMsUUFBUUMsR0FBRyxDQUFDLENBQUMscUNBQXFDLEVBQUVWLElBQUksU0FBUyxFQUFFVyxnQkFBZ0JPLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDNUY7QUFFQTs7Q0FFQyxHQUNNLFNBQVNFLGNBQWNkLFVBQWtCLEVBQUVDLFFBQWdCO0lBQ2hFLE1BQU1QLE1BQU0sQ0FBQyxFQUFFTSxXQUFXLENBQUMsRUFBRUMsU0FBUyxDQUFDO0lBQ3ZDSSxnQkFBZ0JVLE1BQU0sQ0FBQ3JCO0lBQ3ZCUyxRQUFRQyxHQUFHLENBQUMsQ0FBQyxtQ0FBbUMsRUFBRVYsSUFBSSxTQUFTLEVBQUVXLGdCQUFnQk8sSUFBSSxDQUFDLENBQUMsQ0FBQztBQUMxRjtBQUVBOztDQUVDLEdBQ00sU0FBU0k7SUFLZCxPQUFPO1FBQ0xDLE9BQU9DLE1BQU1DLElBQUksQ0FBQ2Q7UUFDbEJlLE9BQU9mLGdCQUFnQk8sSUFBSTtRQUMzQlMsVUFBVWQ7SUFDWjtBQUNGO0FBRUE7O0NBRUMsR0FDTSxTQUFTZTtJQUNkakIsZ0JBQWdCa0IsS0FBSztJQUNyQnBCLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLHlDQUF5QyxDQUFDO0FBQ3pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGhlZ2FtZS1hZG1pbi8uL2RhdGEtc3RvcmUvZWZmZWN0cy1yZWdpc3RyeS50cz85NDliIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGRhdGEtc3RvcmUvZWZmZWN0cy1yZWdpc3RyeS50c1xyXG4vLyBJZGVtcG90ZW5jeSByZWdpc3RyeSBzdG9yZWQgaW4gS1YuIEF2b2lkcyBnbG9iYWwgZmxhZ3MgYW5kIHNlcnZlciBIVFRQIGxvb3BzLlxyXG5cclxuaW1wb3J0IHsga3ZHZXQsIGt2U2V0IH0gZnJvbSAnLi9rdic7XHJcbmltcG9ydCB7IGJ1aWxkRWZmZWN0S2V5IH0gZnJvbSAnLi9rZXlzJztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBoYXNFZmZlY3QoZWZmZWN0S2V5OiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+IHtcclxuICBjb25zdCBrZXkgPSBidWlsZEVmZmVjdEtleShlZmZlY3RLZXkpO1xyXG4gIGNvbnN0IHZhbCA9IGF3YWl0IGt2R2V0PGJvb2xlYW4+KGtleSk7XHJcbiAgcmV0dXJuIHZhbCA9PT0gdHJ1ZTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1hcmtFZmZlY3QoZWZmZWN0S2V5OiBzdHJpbmcsIHR0bD86IG51bWJlcik6IFByb21pc2U8dm9pZD4ge1xyXG4gIGNvbnN0IGtleSA9IGJ1aWxkRWZmZWN0S2V5KGVmZmVjdEtleSk7XHJcbiAgYXdhaXQga3ZTZXQoa2V5LCB0cnVlKTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNsZWFyRWZmZWN0KGVmZmVjdEtleTogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgY29uc3Qga2V5ID0gYnVpbGRFZmZlY3RLZXkoZWZmZWN0S2V5KTtcclxuICBhd2FpdCBrdlNldChrZXksIGZhbHNlKTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNsZWFyRWZmZWN0c0J5UHJlZml4KGVudGl0eVR5cGU6IHN0cmluZywgZW50aXR5SWQ6IHN0cmluZywgcHJlZml4OiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAvLyBGb3Igbm93LCB3ZSdsbCBpbXBsZW1lbnQgYSBzaW1wbGUgdmVyc2lvbiB0aGF0IGNsZWFycyBhbGwgZWZmZWN0cyBmb3IgYW4gZW50aXR5XHJcbiAgLy8gSW4gYSBmdWxsIGltcGxlbWVudGF0aW9uLCB0aGlzIHdvdWxkIHNjYW4gYW5kIGNsZWFyIGVmZmVjdHMgd2l0aCB0aGUgZ2l2ZW4gcHJlZml4XHJcbiAgY29uc29sZS5sb2coYFtjbGVhckVmZmVjdHNCeVByZWZpeF0gQ2xlYXJpbmcgZWZmZWN0cyBmb3IgJHtlbnRpdHlUeXBlfToke2VudGl0eUlkfSB3aXRoIHByZWZpeDogJHtwcmVmaXh9YCk7XHJcbiAgLy8gVE9ETzogSW1wbGVtZW50IHByb3BlciBwcmVmaXgtYmFzZWQgY2xlYXJpbmcgd2hlbiBuZWVkZWRcclxufVxyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBMSUdIVFdFSUdIVCBDSVJDVUlUIEJSRUFLRVI6IENpcmN1bGFyIHJlZmVyZW5jZSBkZXRlY3Rpb24gYW5kIGRlcHRoIGxpbWl0c1xyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG4vLyBQcm9jZXNzaW5nIHN0YWNrIHRyYWNraW5nIGZvciBjaXJjdWxhciByZWZlcmVuY2UgZGV0ZWN0aW9uXHJcbmNvbnN0IHByb2Nlc3NpbmdTdGFjayA9IG5ldyBTZXQ8c3RyaW5nPigpO1xyXG5jb25zdCBNQVhfREVQVEggPSA1O1xyXG5cclxuLyoqXHJcbiAqIENoZWNrIGlmIGFuIGVudGl0eSBpcyBjdXJyZW50bHkgYmVpbmcgcHJvY2Vzc2VkXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNQcm9jZXNzaW5nKGVudGl0eVR5cGU6IHN0cmluZywgZW50aXR5SWQ6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gIHJldHVybiBwcm9jZXNzaW5nU3RhY2suaGFzKGAke2VudGl0eVR5cGV9OiR7ZW50aXR5SWR9YCk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBTdGFydCBwcm9jZXNzaW5nIGFuIGVudGl0eSAtIHRocm93cyBlcnJvciBpZiBjaXJjdWxhciByZWZlcmVuY2UgZGV0ZWN0ZWRcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBzdGFydFByb2Nlc3NpbmcoZW50aXR5VHlwZTogc3RyaW5nLCBlbnRpdHlJZDogc3RyaW5nKTogdm9pZCB7XHJcbiAgY29uc3Qga2V5ID0gYCR7ZW50aXR5VHlwZX06JHtlbnRpdHlJZH1gO1xyXG4gIFxyXG4gIGlmIChwcm9jZXNzaW5nU3RhY2suaGFzKGtleSkpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihgQ2lyY3VsYXIgcmVmZXJlbmNlIGRldGVjdGVkOiAke2tleX1gKTtcclxuICB9XHJcbiAgXHJcbiAgaWYgKHByb2Nlc3NpbmdTdGFjay5zaXplID49IE1BWF9ERVBUSCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKGBNYXggcHJvY2Vzc2luZyBkZXB0aCBleGNlZWRlZDogJHtNQVhfREVQVEh9YCk7XHJcbiAgfVxyXG4gIFxyXG4gIHByb2Nlc3NpbmdTdGFjay5hZGQoa2V5KTtcclxuICBjb25zb2xlLmxvZyhgW0NpcmN1aXRCcmVha2VyXSBTdGFydGVkIHByb2Nlc3Npbmc6ICR7a2V5fSAoZGVwdGg6ICR7cHJvY2Vzc2luZ1N0YWNrLnNpemV9KWApO1xyXG59XHJcblxyXG4vKipcclxuICogRW5kIHByb2Nlc3NpbmcgYW4gZW50aXR5XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZW5kUHJvY2Vzc2luZyhlbnRpdHlUeXBlOiBzdHJpbmcsIGVudGl0eUlkOiBzdHJpbmcpOiB2b2lkIHtcclxuICBjb25zdCBrZXkgPSBgJHtlbnRpdHlUeXBlfToke2VudGl0eUlkfWA7XHJcbiAgcHJvY2Vzc2luZ1N0YWNrLmRlbGV0ZShrZXkpO1xyXG4gIGNvbnNvbGUubG9nKGBbQ2lyY3VpdEJyZWFrZXJdIEVuZGVkIHByb2Nlc3Npbmc6ICR7a2V5fSAoZGVwdGg6ICR7cHJvY2Vzc2luZ1N0YWNrLnNpemV9KWApO1xyXG59XHJcblxyXG4vKipcclxuICogR2V0IGN1cnJlbnQgcHJvY2Vzc2luZyBzdGF0dXMgZm9yIGRlYnVnZ2luZ1xyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdldFByb2Nlc3NpbmdTdGF0dXMoKToge1xyXG4gIHN0YWNrOiBzdHJpbmdbXTtcclxuICBkZXB0aDogbnVtYmVyO1xyXG4gIG1heERlcHRoOiBudW1iZXI7XHJcbn0ge1xyXG4gIHJldHVybiB7XHJcbiAgICBzdGFjazogQXJyYXkuZnJvbShwcm9jZXNzaW5nU3RhY2spLFxyXG4gICAgZGVwdGg6IHByb2Nlc3NpbmdTdGFjay5zaXplLFxyXG4gICAgbWF4RGVwdGg6IE1BWF9ERVBUSFxyXG4gIH07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDbGVhciBhbGwgcHJvY2Vzc2luZyBzdGF0ZSAoZW1lcmdlbmN5IHJlc2V0KVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyUHJvY2Vzc2luZ1N0YWNrKCk6IHZvaWQge1xyXG4gIHByb2Nlc3NpbmdTdGFjay5jbGVhcigpO1xyXG4gIGNvbnNvbGUubG9nKGBbQ2lyY3VpdEJyZWFrZXJdIENsZWFyZWQgcHJvY2Vzc2luZyBzdGFja2ApO1xyXG59XHJcblxyXG5cclxuIl0sIm5hbWVzIjpbImt2R2V0Iiwia3ZTZXQiLCJidWlsZEVmZmVjdEtleSIsImhhc0VmZmVjdCIsImVmZmVjdEtleSIsImtleSIsInZhbCIsIm1hcmtFZmZlY3QiLCJ0dGwiLCJjbGVhckVmZmVjdCIsImNsZWFyRWZmZWN0c0J5UHJlZml4IiwiZW50aXR5VHlwZSIsImVudGl0eUlkIiwicHJlZml4IiwiY29uc29sZSIsImxvZyIsInByb2Nlc3NpbmdTdGFjayIsIlNldCIsIk1BWF9ERVBUSCIsImlzUHJvY2Vzc2luZyIsImhhcyIsInN0YXJ0UHJvY2Vzc2luZyIsIkVycm9yIiwic2l6ZSIsImFkZCIsImVuZFByb2Nlc3NpbmciLCJkZWxldGUiLCJnZXRQcm9jZXNzaW5nU3RhdHVzIiwic3RhY2siLCJBcnJheSIsImZyb20iLCJkZXB0aCIsIm1heERlcHRoIiwiY2xlYXJQcm9jZXNzaW5nU3RhY2siLCJjbGVhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./data-store/effects-registry.ts\n");

/***/ }),

/***/ "(rsc)/./data-store/keys.ts":
/*!****************************!*\
  !*** ./data-store/keys.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildDataKey: () => (/* binding */ buildDataKey),\n/* harmony export */   buildEffectKey: () => (/* binding */ buildEffectKey),\n/* harmony export */   buildIndexKey: () => (/* binding */ buildIndexKey),\n/* harmony export */   buildLinkKey: () => (/* binding */ buildLinkKey),\n/* harmony export */   buildLinksIndexKey: () => (/* binding */ buildLinksIndexKey),\n/* harmony export */   buildLogKey: () => (/* binding */ buildLogKey)\n/* harmony export */ });\n// data-store/keys.ts\n// Centralized KV key builders. Keep shapes consistent across repositories.\n// Production-only system - no environment namespacing needed\nfunction buildDataKey(entity, id) {\n    return `data:${entity}:${id}`;\n}\nfunction buildIndexKey(entity) {\n    return `index:${entity}`; // set of ids\n}\nfunction buildLinksIndexKey(entityType, id) {\n    return `index:links:by-entity:${entityType}:${id}`; // set of link ids\n}\nfunction buildLinkKey(id) {\n    return `links:link:${id}`;\n}\nfunction buildEffectKey(effectKey) {\n    return `effects:${effectKey}`;\n}\nfunction buildLogKey(entity, yyyymm) {\n    return yyyymm ? `logs:${entity}:${yyyymm}` : `logs:${entity}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9kYXRhLXN0b3JlL2tleXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEscUJBQXFCO0FBQ3JCLDJFQUEyRTtBQUMzRSw2REFBNkQ7QUFFdEQsU0FBU0EsYUFBYUMsTUFBYyxFQUFFQyxFQUFVO0lBQ3JELE9BQU8sQ0FBQyxLQUFLLEVBQUVELE9BQU8sQ0FBQyxFQUFFQyxHQUFHLENBQUM7QUFDL0I7QUFFTyxTQUFTQyxjQUFjRixNQUFjO0lBQzFDLE9BQU8sQ0FBQyxNQUFNLEVBQUVBLE9BQU8sQ0FBQyxFQUFFLGFBQWE7QUFDekM7QUFFTyxTQUFTRyxtQkFBbUJDLFVBQWtCLEVBQUVILEVBQVU7SUFDL0QsT0FBTyxDQUFDLHNCQUFzQixFQUFFRyxXQUFXLENBQUMsRUFBRUgsR0FBRyxDQUFDLEVBQUUsa0JBQWtCO0FBQ3hFO0FBRU8sU0FBU0ksYUFBYUosRUFBVTtJQUNyQyxPQUFPLENBQUMsV0FBVyxFQUFFQSxHQUFHLENBQUM7QUFDM0I7QUFFTyxTQUFTSyxlQUFlQyxTQUFpQjtJQUM5QyxPQUFPLENBQUMsUUFBUSxFQUFFQSxVQUFVLENBQUM7QUFDL0I7QUFFTyxTQUFTQyxZQUFZUixNQUFjLEVBQUVTLE1BQWU7SUFDekQsT0FBT0EsU0FDSCxDQUFDLEtBQUssRUFBRVQsT0FBTyxDQUFDLEVBQUVTLE9BQU8sQ0FBQyxHQUMxQixDQUFDLEtBQUssRUFBRVQsT0FBTyxDQUFDO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGhlZ2FtZS1hZG1pbi8uL2RhdGEtc3RvcmUva2V5cy50cz83MGUyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGRhdGEtc3RvcmUva2V5cy50c1xyXG4vLyBDZW50cmFsaXplZCBLViBrZXkgYnVpbGRlcnMuIEtlZXAgc2hhcGVzIGNvbnNpc3RlbnQgYWNyb3NzIHJlcG9zaXRvcmllcy5cclxuLy8gUHJvZHVjdGlvbi1vbmx5IHN5c3RlbSAtIG5vIGVudmlyb25tZW50IG5hbWVzcGFjaW5nIG5lZWRlZFxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkRGF0YUtleShlbnRpdHk6IHN0cmluZywgaWQ6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgcmV0dXJuIGBkYXRhOiR7ZW50aXR5fToke2lkfWA7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBidWlsZEluZGV4S2V5KGVudGl0eTogc3RyaW5nKTogc3RyaW5nIHtcclxuICByZXR1cm4gYGluZGV4OiR7ZW50aXR5fWA7IC8vIHNldCBvZiBpZHNcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkTGlua3NJbmRleEtleShlbnRpdHlUeXBlOiBzdHJpbmcsIGlkOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gIHJldHVybiBgaW5kZXg6bGlua3M6YnktZW50aXR5OiR7ZW50aXR5VHlwZX06JHtpZH1gOyAvLyBzZXQgb2YgbGluayBpZHNcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkTGlua0tleShpZDogc3RyaW5nKTogc3RyaW5nIHtcclxuICByZXR1cm4gYGxpbmtzOmxpbms6JHtpZH1gO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRFZmZlY3RLZXkoZWZmZWN0S2V5OiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gIHJldHVybiBgZWZmZWN0czoke2VmZmVjdEtleX1gO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRMb2dLZXkoZW50aXR5OiBzdHJpbmcsIHl5eXltbT86IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgcmV0dXJuIHl5eXltbVxyXG4gICAgPyBgbG9nczoke2VudGl0eX06JHt5eXl5bW19YFxyXG4gICAgOiBgbG9nczoke2VudGl0eX1gO1xyXG59XHJcblxyXG5cclxuIl0sIm5hbWVzIjpbImJ1aWxkRGF0YUtleSIsImVudGl0eSIsImlkIiwiYnVpbGRJbmRleEtleSIsImJ1aWxkTGlua3NJbmRleEtleSIsImVudGl0eVR5cGUiLCJidWlsZExpbmtLZXkiLCJidWlsZEVmZmVjdEtleSIsImVmZmVjdEtleSIsImJ1aWxkTG9nS2V5IiwieXl5eW1tIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./data-store/keys.ts\n");

/***/ }),

/***/ "(rsc)/./data-store/kv.ts":
/*!**************************!*\
  !*** ./data-store/kv.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   kvDel: () => (/* binding */ kvDel),\n/* harmony export */   kvGet: () => (/* binding */ kvGet),\n/* harmony export */   kvMGet: () => (/* binding */ kvMGet),\n/* harmony export */   kvSAdd: () => (/* binding */ kvSAdd),\n/* harmony export */   kvSMembers: () => (/* binding */ kvSMembers),\n/* harmony export */   kvSRem: () => (/* binding */ kvSRem),\n/* harmony export */   kvScan: () => (/* binding */ kvScan),\n/* harmony export */   kvSet: () => (/* binding */ kvSet)\n/* harmony export */ });\n/* harmony import */ var _vercel_kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vercel/kv */ \"(rsc)/./node_modules/@vercel/kv/dist/index.js\");\n// data-store/kv.ts\n// Thin server-only wrappers around @vercel/kv. No HTTP calls to own routes.\n\nasync function kvGet(key) {\n    return await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.get(key) ?? null;\n}\nasync function kvSet(key, value) {\n    await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.set(key, value);\n}\nasync function kvDel(key) {\n    await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.del(key);\n}\nasync function kvMGet(keys) {\n    const res = await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.mget(keys);\n    return res.map((v)=>v ?? null);\n}\nasync function kvScan(prefix, limit = 100) {\n    const keys = [];\n    const iter = _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.scanIterator({\n        match: `${prefix}*`,\n        count: limit\n    });\n    for await (const key of iter){\n        keys.push(key);\n    }\n    return keys;\n}\nasync function kvSAdd(key, ...members) {\n    if (members.length) await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.sadd(key, ...members);\n}\nasync function kvSRem(key, ...members) {\n    if (members.length) await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.srem(key, ...members);\n}\nasync function kvSMembers(key) {\n    const members = await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.smembers(key);\n    return members ?? [];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9kYXRhLXN0b3JlL2t2LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLG1CQUFtQjtBQUNuQiw0RUFBNEU7QUFFNUM7QUFFekIsZUFBZUMsTUFBU0MsR0FBVztJQUN4QyxPQUFPLE1BQU9GLDBDQUFFQSxDQUFDRyxHQUFHLENBQUlELFFBQVM7QUFDbkM7QUFFTyxlQUFlRSxNQUFTRixHQUFXLEVBQUVHLEtBQVE7SUFDbEQsTUFBTUwsMENBQUVBLENBQUNNLEdBQUcsQ0FBQ0osS0FBS0c7QUFDcEI7QUFFTyxlQUFlRSxNQUFNTCxHQUFXO0lBQ3JDLE1BQU1GLDBDQUFFQSxDQUFDUSxHQUFHLENBQUNOO0FBQ2Y7QUFFTyxlQUFlTyxPQUFVQyxJQUFjO0lBQzVDLE1BQU1DLE1BQU0sTUFBTVgsMENBQUVBLENBQUNZLElBQUksQ0FBQ0Y7SUFDMUIsT0FBTyxJQUFlRyxHQUFHLENBQUNDLENBQUFBLElBQU1BLEtBQUs7QUFDdkM7QUFFTyxlQUFlQyxPQUFPQyxNQUFjLEVBQUVDLFFBQVEsR0FBRztJQUN0RCxNQUFNUCxPQUFpQixFQUFFO0lBQ3pCLE1BQU1RLE9BQU9sQiwwQ0FBRUEsQ0FBQ21CLFlBQVksQ0FBQztRQUFFQyxPQUFPLENBQUMsRUFBRUosT0FBTyxDQUFDLENBQUM7UUFBRUssT0FBT0o7SUFBTTtJQUNqRSxXQUFXLE1BQU1mLE9BQU9nQixLQUFNO1FBQzVCUixLQUFLWSxJQUFJLENBQUNwQjtJQUNaO0lBQ0EsT0FBT1E7QUFDVDtBQUVPLGVBQWVhLE9BQU9yQixHQUFXLEVBQUUsR0FBR3NCLE9BQWlCO0lBQzVELElBQUlBLFFBQVFDLE1BQU0sRUFBRSxNQUFNekIsMENBQUVBLENBQUMwQixJQUFJLENBQUN4QixRQUFTc0I7QUFDN0M7QUFFTyxlQUFlRyxPQUFPekIsR0FBVyxFQUFFLEdBQUdzQixPQUFpQjtJQUM1RCxJQUFJQSxRQUFRQyxNQUFNLEVBQUUsTUFBTXpCLDBDQUFFQSxDQUFDNEIsSUFBSSxDQUFDMUIsUUFBU3NCO0FBQzdDO0FBRU8sZUFBZUssV0FBVzNCLEdBQVc7SUFDMUMsTUFBTXNCLFVBQVUsTUFBTXhCLDBDQUFFQSxDQUFDOEIsUUFBUSxDQUFDNUI7SUFDbEMsT0FBT3NCLFdBQVcsRUFBRTtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL3RoZWdhbWUtYWRtaW4vLi9kYXRhLXN0b3JlL2t2LnRzPzc1NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGF0YS1zdG9yZS9rdi50c1xyXG4vLyBUaGluIHNlcnZlci1vbmx5IHdyYXBwZXJzIGFyb3VuZCBAdmVyY2VsL2t2LiBObyBIVFRQIGNhbGxzIHRvIG93biByb3V0ZXMuXHJcblxyXG5pbXBvcnQgeyBrdiB9IGZyb20gJ0B2ZXJjZWwva3YnO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGt2R2V0PFQ+KGtleTogc3RyaW5nKTogUHJvbWlzZTxUIHwgbnVsbD4ge1xyXG4gIHJldHVybiAoYXdhaXQga3YuZ2V0PFQ+KGtleSkpID8/IG51bGw7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBrdlNldDxUPihrZXk6IHN0cmluZywgdmFsdWU6IFQpOiBQcm9taXNlPHZvaWQ+IHtcclxuICBhd2FpdCBrdi5zZXQoa2V5LCB2YWx1ZSBhcyBhbnkpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24ga3ZEZWwoa2V5OiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcclxuICBhd2FpdCBrdi5kZWwoa2V5KTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGt2TUdldDxUPihrZXlzOiBzdHJpbmdbXSk6IFByb21pc2U8KFQgfCBudWxsKVtdPiB7XHJcbiAgY29uc3QgcmVzID0gYXdhaXQga3YubWdldChrZXlzKTtcclxuICByZXR1cm4gKHJlcyBhcyBhbnlbXSkubWFwKHYgPT4gKHYgPz8gbnVsbCkpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24ga3ZTY2FuKHByZWZpeDogc3RyaW5nLCBsaW1pdCA9IDEwMCk6IFByb21pc2U8c3RyaW5nW10+IHtcclxuICBjb25zdCBrZXlzOiBzdHJpbmdbXSA9IFtdO1xyXG4gIGNvbnN0IGl0ZXIgPSBrdi5zY2FuSXRlcmF0b3IoeyBtYXRjaDogYCR7cHJlZml4fSpgLCBjb3VudDogbGltaXQgfSk7XHJcbiAgZm9yIGF3YWl0IChjb25zdCBrZXkgb2YgaXRlcikge1xyXG4gICAga2V5cy5wdXNoKGtleSBhcyBzdHJpbmcpO1xyXG4gIH1cclxuICByZXR1cm4ga2V5cztcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGt2U0FkZChrZXk6IHN0cmluZywgLi4ubWVtYmVyczogc3RyaW5nW10pOiBQcm9taXNlPHZvaWQ+IHtcclxuICBpZiAobWVtYmVycy5sZW5ndGgpIGF3YWl0IGt2LnNhZGQoa2V5LCAuLi4obWVtYmVycyBhcyBbc3RyaW5nLCAuLi5zdHJpbmdbXV0pKTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGt2U1JlbShrZXk6IHN0cmluZywgLi4ubWVtYmVyczogc3RyaW5nW10pOiBQcm9taXNlPHZvaWQ+IHtcclxuICBpZiAobWVtYmVycy5sZW5ndGgpIGF3YWl0IGt2LnNyZW0oa2V5LCAuLi4obWVtYmVycyBhcyBbc3RyaW5nLCAuLi5zdHJpbmdbXV0pKTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGt2U01lbWJlcnMoa2V5OiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZ1tdPiB7XHJcbiAgY29uc3QgbWVtYmVycyA9IGF3YWl0IGt2LnNtZW1iZXJzKGtleSk7XHJcbiAgcmV0dXJuIG1lbWJlcnMgPz8gW107XHJcbn1cclxuXHJcblxyXG4iXSwibmFtZXMiOlsia3YiLCJrdkdldCIsImtleSIsImdldCIsImt2U2V0IiwidmFsdWUiLCJzZXQiLCJrdkRlbCIsImRlbCIsImt2TUdldCIsImtleXMiLCJyZXMiLCJtZ2V0IiwibWFwIiwidiIsImt2U2NhbiIsInByZWZpeCIsImxpbWl0IiwiaXRlciIsInNjYW5JdGVyYXRvciIsIm1hdGNoIiwiY291bnQiLCJwdXNoIiwia3ZTQWRkIiwibWVtYmVycyIsImxlbmd0aCIsInNhZGQiLCJrdlNSZW0iLCJzcmVtIiwia3ZTTWVtYmVycyIsInNtZW1iZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./data-store/kv.ts\n");

/***/ }),

/***/ "(rsc)/./data-store/repositories/character.repo.ts":
/*!***************************************************!*\
  !*** ./data-store/repositories/character.repo.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteCharacter: () => (/* binding */ deleteCharacter),\n/* harmony export */   getAllCharacters: () => (/* binding */ getAllCharacters),\n/* harmony export */   getCharacterById: () => (/* binding */ getCharacterById),\n/* harmony export */   upsertCharacter: () => (/* binding */ upsertCharacter)\n/* harmony export */ });\n/* harmony import */ var _kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../kv */ \"(rsc)/./data-store/kv.ts\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../keys */ \"(rsc)/./data-store/keys.ts\");\n// data-store/repositories/character.repo.ts\n\n\nconst ENTITY = \"characters\";\nasync function getAllCharacters() {\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    const ids = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)(indexKey);\n    if (ids.length === 0) return [];\n    const characters = [];\n    for (const id of ids){\n        const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n        const character = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n        if (character) characters.push(character);\n    }\n    return characters;\n}\nasync function getCharacterById(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    return await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n}\nasync function upsertCharacter(character) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, character.id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, character);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)(indexKey, character.id);\n    return character;\n}\nasync function deleteCharacter(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)(key);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)(indexKey, id);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9kYXRhLXN0b3JlL3JlcG9zaXRvcmllcy9jaGFyYWN0ZXIucmVwby50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSw0Q0FBNEM7QUFDNEI7QUFDbEI7QUFHdEQsTUFBTVEsU0FBUztBQUVSLGVBQWVDO0lBQ3BCLE1BQU1DLFdBQVdILG9EQUFhQSxDQUFDQztJQUMvQixNQUFNRyxNQUFNLE1BQU1OLCtDQUFVQSxDQUFDSztJQUM3QixJQUFJQyxJQUFJQyxNQUFNLEtBQUssR0FBRyxPQUFPLEVBQUU7SUFFL0IsTUFBTUMsYUFBMEIsRUFBRTtJQUNsQyxLQUFLLE1BQU1DLE1BQU1ILElBQUs7UUFDcEIsTUFBTUksTUFBTVQsbURBQVlBLENBQUNFLFFBQVFNO1FBQ2pDLE1BQU1FLFlBQVksTUFBTWhCLDBDQUFLQSxDQUFZZTtRQUN6QyxJQUFJQyxXQUFXSCxXQUFXSSxJQUFJLENBQUNEO0lBQ2pDO0lBRUEsT0FBT0g7QUFDVDtBQUVPLGVBQWVLLGlCQUFpQkosRUFBVTtJQUMvQyxNQUFNQyxNQUFNVCxtREFBWUEsQ0FBQ0UsUUFBUU07SUFDakMsT0FBTyxNQUFNZCwwQ0FBS0EsQ0FBWWU7QUFDaEM7QUFFTyxlQUFlSSxnQkFBZ0JILFNBQW9CO0lBQ3hELE1BQU1ELE1BQU1ULG1EQUFZQSxDQUFDRSxRQUFRUSxVQUFVRixFQUFFO0lBQzdDLE1BQU1KLFdBQVdILG9EQUFhQSxDQUFDQztJQUUvQixNQUFNUCwwQ0FBS0EsQ0FBQ2MsS0FBS0M7SUFDakIsTUFBTWIsMkNBQU1BLENBQUNPLFVBQVVNLFVBQVVGLEVBQUU7SUFFbkMsT0FBT0U7QUFDVDtBQUVPLGVBQWVJLGdCQUFnQk4sRUFBVTtJQUM5QyxNQUFNQyxNQUFNVCxtREFBWUEsQ0FBQ0UsUUFBUU07SUFDakMsTUFBTUosV0FBV0gsb0RBQWFBLENBQUNDO0lBRS9CLE1BQU1OLDBDQUFLQSxDQUFDYTtJQUNaLE1BQU1YLDJDQUFNQSxDQUFDTSxVQUFVSTtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL3RoZWdhbWUtYWRtaW4vLi9kYXRhLXN0b3JlL3JlcG9zaXRvcmllcy9jaGFyYWN0ZXIucmVwby50cz9lYTU0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGRhdGEtc3RvcmUvcmVwb3NpdG9yaWVzL2NoYXJhY3Rlci5yZXBvLnRzXHJcbmltcG9ydCB7IGt2R2V0LCBrdlNldCwga3ZEZWwsIGt2U0FkZCwga3ZTUmVtLCBrdlNNZW1iZXJzIH0gZnJvbSAnLi4va3YnO1xyXG5pbXBvcnQgeyBidWlsZERhdGFLZXksIGJ1aWxkSW5kZXhLZXkgfSBmcm9tICcuLi9rZXlzJztcclxuaW1wb3J0IHR5cGUgeyBDaGFyYWN0ZXIgfSBmcm9tICdAL3R5cGVzL2VudGl0aWVzJztcclxuXHJcbmNvbnN0IEVOVElUWSA9ICdjaGFyYWN0ZXJzJztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBbGxDaGFyYWN0ZXJzKCk6IFByb21pc2U8Q2hhcmFjdGVyW10+IHtcclxuICBjb25zdCBpbmRleEtleSA9IGJ1aWxkSW5kZXhLZXkoRU5USVRZKTtcclxuICBjb25zdCBpZHMgPSBhd2FpdCBrdlNNZW1iZXJzKGluZGV4S2V5KTtcclxuICBpZiAoaWRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIFtdO1xyXG4gIFxyXG4gIGNvbnN0IGNoYXJhY3RlcnM6IENoYXJhY3RlcltdID0gW107XHJcbiAgZm9yIChjb25zdCBpZCBvZiBpZHMpIHtcclxuICAgIGNvbnN0IGtleSA9IGJ1aWxkRGF0YUtleShFTlRJVFksIGlkKTtcclxuICAgIGNvbnN0IGNoYXJhY3RlciA9IGF3YWl0IGt2R2V0PENoYXJhY3Rlcj4oa2V5KTtcclxuICAgIGlmIChjaGFyYWN0ZXIpIGNoYXJhY3RlcnMucHVzaChjaGFyYWN0ZXIpO1xyXG4gIH1cclxuICBcclxuICByZXR1cm4gY2hhcmFjdGVycztcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldENoYXJhY3RlckJ5SWQoaWQ6IHN0cmluZyk6IFByb21pc2U8Q2hhcmFjdGVyIHwgbnVsbD4ge1xyXG4gIGNvbnN0IGtleSA9IGJ1aWxkRGF0YUtleShFTlRJVFksIGlkKTtcclxuICByZXR1cm4gYXdhaXQga3ZHZXQ8Q2hhcmFjdGVyPihrZXkpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdXBzZXJ0Q2hhcmFjdGVyKGNoYXJhY3RlcjogQ2hhcmFjdGVyKTogUHJvbWlzZTxDaGFyYWN0ZXI+IHtcclxuICBjb25zdCBrZXkgPSBidWlsZERhdGFLZXkoRU5USVRZLCBjaGFyYWN0ZXIuaWQpO1xyXG4gIGNvbnN0IGluZGV4S2V5ID0gYnVpbGRJbmRleEtleShFTlRJVFkpO1xyXG4gIFxyXG4gIGF3YWl0IGt2U2V0KGtleSwgY2hhcmFjdGVyKTtcclxuICBhd2FpdCBrdlNBZGQoaW5kZXhLZXksIGNoYXJhY3Rlci5pZCk7XHJcbiAgXHJcbiAgcmV0dXJuIGNoYXJhY3RlcjtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRlbGV0ZUNoYXJhY3RlcihpZDogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgY29uc3Qga2V5ID0gYnVpbGREYXRhS2V5KEVOVElUWSwgaWQpO1xyXG4gIGNvbnN0IGluZGV4S2V5ID0gYnVpbGRJbmRleEtleShFTlRJVFkpO1xyXG4gIFxyXG4gIGF3YWl0IGt2RGVsKGtleSk7XHJcbiAgYXdhaXQga3ZTUmVtKGluZGV4S2V5LCBpZCk7XHJcbn1cclxuIl0sIm5hbWVzIjpbImt2R2V0Iiwia3ZTZXQiLCJrdkRlbCIsImt2U0FkZCIsImt2U1JlbSIsImt2U01lbWJlcnMiLCJidWlsZERhdGFLZXkiLCJidWlsZEluZGV4S2V5IiwiRU5USVRZIiwiZ2V0QWxsQ2hhcmFjdGVycyIsImluZGV4S2V5IiwiaWRzIiwibGVuZ3RoIiwiY2hhcmFjdGVycyIsImlkIiwia2V5IiwiY2hhcmFjdGVyIiwicHVzaCIsImdldENoYXJhY3RlckJ5SWQiLCJ1cHNlcnRDaGFyYWN0ZXIiLCJkZWxldGVDaGFyYWN0ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./data-store/repositories/character.repo.ts\n");

/***/ }),

/***/ "(rsc)/./data-store/repositories/financial.repo.ts":
/*!***************************************************!*\
  !*** ./data-store/repositories/financial.repo.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteFinancial: () => (/* binding */ deleteFinancial),\n/* harmony export */   getAllFinancials: () => (/* binding */ getAllFinancials),\n/* harmony export */   getFinancialById: () => (/* binding */ getFinancialById),\n/* harmony export */   upsertFinancial: () => (/* binding */ upsertFinancial)\n/* harmony export */ });\n/* harmony import */ var _kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../kv */ \"(rsc)/./data-store/kv.ts\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../keys */ \"(rsc)/./data-store/keys.ts\");\n// data-store/repositories/financial.repo.ts\n\n\nconst ENTITY = \"financials\";\nasync function getAllFinancials() {\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    const ids = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)(indexKey);\n    if (ids.length === 0) return [];\n    const financials = [];\n    for (const id of ids){\n        const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n        const financial = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n        if (financial) financials.push(financial);\n    }\n    return financials;\n}\nasync function getFinancialById(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    return await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n}\nasync function upsertFinancial(financial) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, financial.id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, financial);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)(indexKey, financial.id);\n    return financial;\n}\nasync function deleteFinancial(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)(key);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)(indexKey, id);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9kYXRhLXN0b3JlL3JlcG9zaXRvcmllcy9maW5hbmNpYWwucmVwby50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSw0Q0FBNEM7QUFDNEI7QUFDbEI7QUFHdEQsTUFBTVEsU0FBUztBQUVSLGVBQWVDO0lBQ3BCLE1BQU1DLFdBQVdILG9EQUFhQSxDQUFDQztJQUMvQixNQUFNRyxNQUFNLE1BQU1OLCtDQUFVQSxDQUFDSztJQUM3QixJQUFJQyxJQUFJQyxNQUFNLEtBQUssR0FBRyxPQUFPLEVBQUU7SUFFL0IsTUFBTUMsYUFBZ0MsRUFBRTtJQUN4QyxLQUFLLE1BQU1DLE1BQU1ILElBQUs7UUFDcEIsTUFBTUksTUFBTVQsbURBQVlBLENBQUNFLFFBQVFNO1FBQ2pDLE1BQU1FLFlBQVksTUFBTWhCLDBDQUFLQSxDQUFrQmU7UUFDL0MsSUFBSUMsV0FBV0gsV0FBV0ksSUFBSSxDQUFDRDtJQUNqQztJQUVBLE9BQU9IO0FBQ1Q7QUFFTyxlQUFlSyxpQkFBaUJKLEVBQVU7SUFDL0MsTUFBTUMsTUFBTVQsbURBQVlBLENBQUNFLFFBQVFNO0lBQ2pDLE9BQU8sTUFBTWQsMENBQUtBLENBQWtCZTtBQUN0QztBQUVPLGVBQWVJLGdCQUFnQkgsU0FBMEI7SUFDOUQsTUFBTUQsTUFBTVQsbURBQVlBLENBQUNFLFFBQVFRLFVBQVVGLEVBQUU7SUFDN0MsTUFBTUosV0FBV0gsb0RBQWFBLENBQUNDO0lBRS9CLE1BQU1QLDBDQUFLQSxDQUFDYyxLQUFLQztJQUNqQixNQUFNYiwyQ0FBTUEsQ0FBQ08sVUFBVU0sVUFBVUYsRUFBRTtJQUVuQyxPQUFPRTtBQUNUO0FBRU8sZUFBZUksZ0JBQWdCTixFQUFVO0lBQzlDLE1BQU1DLE1BQU1ULG1EQUFZQSxDQUFDRSxRQUFRTTtJQUNqQyxNQUFNSixXQUFXSCxvREFBYUEsQ0FBQ0M7SUFFL0IsTUFBTU4sMENBQUtBLENBQUNhO0lBQ1osTUFBTVgsMkNBQU1BLENBQUNNLFVBQVVJO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGhlZ2FtZS1hZG1pbi8uL2RhdGEtc3RvcmUvcmVwb3NpdG9yaWVzL2ZpbmFuY2lhbC5yZXBvLnRzP2RlMGEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGF0YS1zdG9yZS9yZXBvc2l0b3JpZXMvZmluYW5jaWFsLnJlcG8udHNcclxuaW1wb3J0IHsga3ZHZXQsIGt2U2V0LCBrdkRlbCwga3ZTQWRkLCBrdlNSZW0sIGt2U01lbWJlcnMgfSBmcm9tICcuLi9rdic7XHJcbmltcG9ydCB7IGJ1aWxkRGF0YUtleSwgYnVpbGRJbmRleEtleSB9IGZyb20gJy4uL2tleXMnO1xyXG5pbXBvcnQgdHlwZSB7IEZpbmFuY2lhbFJlY29yZCB9IGZyb20gJ0AvdHlwZXMvZW50aXRpZXMnO1xyXG5cclxuY29uc3QgRU5USVRZID0gJ2ZpbmFuY2lhbHMnO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEFsbEZpbmFuY2lhbHMoKTogUHJvbWlzZTxGaW5hbmNpYWxSZWNvcmRbXT4ge1xyXG4gIGNvbnN0IGluZGV4S2V5ID0gYnVpbGRJbmRleEtleShFTlRJVFkpO1xyXG4gIGNvbnN0IGlkcyA9IGF3YWl0IGt2U01lbWJlcnMoaW5kZXhLZXkpO1xyXG4gIGlmIChpZHMubGVuZ3RoID09PSAwKSByZXR1cm4gW107XHJcbiAgXHJcbiAgY29uc3QgZmluYW5jaWFsczogRmluYW5jaWFsUmVjb3JkW10gPSBbXTtcclxuICBmb3IgKGNvbnN0IGlkIG9mIGlkcykge1xyXG4gICAgY29uc3Qga2V5ID0gYnVpbGREYXRhS2V5KEVOVElUWSwgaWQpO1xyXG4gICAgY29uc3QgZmluYW5jaWFsID0gYXdhaXQga3ZHZXQ8RmluYW5jaWFsUmVjb3JkPihrZXkpO1xyXG4gICAgaWYgKGZpbmFuY2lhbCkgZmluYW5jaWFscy5wdXNoKGZpbmFuY2lhbCk7XHJcbiAgfVxyXG4gIFxyXG4gIHJldHVybiBmaW5hbmNpYWxzO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0RmluYW5jaWFsQnlJZChpZDogc3RyaW5nKTogUHJvbWlzZTxGaW5hbmNpYWxSZWNvcmQgfCBudWxsPiB7XHJcbiAgY29uc3Qga2V5ID0gYnVpbGREYXRhS2V5KEVOVElUWSwgaWQpO1xyXG4gIHJldHVybiBhd2FpdCBrdkdldDxGaW5hbmNpYWxSZWNvcmQ+KGtleSk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cHNlcnRGaW5hbmNpYWwoZmluYW5jaWFsOiBGaW5hbmNpYWxSZWNvcmQpOiBQcm9taXNlPEZpbmFuY2lhbFJlY29yZD4ge1xyXG4gIGNvbnN0IGtleSA9IGJ1aWxkRGF0YUtleShFTlRJVFksIGZpbmFuY2lhbC5pZCk7XHJcbiAgY29uc3QgaW5kZXhLZXkgPSBidWlsZEluZGV4S2V5KEVOVElUWSk7XHJcbiAgXHJcbiAgYXdhaXQga3ZTZXQoa2V5LCBmaW5hbmNpYWwpO1xyXG4gIGF3YWl0IGt2U0FkZChpbmRleEtleSwgZmluYW5jaWFsLmlkKTtcclxuICBcclxuICByZXR1cm4gZmluYW5jaWFsO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVsZXRlRmluYW5jaWFsKGlkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcclxuICBjb25zdCBrZXkgPSBidWlsZERhdGFLZXkoRU5USVRZLCBpZCk7XHJcbiAgY29uc3QgaW5kZXhLZXkgPSBidWlsZEluZGV4S2V5KEVOVElUWSk7XHJcbiAgXHJcbiAgYXdhaXQga3ZEZWwoa2V5KTtcclxuICBhd2FpdCBrdlNSZW0oaW5kZXhLZXksIGlkKTtcclxufVxyXG4iXSwibmFtZXMiOlsia3ZHZXQiLCJrdlNldCIsImt2RGVsIiwia3ZTQWRkIiwia3ZTUmVtIiwia3ZTTWVtYmVycyIsImJ1aWxkRGF0YUtleSIsImJ1aWxkSW5kZXhLZXkiLCJFTlRJVFkiLCJnZXRBbGxGaW5hbmNpYWxzIiwiaW5kZXhLZXkiLCJpZHMiLCJsZW5ndGgiLCJmaW5hbmNpYWxzIiwiaWQiLCJrZXkiLCJmaW5hbmNpYWwiLCJwdXNoIiwiZ2V0RmluYW5jaWFsQnlJZCIsInVwc2VydEZpbmFuY2lhbCIsImRlbGV0ZUZpbmFuY2lhbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./data-store/repositories/financial.repo.ts\n");

/***/ }),

/***/ "(rsc)/./data-store/repositories/item.repo.ts":
/*!**********************************************!*\
  !*** ./data-store/repositories/item.repo.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteItem: () => (/* binding */ deleteItem),\n/* harmony export */   getAllItems: () => (/* binding */ getAllItems),\n/* harmony export */   getItemById: () => (/* binding */ getItemById),\n/* harmony export */   upsertItem: () => (/* binding */ upsertItem)\n/* harmony export */ });\n/* harmony import */ var _kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../kv */ \"(rsc)/./data-store/kv.ts\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../keys */ \"(rsc)/./data-store/keys.ts\");\n// data-store/repositories/item.repo.ts\n\n\nconst ENTITY = \"items\";\nasync function getAllItems() {\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    const ids = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)(indexKey);\n    if (ids.length === 0) return [];\n    const items = [];\n    for (const id of ids){\n        const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n        const item = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n        if (item) items.push(item);\n    }\n    return items;\n}\nasync function getItemById(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    return await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n}\nasync function upsertItem(item) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, item.id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, item);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)(indexKey, item.id);\n    return item;\n}\nasync function deleteItem(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)(key);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)(indexKey, id);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9kYXRhLXN0b3JlL3JlcG9zaXRvcmllcy9pdGVtLnJlcG8udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsdUNBQXVDO0FBQ2lDO0FBQ2xCO0FBR3RELE1BQU1RLFNBQVM7QUFFUixlQUFlQztJQUNwQixNQUFNQyxXQUFXSCxvREFBYUEsQ0FBQ0M7SUFDL0IsTUFBTUcsTUFBTSxNQUFNTiwrQ0FBVUEsQ0FBQ0s7SUFDN0IsSUFBSUMsSUFBSUMsTUFBTSxLQUFLLEdBQUcsT0FBTyxFQUFFO0lBRS9CLE1BQU1DLFFBQWdCLEVBQUU7SUFDeEIsS0FBSyxNQUFNQyxNQUFNSCxJQUFLO1FBQ3BCLE1BQU1JLE1BQU1ULG1EQUFZQSxDQUFDRSxRQUFRTTtRQUNqQyxNQUFNRSxPQUFPLE1BQU1oQiwwQ0FBS0EsQ0FBT2U7UUFDL0IsSUFBSUMsTUFBTUgsTUFBTUksSUFBSSxDQUFDRDtJQUN2QjtJQUVBLE9BQU9IO0FBQ1Q7QUFFTyxlQUFlSyxZQUFZSixFQUFVO0lBQzFDLE1BQU1DLE1BQU1ULG1EQUFZQSxDQUFDRSxRQUFRTTtJQUNqQyxPQUFPLE1BQU1kLDBDQUFLQSxDQUFPZTtBQUMzQjtBQUVPLGVBQWVJLFdBQVdILElBQVU7SUFDekMsTUFBTUQsTUFBTVQsbURBQVlBLENBQUNFLFFBQVFRLEtBQUtGLEVBQUU7SUFDeEMsTUFBTUosV0FBV0gsb0RBQWFBLENBQUNDO0lBRS9CLE1BQU1QLDBDQUFLQSxDQUFDYyxLQUFLQztJQUNqQixNQUFNYiwyQ0FBTUEsQ0FBQ08sVUFBVU0sS0FBS0YsRUFBRTtJQUU5QixPQUFPRTtBQUNUO0FBRU8sZUFBZUksV0FBV04sRUFBVTtJQUN6QyxNQUFNQyxNQUFNVCxtREFBWUEsQ0FBQ0UsUUFBUU07SUFDakMsTUFBTUosV0FBV0gsb0RBQWFBLENBQUNDO0lBRS9CLE1BQU1OLDBDQUFLQSxDQUFDYTtJQUNaLE1BQU1YLDJDQUFNQSxDQUFDTSxVQUFVSTtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL3RoZWdhbWUtYWRtaW4vLi9kYXRhLXN0b3JlL3JlcG9zaXRvcmllcy9pdGVtLnJlcG8udHM/YzY0OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkYXRhLXN0b3JlL3JlcG9zaXRvcmllcy9pdGVtLnJlcG8udHNcclxuaW1wb3J0IHsga3ZHZXQsIGt2U2V0LCBrdkRlbCwga3ZTQWRkLCBrdlNSZW0sIGt2U01lbWJlcnMgfSBmcm9tICcuLi9rdic7XHJcbmltcG9ydCB7IGJ1aWxkRGF0YUtleSwgYnVpbGRJbmRleEtleSB9IGZyb20gJy4uL2tleXMnO1xyXG5pbXBvcnQgdHlwZSB7IEl0ZW0gfSBmcm9tICdAL3R5cGVzL2VudGl0aWVzJztcclxuXHJcbmNvbnN0IEVOVElUWSA9ICdpdGVtcyc7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsSXRlbXMoKTogUHJvbWlzZTxJdGVtW10+IHtcclxuICBjb25zdCBpbmRleEtleSA9IGJ1aWxkSW5kZXhLZXkoRU5USVRZKTtcclxuICBjb25zdCBpZHMgPSBhd2FpdCBrdlNNZW1iZXJzKGluZGV4S2V5KTtcclxuICBpZiAoaWRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIFtdO1xyXG4gIFxyXG4gIGNvbnN0IGl0ZW1zOiBJdGVtW10gPSBbXTtcclxuICBmb3IgKGNvbnN0IGlkIG9mIGlkcykge1xyXG4gICAgY29uc3Qga2V5ID0gYnVpbGREYXRhS2V5KEVOVElUWSwgaWQpO1xyXG4gICAgY29uc3QgaXRlbSA9IGF3YWl0IGt2R2V0PEl0ZW0+KGtleSk7XHJcbiAgICBpZiAoaXRlbSkgaXRlbXMucHVzaChpdGVtKTtcclxuICB9XHJcbiAgXHJcbiAgcmV0dXJuIGl0ZW1zO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0SXRlbUJ5SWQoaWQ6IHN0cmluZyk6IFByb21pc2U8SXRlbSB8IG51bGw+IHtcclxuICBjb25zdCBrZXkgPSBidWlsZERhdGFLZXkoRU5USVRZLCBpZCk7XHJcbiAgcmV0dXJuIGF3YWl0IGt2R2V0PEl0ZW0+KGtleSk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cHNlcnRJdGVtKGl0ZW06IEl0ZW0pOiBQcm9taXNlPEl0ZW0+IHtcclxuICBjb25zdCBrZXkgPSBidWlsZERhdGFLZXkoRU5USVRZLCBpdGVtLmlkKTtcclxuICBjb25zdCBpbmRleEtleSA9IGJ1aWxkSW5kZXhLZXkoRU5USVRZKTtcclxuICBcclxuICBhd2FpdCBrdlNldChrZXksIGl0ZW0pO1xyXG4gIGF3YWl0IGt2U0FkZChpbmRleEtleSwgaXRlbS5pZCk7XHJcbiAgXHJcbiAgcmV0dXJuIGl0ZW07XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWxldGVJdGVtKGlkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcclxuICBjb25zdCBrZXkgPSBidWlsZERhdGFLZXkoRU5USVRZLCBpZCk7XHJcbiAgY29uc3QgaW5kZXhLZXkgPSBidWlsZEluZGV4S2V5KEVOVElUWSk7XHJcbiAgXHJcbiAgYXdhaXQga3ZEZWwoa2V5KTtcclxuICBhd2FpdCBrdlNSZW0oaW5kZXhLZXksIGlkKTtcclxufVxyXG4iXSwibmFtZXMiOlsia3ZHZXQiLCJrdlNldCIsImt2RGVsIiwia3ZTQWRkIiwia3ZTUmVtIiwia3ZTTWVtYmVycyIsImJ1aWxkRGF0YUtleSIsImJ1aWxkSW5kZXhLZXkiLCJFTlRJVFkiLCJnZXRBbGxJdGVtcyIsImluZGV4S2V5IiwiaWRzIiwibGVuZ3RoIiwiaXRlbXMiLCJpZCIsImtleSIsIml0ZW0iLCJwdXNoIiwiZ2V0SXRlbUJ5SWQiLCJ1cHNlcnRJdGVtIiwiZGVsZXRlSXRlbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./data-store/repositories/item.repo.ts\n");

/***/ }),

/***/ "(rsc)/./data-store/repositories/player.repo.ts":
/*!************************************************!*\
  !*** ./data-store/repositories/player.repo.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deletePlayer: () => (/* binding */ deletePlayer),\n/* harmony export */   getAllPlayers: () => (/* binding */ getAllPlayers),\n/* harmony export */   getPlayerById: () => (/* binding */ getPlayerById),\n/* harmony export */   upsertPlayer: () => (/* binding */ upsertPlayer)\n/* harmony export */ });\n/* harmony import */ var _kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../kv */ \"(rsc)/./data-store/kv.ts\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../keys */ \"(rsc)/./data-store/keys.ts\");\n// data-store/repositories/player.repo.ts\n\n\nconst ENTITY = \"players\";\nasync function getAllPlayers() {\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    const ids = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)(indexKey);\n    if (ids.length === 0) return [];\n    const players = [];\n    for (const id of ids){\n        const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n        const player = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n        if (player) players.push(player);\n    }\n    return players;\n}\nasync function getPlayerById(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    return await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n}\nasync function upsertPlayer(player) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, player.id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, player);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)(indexKey, player.id);\n    return player;\n}\nasync function deletePlayer(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)(key);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)(indexKey, id);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9kYXRhLXN0b3JlL3JlcG9zaXRvcmllcy9wbGF5ZXIucmVwby50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSx5Q0FBeUM7QUFDK0I7QUFDbEI7QUFHdEQsTUFBTVEsU0FBUztBQUVSLGVBQWVDO0lBQ3BCLE1BQU1DLFdBQVdILG9EQUFhQSxDQUFDQztJQUMvQixNQUFNRyxNQUFNLE1BQU1OLCtDQUFVQSxDQUFDSztJQUM3QixJQUFJQyxJQUFJQyxNQUFNLEtBQUssR0FBRyxPQUFPLEVBQUU7SUFFL0IsTUFBTUMsVUFBb0IsRUFBRTtJQUM1QixLQUFLLE1BQU1DLE1BQU1ILElBQUs7UUFDcEIsTUFBTUksTUFBTVQsbURBQVlBLENBQUNFLFFBQVFNO1FBQ2pDLE1BQU1FLFNBQVMsTUFBTWhCLDBDQUFLQSxDQUFTZTtRQUNuQyxJQUFJQyxRQUFRSCxRQUFRSSxJQUFJLENBQUNEO0lBQzNCO0lBRUEsT0FBT0g7QUFDVDtBQUVPLGVBQWVLLGNBQWNKLEVBQVU7SUFDNUMsTUFBTUMsTUFBTVQsbURBQVlBLENBQUNFLFFBQVFNO0lBQ2pDLE9BQU8sTUFBTWQsMENBQUtBLENBQVNlO0FBQzdCO0FBRU8sZUFBZUksYUFBYUgsTUFBYztJQUMvQyxNQUFNRCxNQUFNVCxtREFBWUEsQ0FBQ0UsUUFBUVEsT0FBT0YsRUFBRTtJQUMxQyxNQUFNSixXQUFXSCxvREFBYUEsQ0FBQ0M7SUFFL0IsTUFBTVAsMENBQUtBLENBQUNjLEtBQUtDO0lBQ2pCLE1BQU1iLDJDQUFNQSxDQUFDTyxVQUFVTSxPQUFPRixFQUFFO0lBRWhDLE9BQU9FO0FBQ1Q7QUFFTyxlQUFlSSxhQUFhTixFQUFVO0lBQzNDLE1BQU1DLE1BQU1ULG1EQUFZQSxDQUFDRSxRQUFRTTtJQUNqQyxNQUFNSixXQUFXSCxvREFBYUEsQ0FBQ0M7SUFFL0IsTUFBTU4sMENBQUtBLENBQUNhO0lBQ1osTUFBTVgsMkNBQU1BLENBQUNNLFVBQVVJO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGhlZ2FtZS1hZG1pbi8uL2RhdGEtc3RvcmUvcmVwb3NpdG9yaWVzL3BsYXllci5yZXBvLnRzPzBhODkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGF0YS1zdG9yZS9yZXBvc2l0b3JpZXMvcGxheWVyLnJlcG8udHNcclxuaW1wb3J0IHsga3ZHZXQsIGt2U2V0LCBrdkRlbCwga3ZTQWRkLCBrdlNSZW0sIGt2U01lbWJlcnMgfSBmcm9tICcuLi9rdic7XHJcbmltcG9ydCB7IGJ1aWxkRGF0YUtleSwgYnVpbGRJbmRleEtleSB9IGZyb20gJy4uL2tleXMnO1xyXG5pbXBvcnQgdHlwZSB7IFBsYXllciB9IGZyb20gJ0AvdHlwZXMvZW50aXRpZXMnO1xyXG5cclxuY29uc3QgRU5USVRZID0gJ3BsYXllcnMnO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEFsbFBsYXllcnMoKTogUHJvbWlzZTxQbGF5ZXJbXT4ge1xyXG4gIGNvbnN0IGluZGV4S2V5ID0gYnVpbGRJbmRleEtleShFTlRJVFkpO1xyXG4gIGNvbnN0IGlkcyA9IGF3YWl0IGt2U01lbWJlcnMoaW5kZXhLZXkpO1xyXG4gIGlmIChpZHMubGVuZ3RoID09PSAwKSByZXR1cm4gW107XHJcbiAgXHJcbiAgY29uc3QgcGxheWVyczogUGxheWVyW10gPSBbXTtcclxuICBmb3IgKGNvbnN0IGlkIG9mIGlkcykge1xyXG4gICAgY29uc3Qga2V5ID0gYnVpbGREYXRhS2V5KEVOVElUWSwgaWQpO1xyXG4gICAgY29uc3QgcGxheWVyID0gYXdhaXQga3ZHZXQ8UGxheWVyPihrZXkpO1xyXG4gICAgaWYgKHBsYXllcikgcGxheWVycy5wdXNoKHBsYXllcik7XHJcbiAgfVxyXG4gIFxyXG4gIHJldHVybiBwbGF5ZXJzO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UGxheWVyQnlJZChpZDogc3RyaW5nKTogUHJvbWlzZTxQbGF5ZXIgfCBudWxsPiB7XHJcbiAgY29uc3Qga2V5ID0gYnVpbGREYXRhS2V5KEVOVElUWSwgaWQpO1xyXG4gIHJldHVybiBhd2FpdCBrdkdldDxQbGF5ZXI+KGtleSk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cHNlcnRQbGF5ZXIocGxheWVyOiBQbGF5ZXIpOiBQcm9taXNlPFBsYXllcj4ge1xyXG4gIGNvbnN0IGtleSA9IGJ1aWxkRGF0YUtleShFTlRJVFksIHBsYXllci5pZCk7XHJcbiAgY29uc3QgaW5kZXhLZXkgPSBidWlsZEluZGV4S2V5KEVOVElUWSk7XHJcbiAgXHJcbiAgYXdhaXQga3ZTZXQoa2V5LCBwbGF5ZXIpO1xyXG4gIGF3YWl0IGt2U0FkZChpbmRleEtleSwgcGxheWVyLmlkKTtcclxuICBcclxuICByZXR1cm4gcGxheWVyO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVsZXRlUGxheWVyKGlkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcclxuICBjb25zdCBrZXkgPSBidWlsZERhdGFLZXkoRU5USVRZLCBpZCk7XHJcbiAgY29uc3QgaW5kZXhLZXkgPSBidWlsZEluZGV4S2V5KEVOVElUWSk7XHJcbiAgXHJcbiAgYXdhaXQga3ZEZWwoa2V5KTtcclxuICBhd2FpdCBrdlNSZW0oaW5kZXhLZXksIGlkKTtcclxufVxyXG4iXSwibmFtZXMiOlsia3ZHZXQiLCJrdlNldCIsImt2RGVsIiwia3ZTQWRkIiwia3ZTUmVtIiwia3ZTTWVtYmVycyIsImJ1aWxkRGF0YUtleSIsImJ1aWxkSW5kZXhLZXkiLCJFTlRJVFkiLCJnZXRBbGxQbGF5ZXJzIiwiaW5kZXhLZXkiLCJpZHMiLCJsZW5ndGgiLCJwbGF5ZXJzIiwiaWQiLCJrZXkiLCJwbGF5ZXIiLCJwdXNoIiwiZ2V0UGxheWVyQnlJZCIsInVwc2VydFBsYXllciIsImRlbGV0ZVBsYXllciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./data-store/repositories/player.repo.ts\n");

/***/ }),

/***/ "(rsc)/./data-store/repositories/sale.repo.ts":
/*!**********************************************!*\
  !*** ./data-store/repositories/sale.repo.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteSale: () => (/* binding */ deleteSale),\n/* harmony export */   getAllSales: () => (/* binding */ getAllSales),\n/* harmony export */   getSaleById: () => (/* binding */ getSaleById),\n/* harmony export */   upsertSale: () => (/* binding */ upsertSale)\n/* harmony export */ });\n/* harmony import */ var _kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../kv */ \"(rsc)/./data-store/kv.ts\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../keys */ \"(rsc)/./data-store/keys.ts\");\n// data-store/repositories/sale.repo.ts\n\n\nconst ENTITY = \"sales\";\nasync function getAllSales() {\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    const ids = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)(indexKey);\n    if (ids.length === 0) return [];\n    const sales = [];\n    for (const id of ids){\n        const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n        const sale = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n        if (sale) sales.push(sale);\n    }\n    return sales;\n}\nasync function getSaleById(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    return await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n}\nasync function upsertSale(sale) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, sale.id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, sale);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)(indexKey, sale.id);\n    return sale;\n}\nasync function deleteSale(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)(key);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)(indexKey, id);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9kYXRhLXN0b3JlL3JlcG9zaXRvcmllcy9zYWxlLnJlcG8udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsdUNBQXVDO0FBQ2lDO0FBQ2xCO0FBR3RELE1BQU1RLFNBQVM7QUFFUixlQUFlQztJQUNwQixNQUFNQyxXQUFXSCxvREFBYUEsQ0FBQ0M7SUFDL0IsTUFBTUcsTUFBTSxNQUFNTiwrQ0FBVUEsQ0FBQ0s7SUFDN0IsSUFBSUMsSUFBSUMsTUFBTSxLQUFLLEdBQUcsT0FBTyxFQUFFO0lBRS9CLE1BQU1DLFFBQWdCLEVBQUU7SUFDeEIsS0FBSyxNQUFNQyxNQUFNSCxJQUFLO1FBQ3BCLE1BQU1JLE1BQU1ULG1EQUFZQSxDQUFDRSxRQUFRTTtRQUNqQyxNQUFNRSxPQUFPLE1BQU1oQiwwQ0FBS0EsQ0FBT2U7UUFDL0IsSUFBSUMsTUFBTUgsTUFBTUksSUFBSSxDQUFDRDtJQUN2QjtJQUVBLE9BQU9IO0FBQ1Q7QUFFTyxlQUFlSyxZQUFZSixFQUFVO0lBQzFDLE1BQU1DLE1BQU1ULG1EQUFZQSxDQUFDRSxRQUFRTTtJQUNqQyxPQUFPLE1BQU1kLDBDQUFLQSxDQUFPZTtBQUMzQjtBQUVPLGVBQWVJLFdBQVdILElBQVU7SUFDekMsTUFBTUQsTUFBTVQsbURBQVlBLENBQUNFLFFBQVFRLEtBQUtGLEVBQUU7SUFDeEMsTUFBTUosV0FBV0gsb0RBQWFBLENBQUNDO0lBRS9CLE1BQU1QLDBDQUFLQSxDQUFDYyxLQUFLQztJQUNqQixNQUFNYiwyQ0FBTUEsQ0FBQ08sVUFBVU0sS0FBS0YsRUFBRTtJQUU5QixPQUFPRTtBQUNUO0FBRU8sZUFBZUksV0FBV04sRUFBVTtJQUN6QyxNQUFNQyxNQUFNVCxtREFBWUEsQ0FBQ0UsUUFBUU07SUFDakMsTUFBTUosV0FBV0gsb0RBQWFBLENBQUNDO0lBRS9CLE1BQU1OLDBDQUFLQSxDQUFDYTtJQUNaLE1BQU1YLDJDQUFNQSxDQUFDTSxVQUFVSTtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL3RoZWdhbWUtYWRtaW4vLi9kYXRhLXN0b3JlL3JlcG9zaXRvcmllcy9zYWxlLnJlcG8udHM/NDkzYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkYXRhLXN0b3JlL3JlcG9zaXRvcmllcy9zYWxlLnJlcG8udHNcclxuaW1wb3J0IHsga3ZHZXQsIGt2U2V0LCBrdkRlbCwga3ZTQWRkLCBrdlNSZW0sIGt2U01lbWJlcnMgfSBmcm9tICcuLi9rdic7XHJcbmltcG9ydCB7IGJ1aWxkRGF0YUtleSwgYnVpbGRJbmRleEtleSB9IGZyb20gJy4uL2tleXMnO1xyXG5pbXBvcnQgdHlwZSB7IFNhbGUgfSBmcm9tICdAL3R5cGVzL2VudGl0aWVzJztcclxuXHJcbmNvbnN0IEVOVElUWSA9ICdzYWxlcyc7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsU2FsZXMoKTogUHJvbWlzZTxTYWxlW10+IHtcclxuICBjb25zdCBpbmRleEtleSA9IGJ1aWxkSW5kZXhLZXkoRU5USVRZKTtcclxuICBjb25zdCBpZHMgPSBhd2FpdCBrdlNNZW1iZXJzKGluZGV4S2V5KTtcclxuICBpZiAoaWRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIFtdO1xyXG4gIFxyXG4gIGNvbnN0IHNhbGVzOiBTYWxlW10gPSBbXTtcclxuICBmb3IgKGNvbnN0IGlkIG9mIGlkcykge1xyXG4gICAgY29uc3Qga2V5ID0gYnVpbGREYXRhS2V5KEVOVElUWSwgaWQpO1xyXG4gICAgY29uc3Qgc2FsZSA9IGF3YWl0IGt2R2V0PFNhbGU+KGtleSk7XHJcbiAgICBpZiAoc2FsZSkgc2FsZXMucHVzaChzYWxlKTtcclxuICB9XHJcbiAgXHJcbiAgcmV0dXJuIHNhbGVzO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2FsZUJ5SWQoaWQ6IHN0cmluZyk6IFByb21pc2U8U2FsZSB8IG51bGw+IHtcclxuICBjb25zdCBrZXkgPSBidWlsZERhdGFLZXkoRU5USVRZLCBpZCk7XHJcbiAgcmV0dXJuIGF3YWl0IGt2R2V0PFNhbGU+KGtleSk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cHNlcnRTYWxlKHNhbGU6IFNhbGUpOiBQcm9taXNlPFNhbGU+IHtcclxuICBjb25zdCBrZXkgPSBidWlsZERhdGFLZXkoRU5USVRZLCBzYWxlLmlkKTtcclxuICBjb25zdCBpbmRleEtleSA9IGJ1aWxkSW5kZXhLZXkoRU5USVRZKTtcclxuICBcclxuICBhd2FpdCBrdlNldChrZXksIHNhbGUpO1xyXG4gIGF3YWl0IGt2U0FkZChpbmRleEtleSwgc2FsZS5pZCk7XHJcbiAgXHJcbiAgcmV0dXJuIHNhbGU7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWxldGVTYWxlKGlkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcclxuICBjb25zdCBrZXkgPSBidWlsZERhdGFLZXkoRU5USVRZLCBpZCk7XHJcbiAgY29uc3QgaW5kZXhLZXkgPSBidWlsZEluZGV4S2V5KEVOVElUWSk7XHJcbiAgXHJcbiAgYXdhaXQga3ZEZWwoa2V5KTtcclxuICBhd2FpdCBrdlNSZW0oaW5kZXhLZXksIGlkKTtcclxufVxyXG4iXSwibmFtZXMiOlsia3ZHZXQiLCJrdlNldCIsImt2RGVsIiwia3ZTQWRkIiwia3ZTUmVtIiwia3ZTTWVtYmVycyIsImJ1aWxkRGF0YUtleSIsImJ1aWxkSW5kZXhLZXkiLCJFTlRJVFkiLCJnZXRBbGxTYWxlcyIsImluZGV4S2V5IiwiaWRzIiwibGVuZ3RoIiwic2FsZXMiLCJpZCIsImtleSIsInNhbGUiLCJwdXNoIiwiZ2V0U2FsZUJ5SWQiLCJ1cHNlcnRTYWxlIiwiZGVsZXRlU2FsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./data-store/repositories/sale.repo.ts\n");

/***/ }),

/***/ "(rsc)/./data-store/repositories/site.repo.ts":
/*!**********************************************!*\
  !*** ./data-store/repositories/site.repo.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteSite: () => (/* binding */ deleteSite),\n/* harmony export */   getAllSettlements: () => (/* binding */ getAllSettlements),\n/* harmony export */   getAllSites: () => (/* binding */ getAllSites),\n/* harmony export */   getSettlementById: () => (/* binding */ getSettlementById),\n/* harmony export */   getSiteById: () => (/* binding */ getSiteById),\n/* harmony export */   getSitesByRadius: () => (/* binding */ getSitesByRadius),\n/* harmony export */   getSitesBySettlement: () => (/* binding */ getSitesBySettlement),\n/* harmony export */   removeSettlement: () => (/* binding */ removeSettlement),\n/* harmony export */   upsertSettlement: () => (/* binding */ upsertSettlement),\n/* harmony export */   upsertSite: () => (/* binding */ upsertSite)\n/* harmony export */ });\n/* harmony import */ var _kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../kv */ \"(rsc)/./data-store/kv.ts\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../keys */ \"(rsc)/./data-store/keys.ts\");\n// data-store/repositories/site.repo.ts\n\n\nconst ENTITY = \"sites\";\nconst SETTLEMENTS_ENTITY = \"settlements\";\nasync function getAllSites() {\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    const ids = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)(indexKey);\n    if (ids.length === 0) return [];\n    const keys = ids.map((id)=>(0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id));\n    const sites = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvMGet)(keys);\n    return sites.filter((site)=>site !== null);\n}\nasync function getSiteById(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    return await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n}\nasync function upsertSite(site) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, site.id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, site);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)(indexKey, site.id);\n    return site;\n}\nasync function deleteSite(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)(key);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)(indexKey, id);\n}\n// ============================================================================\n// SETTLEMENT METHODS (Reference data for Sites)\n// ============================================================================\nasync function getAllSettlements() {\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(SETTLEMENTS_ENTITY);\n    const ids = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)(indexKey);\n    if (ids.length === 0) return [];\n    const keys = ids.map((id)=>(0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(SETTLEMENTS_ENTITY, id));\n    const settlements = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvMGet)(keys);\n    return settlements.filter((settlement)=>settlement !== null);\n}\nasync function getSettlementById(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(SETTLEMENTS_ENTITY, id);\n    return await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n}\nasync function upsertSettlement(settlement) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(SETTLEMENTS_ENTITY, settlement.id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(SETTLEMENTS_ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, settlement);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)(indexKey, settlement.id);\n    return settlement;\n}\nasync function removeSettlement(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(SETTLEMENTS_ENTITY, id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(SETTLEMENTS_ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)(key);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)(indexKey, id);\n}\n// ============================================================================\n// SITE QUERY METHODS\n// ============================================================================\nasync function getSitesBySettlement(settlementId) {\n    const allSites = await getAllSites();\n    return allSites.filter((site)=>{\n        if (site.metadata.type !== \"PHYSICAL\") return false;\n        const physicalMeta = site.metadata;\n        return physicalMeta.settlementId === settlementId;\n    });\n}\nasync function getSitesByRadius(centerLat, centerLng, radiusMeters) {\n    const allSites = await getAllSites();\n    const settlementsMap = new Map();\n    // Load all settlements with coordinates\n    const settlements = await getAllSettlements();\n    settlements.forEach((s)=>{\n        if (s.coordinates) settlementsMap.set(s.id, s);\n    });\n    return allSites.filter((site)=>{\n        if (site.metadata.type !== \"PHYSICAL\") return false;\n        const physicalMeta = site.metadata;\n        const settlement = settlementsMap.get(physicalMeta.settlementId);\n        if (!settlement?.coordinates) return false;\n        // Haversine formula for distance calculation\n        const R = 6371000; // Earth radius in meters\n        const φ1 = centerLat * Math.PI / 180;\n        const φ2 = settlement.coordinates.lat * Math.PI / 180;\n        const Δφ = (settlement.coordinates.lat - centerLat) * Math.PI / 180;\n        const Δλ = (settlement.coordinates.lng - centerLng) * Math.PI / 180;\n        const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        const distance = R * c;\n        return distance <= radiusMeters;\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./data-store/repositories/site.repo.ts\n");

/***/ }),

/***/ "(rsc)/./data-store/repositories/task.repo.ts":
/*!**********************************************!*\
  !*** ./data-store/repositories/task.repo.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteTask: () => (/* binding */ deleteTask),\n/* harmony export */   getAllTasks: () => (/* binding */ getAllTasks),\n/* harmony export */   getTaskById: () => (/* binding */ getTaskById),\n/* harmony export */   upsertTask: () => (/* binding */ upsertTask)\n/* harmony export */ });\n/* harmony import */ var _data_store_kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/data-store/kv */ \"(rsc)/./data-store/kv.ts\");\n/* harmony import */ var _data_store_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/keys */ \"(rsc)/./data-store/keys.ts\");\n// data-store/repositories/task.repo.ts\n\n\nconst ENTITY = \"task\";\nasync function getTaskById(id) {\n    return await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id));\n}\nasync function getAllTasks() {\n    const ids = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY));\n    const rows = await Promise.all(ids.map((id)=>(0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id))));\n    return rows.filter(Boolean);\n}\nasync function upsertTask(task) {\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, task.id), task);\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY), task.id);\n    return task;\n}\nasync function deleteTask(id) {\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9kYXRhLXN0b3JlL3JlcG9zaXRvcmllcy90YXNrLnJlcG8udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsdUNBQXVDO0FBRW1DO0FBQ1Y7QUFFaEUsTUFBTU8sU0FBUztBQUVSLGVBQWVDLFlBQVlDLEVBQVU7SUFDMUMsT0FBTyxNQUFNVCxxREFBS0EsQ0FBT0ssOERBQVlBLENBQUNFLFFBQVFFO0FBQ2hEO0FBRU8sZUFBZUM7SUFDcEIsTUFBTUMsTUFBTSxNQUFNUiwwREFBVUEsQ0FBQ0csK0RBQWFBLENBQUNDO0lBQzNDLE1BQU1LLE9BQU8sTUFBTUMsUUFBUUMsR0FBRyxDQUFDSCxJQUFJSSxHQUFHLENBQUNOLENBQUFBLEtBQU1ULHFEQUFLQSxDQUFPSyw4REFBWUEsQ0FBQ0UsUUFBUUU7SUFDOUUsT0FBT0csS0FBS0ksTUFBTSxDQUFDQztBQUNyQjtBQUVPLGVBQWVDLFdBQVdDLElBQVU7SUFDekMsTUFBTWxCLHFEQUFLQSxDQUFDSSw4REFBWUEsQ0FBQ0UsUUFBUVksS0FBS1YsRUFBRSxHQUFHVTtJQUMzQyxNQUFNZixzREFBTUEsQ0FBQ0UsK0RBQWFBLENBQUNDLFNBQVNZLEtBQUtWLEVBQUU7SUFDM0MsT0FBT1U7QUFDVDtBQUVPLGVBQWVDLFdBQVdYLEVBQVU7SUFDekMsTUFBTVAscURBQUtBLENBQUNHLDhEQUFZQSxDQUFDRSxRQUFRRTtBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RoZWdhbWUtYWRtaW4vLi9kYXRhLXN0b3JlL3JlcG9zaXRvcmllcy90YXNrLnJlcG8udHM/NjJmZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkYXRhLXN0b3JlL3JlcG9zaXRvcmllcy90YXNrLnJlcG8udHNcclxuaW1wb3J0IHR5cGUgeyBUYXNrIH0gZnJvbSAnQC90eXBlcy9lbnRpdGllcyc7XHJcbmltcG9ydCB7IGt2R2V0LCBrdlNldCwga3ZEZWwsIGt2U01lbWJlcnMsIGt2U0FkZCB9IGZyb20gJ0AvZGF0YS1zdG9yZS9rdic7XHJcbmltcG9ydCB7IGJ1aWxkRGF0YUtleSwgYnVpbGRJbmRleEtleSB9IGZyb20gJ0AvZGF0YS1zdG9yZS9rZXlzJztcclxuXHJcbmNvbnN0IEVOVElUWSA9ICd0YXNrJztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRUYXNrQnlJZChpZDogc3RyaW5nKTogUHJvbWlzZTxUYXNrIHwgbnVsbD4ge1xyXG4gIHJldHVybiBhd2FpdCBrdkdldDxUYXNrPihidWlsZERhdGFLZXkoRU5USVRZLCBpZCkpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsVGFza3MoKTogUHJvbWlzZTxUYXNrW10+IHtcclxuICBjb25zdCBpZHMgPSBhd2FpdCBrdlNNZW1iZXJzKGJ1aWxkSW5kZXhLZXkoRU5USVRZKSk7XHJcbiAgY29uc3Qgcm93cyA9IGF3YWl0IFByb21pc2UuYWxsKGlkcy5tYXAoaWQgPT4ga3ZHZXQ8VGFzaz4oYnVpbGREYXRhS2V5KEVOVElUWSwgaWQpKSkpO1xyXG4gIHJldHVybiByb3dzLmZpbHRlcihCb29sZWFuKSBhcyBUYXNrW107XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cHNlcnRUYXNrKHRhc2s6IFRhc2spOiBQcm9taXNlPFRhc2s+IHtcclxuICBhd2FpdCBrdlNldChidWlsZERhdGFLZXkoRU5USVRZLCB0YXNrLmlkKSwgdGFzayk7XHJcbiAgYXdhaXQga3ZTQWRkKGJ1aWxkSW5kZXhLZXkoRU5USVRZKSwgdGFzay5pZCk7XHJcbiAgcmV0dXJuIHRhc2s7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWxldGVUYXNrKGlkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcclxuICBhd2FpdCBrdkRlbChidWlsZERhdGFLZXkoRU5USVRZLCBpZCkpO1xyXG59XHJcblxyXG5cclxuIl0sIm5hbWVzIjpbImt2R2V0Iiwia3ZTZXQiLCJrdkRlbCIsImt2U01lbWJlcnMiLCJrdlNBZGQiLCJidWlsZERhdGFLZXkiLCJidWlsZEluZGV4S2V5IiwiRU5USVRZIiwiZ2V0VGFza0J5SWQiLCJpZCIsImdldEFsbFRhc2tzIiwiaWRzIiwicm93cyIsIlByb21pc2UiLCJhbGwiLCJtYXAiLCJmaWx0ZXIiLCJCb29sZWFuIiwidXBzZXJ0VGFzayIsInRhc2siLCJkZWxldGVUYXNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./data-store/repositories/task.repo.ts\n");

/***/ }),

/***/ "(rsc)/./lib/api-auth.ts":
/*!*************************!*\
  !*** ./lib/api-auth.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   requireAdminAuth: () => (/* binding */ requireAdminAuth)\n/* harmony export */ });\n/* harmony import */ var _auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth */ \"(rsc)/./lib/auth.ts\");\n// lib/api-auth.ts\n// API Authentication Utility for protecting API routes\n// Ensures only authenticated admin users can access API endpoints\n\n/**\r\n * Require admin authentication for API routes\r\n * Returns true if user is authenticated, false otherwise\r\n */ async function requireAdminAuth(req) {\n    try {\n        // Get the admin session token from cookies\n        const token = req.cookies.get(\"admin_session\")?.value;\n        // Get the JWT secret from environment variables\n        const secret = process.env.ADMIN_SESSION_SECRET || \"\";\n        // If no token or secret, user is not authenticated\n        if (!token || !secret) {\n            console.log(\"[API Auth] No token or secret found\");\n            return false;\n        }\n        // Verify the JWT token\n        const verified = await (0,_auth__WEBPACK_IMPORTED_MODULE_0__.verifyJwt)(token, secret);\n        if (verified.valid) {\n            // console.log('[API Auth] User authenticated successfully'); // Disabled to reduce log spam\n            return true;\n        } else {\n            console.log(\"[API Auth] Invalid token:\", verified.reason);\n            return false;\n        }\n    } catch (error) {\n        console.error(\"[API Auth] Error verifying authentication:\", error);\n        return false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvYXBpLWF1dGgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxrQkFBa0I7QUFDbEIsdURBQXVEO0FBQ3ZELGtFQUFrRTtBQUcvQjtBQUVuQzs7O0NBR0MsR0FDTSxlQUFlQyxpQkFBaUJDLEdBQWdCO0lBQ3JELElBQUk7UUFDRiwyQ0FBMkM7UUFDM0MsTUFBTUMsUUFBUUQsSUFBSUUsT0FBTyxDQUFDQyxHQUFHLENBQUMsa0JBQWtCQztRQUVoRCxnREFBZ0Q7UUFDaEQsTUFBTUMsU0FBU0MsUUFBUUMsR0FBRyxDQUFDQyxvQkFBb0IsSUFBSTtRQUVuRCxtREFBbUQ7UUFDbkQsSUFBSSxDQUFDUCxTQUFTLENBQUNJLFFBQVE7WUFDckJJLFFBQVFDLEdBQUcsQ0FBQztZQUNaLE9BQU87UUFDVDtRQUVBLHVCQUF1QjtRQUN2QixNQUFNQyxXQUFXLE1BQU1iLGdEQUFTQSxDQUFDRyxPQUFPSTtRQUV4QyxJQUFJTSxTQUFTQyxLQUFLLEVBQUU7WUFDbEIsNEZBQTRGO1lBQzVGLE9BQU87UUFDVCxPQUFPO1lBQ0xILFFBQVFDLEdBQUcsQ0FBQyw2QkFBNkJDLFNBQVNFLE1BQU07WUFDeEQsT0FBTztRQUNUO0lBQ0YsRUFBRSxPQUFPQyxPQUFPO1FBQ2RMLFFBQVFLLEtBQUssQ0FBQyw4Q0FBOENBO1FBQzVELE9BQU87SUFDVDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGhlZ2FtZS1hZG1pbi8uL2xpYi9hcGktYXV0aC50cz9iMzBlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGxpYi9hcGktYXV0aC50c1xyXG4vLyBBUEkgQXV0aGVudGljYXRpb24gVXRpbGl0eSBmb3IgcHJvdGVjdGluZyBBUEkgcm91dGVzXHJcbi8vIEVuc3VyZXMgb25seSBhdXRoZW50aWNhdGVkIGFkbWluIHVzZXJzIGNhbiBhY2Nlc3MgQVBJIGVuZHBvaW50c1xyXG5cclxuaW1wb3J0IHsgTmV4dFJlcXVlc3QgfSBmcm9tICduZXh0L3NlcnZlcic7XHJcbmltcG9ydCB7IHZlcmlmeUp3dCB9IGZyb20gJy4vYXV0aCc7XHJcblxyXG4vKipcclxuICogUmVxdWlyZSBhZG1pbiBhdXRoZW50aWNhdGlvbiBmb3IgQVBJIHJvdXRlc1xyXG4gKiBSZXR1cm5zIHRydWUgaWYgdXNlciBpcyBhdXRoZW50aWNhdGVkLCBmYWxzZSBvdGhlcndpc2VcclxuICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZXF1aXJlQWRtaW5BdXRoKHJlcTogTmV4dFJlcXVlc3QpOiBQcm9taXNlPGJvb2xlYW4+IHtcclxuICB0cnkge1xyXG4gICAgLy8gR2V0IHRoZSBhZG1pbiBzZXNzaW9uIHRva2VuIGZyb20gY29va2llc1xyXG4gICAgY29uc3QgdG9rZW4gPSByZXEuY29va2llcy5nZXQoJ2FkbWluX3Nlc3Npb24nKT8udmFsdWU7XHJcbiAgICBcclxuICAgIC8vIEdldCB0aGUgSldUIHNlY3JldCBmcm9tIGVudmlyb25tZW50IHZhcmlhYmxlc1xyXG4gICAgY29uc3Qgc2VjcmV0ID0gcHJvY2Vzcy5lbnYuQURNSU5fU0VTU0lPTl9TRUNSRVQgfHwgJyc7XHJcbiAgICBcclxuICAgIC8vIElmIG5vIHRva2VuIG9yIHNlY3JldCwgdXNlciBpcyBub3QgYXV0aGVudGljYXRlZFxyXG4gICAgaWYgKCF0b2tlbiB8fCAhc2VjcmV0KSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdbQVBJIEF1dGhdIE5vIHRva2VuIG9yIHNlY3JldCBmb3VuZCcpO1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIFZlcmlmeSB0aGUgSldUIHRva2VuXHJcbiAgICBjb25zdCB2ZXJpZmllZCA9IGF3YWl0IHZlcmlmeUp3dCh0b2tlbiwgc2VjcmV0KTtcclxuICAgIFxyXG4gICAgaWYgKHZlcmlmaWVkLnZhbGlkKSB7XHJcbiAgICAgIC8vIGNvbnNvbGUubG9nKCdbQVBJIEF1dGhdIFVzZXIgYXV0aGVudGljYXRlZCBzdWNjZXNzZnVsbHknKTsgLy8gRGlzYWJsZWQgdG8gcmVkdWNlIGxvZyBzcGFtXHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc29sZS5sb2coJ1tBUEkgQXV0aF0gSW52YWxpZCB0b2tlbjonLCB2ZXJpZmllZC5yZWFzb24pO1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ1tBUEkgQXV0aF0gRXJyb3IgdmVyaWZ5aW5nIGF1dGhlbnRpY2F0aW9uOicsIGVycm9yKTtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XHJcbn1cclxuXHJcblxyXG4iXSwibmFtZXMiOlsidmVyaWZ5Snd0IiwicmVxdWlyZUFkbWluQXV0aCIsInJlcSIsInRva2VuIiwiY29va2llcyIsImdldCIsInZhbHVlIiwic2VjcmV0IiwicHJvY2VzcyIsImVudiIsIkFETUlOX1NFU1NJT05fU0VDUkVUIiwiY29uc29sZSIsImxvZyIsInZlcmlmaWVkIiwidmFsaWQiLCJyZWFzb24iLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/api-auth.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateJwt: () => (/* binding */ generateJwt),\n/* harmony export */   getRequiredEnv: () => (/* binding */ getRequiredEnv),\n/* harmony export */   verifyJwt: () => (/* binding */ verifyJwt)\n/* harmony export */ });\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/esm/jwt/sign.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/esm/jwt/verify.js\");\n// lib/auth.ts\n// JWT (HS256) utilities for Node runtime (route handlers)\n\nfunction toUint8Array(input) {\n    return new TextEncoder().encode(input);\n}\nasync function generateJwt(claims, secret, expiresInSeconds) {\n    const key = toUint8Array(secret);\n    const nowSeconds = Math.floor(Date.now() / 1000);\n    return await new jose__WEBPACK_IMPORTED_MODULE_0__.SignJWT({\n        ...claims\n    }).setProtectedHeader({\n        alg: \"HS256\"\n    }).setIssuedAt(nowSeconds).setExpirationTime(nowSeconds + expiresInSeconds).sign(key);\n}\nasync function verifyJwt(token, secret) {\n    try {\n        const key = toUint8Array(secret);\n        const { payload } = await (0,jose__WEBPACK_IMPORTED_MODULE_1__.jwtVerify)(token, key);\n        return {\n            valid: true,\n            payload: payload\n        };\n    } catch (_e) {\n        return {\n            valid: false,\n            reason: \"error\"\n        };\n    }\n}\nfunction getRequiredEnv(name) {\n    const value = process.env[name];\n    if (!value || value.trim() === \"\") {\n        throw new Error(`${name} is not set. Add it to .env.local and Vercel project settings.`);\n    }\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvYXV0aC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLGNBQWM7QUFDZCwwREFBMEQ7QUFDaEI7QUFVMUMsU0FBU0UsYUFBYUMsS0FBYTtJQUNqQyxPQUFPLElBQUlDLGNBQWNDLE1BQU0sQ0FBQ0Y7QUFDbEM7QUFFTyxlQUFlRyxZQUFZQyxNQUFzQyxFQUFFQyxNQUFjLEVBQUVDLGdCQUF3QjtJQUNoSCxNQUFNQyxNQUFNUixhQUFhTTtJQUN6QixNQUFNRyxhQUFhQyxLQUFLQyxLQUFLLENBQUNDLEtBQUtDLEdBQUcsS0FBSztJQUMzQyxPQUFPLE1BQU0sSUFBSWYseUNBQU9BLENBQUM7UUFBRSxHQUFHTyxNQUFNO0lBQUMsR0FDbENTLGtCQUFrQixDQUFDO1FBQUVDLEtBQUs7SUFBUSxHQUNsQ0MsV0FBVyxDQUFDUCxZQUNaUSxpQkFBaUIsQ0FBQ1IsYUFBYUYsa0JBQy9CVyxJQUFJLENBQUNWO0FBQ1Y7QUFFTyxlQUFlVyxVQUFVQyxLQUFhLEVBQUVkLE1BQWM7SUFDM0QsSUFBSTtRQUNGLE1BQU1FLE1BQU1SLGFBQWFNO1FBQ3pCLE1BQU0sRUFBRWUsT0FBTyxFQUFFLEdBQUcsTUFBTXRCLCtDQUFTQSxDQUFDcUIsT0FBT1o7UUFDM0MsT0FBTztZQUFFYyxPQUFPO1lBQU1ELFNBQVNBO1FBQWdDO0lBQ2pFLEVBQUUsT0FBT0UsSUFBSTtRQUNYLE9BQU87WUFBRUQsT0FBTztZQUFPRSxRQUFRO1FBQVE7SUFDekM7QUFDRjtBQUVPLFNBQVNDLGVBQWVDLElBQVk7SUFDekMsTUFBTUMsUUFBUUMsUUFBUUMsR0FBRyxDQUFDSCxLQUFLO0lBQy9CLElBQUksQ0FBQ0MsU0FBU0EsTUFBTUcsSUFBSSxPQUFPLElBQUk7UUFDakMsTUFBTSxJQUFJQyxNQUFNLENBQUMsRUFBRUwsS0FBSyw4REFBOEQsQ0FBQztJQUN6RjtJQUNBLE9BQU9DO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aGVnYW1lLWFkbWluLy4vbGliL2F1dGgudHM/YmY3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBsaWIvYXV0aC50c1xyXG4vLyBKV1QgKEhTMjU2KSB1dGlsaXRpZXMgZm9yIE5vZGUgcnVudGltZSAocm91dGUgaGFuZGxlcnMpXHJcbmltcG9ydCB7IFNpZ25KV1QsIGp3dFZlcmlmeSB9IGZyb20gJ2pvc2UnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBKd3RDbGFpbXMge1xyXG4gIHN1Yjogc3RyaW5nO1xyXG4gIHJvbGU6IHN0cmluZztcclxuICBpYXQ6IG51bWJlcjsgLy8gaXNzdWVkIGF0IChzZWNvbmRzIHNpbmNlIGVwb2NoKVxyXG4gIGV4cDogbnVtYmVyOyAvLyBleHBpcnkgKHNlY29uZHMgc2luY2UgZXBvY2gpXHJcbiAgW2tleTogc3RyaW5nXTogdW5rbm93bjtcclxufVxyXG5cclxuZnVuY3Rpb24gdG9VaW50OEFycmF5KGlucHV0OiBzdHJpbmcpOiBVaW50OEFycmF5IHtcclxuICByZXR1cm4gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKGlucHV0KTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlSnd0KGNsYWltczogT21pdDxKd3RDbGFpbXMsICdpYXQnIHwgJ2V4cCc+LCBzZWNyZXQ6IHN0cmluZywgZXhwaXJlc0luU2Vjb25kczogbnVtYmVyKTogUHJvbWlzZTxzdHJpbmc+IHtcclxuICBjb25zdCBrZXkgPSB0b1VpbnQ4QXJyYXkoc2VjcmV0KTtcclxuICBjb25zdCBub3dTZWNvbmRzID0gTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCk7XHJcbiAgcmV0dXJuIGF3YWl0IG5ldyBTaWduSldUKHsgLi4uY2xhaW1zIH0pXHJcbiAgICAuc2V0UHJvdGVjdGVkSGVhZGVyKHsgYWxnOiAnSFMyNTYnIH0pXHJcbiAgICAuc2V0SXNzdWVkQXQobm93U2Vjb25kcylcclxuICAgIC5zZXRFeHBpcmF0aW9uVGltZShub3dTZWNvbmRzICsgZXhwaXJlc0luU2Vjb25kcylcclxuICAgIC5zaWduKGtleSk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlKd3QodG9rZW46IHN0cmluZywgc2VjcmV0OiBzdHJpbmcpOiBQcm9taXNlPHsgdmFsaWQ6IGJvb2xlYW47IHBheWxvYWQ/OiBKd3RDbGFpbXM7IHJlYXNvbj86IHN0cmluZyB9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGtleSA9IHRvVWludDhBcnJheShzZWNyZXQpO1xyXG4gICAgY29uc3QgeyBwYXlsb2FkIH0gPSBhd2FpdCBqd3RWZXJpZnkodG9rZW4sIGtleSk7XHJcbiAgICByZXR1cm4geyB2YWxpZDogdHJ1ZSwgcGF5bG9hZDogcGF5bG9hZCBhcyB1bmtub3duIGFzIEp3dENsYWltcyB9O1xyXG4gIH0gY2F0Y2ggKF9lKSB7XHJcbiAgICByZXR1cm4geyB2YWxpZDogZmFsc2UsIHJlYXNvbjogJ2Vycm9yJyB9O1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldFJlcXVpcmVkRW52KG5hbWU6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgY29uc3QgdmFsdWUgPSBwcm9jZXNzLmVudltuYW1lXTtcclxuICBpZiAoIXZhbHVlIHx8IHZhbHVlLnRyaW0oKSA9PT0gJycpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihgJHtuYW1lfSBpcyBub3Qgc2V0LiBBZGQgaXQgdG8gLmVudi5sb2NhbCBhbmQgVmVyY2VsIHByb2plY3Qgc2V0dGluZ3MuYCk7XHJcbiAgfVxyXG4gIHJldHVybiB2YWx1ZTtcclxufVxyXG4iXSwibmFtZXMiOlsiU2lnbkpXVCIsImp3dFZlcmlmeSIsInRvVWludDhBcnJheSIsImlucHV0IiwiVGV4dEVuY29kZXIiLCJlbmNvZGUiLCJnZW5lcmF0ZUp3dCIsImNsYWltcyIsInNlY3JldCIsImV4cGlyZXNJblNlY29uZHMiLCJrZXkiLCJub3dTZWNvbmRzIiwiTWF0aCIsImZsb29yIiwiRGF0ZSIsIm5vdyIsInNldFByb3RlY3RlZEhlYWRlciIsImFsZyIsInNldElzc3VlZEF0Iiwic2V0RXhwaXJhdGlvblRpbWUiLCJzaWduIiwidmVyaWZ5Snd0IiwidG9rZW4iLCJwYXlsb2FkIiwidmFsaWQiLCJfZSIsInJlYXNvbiIsImdldFJlcXVpcmVkRW52IiwibmFtZSIsInZhbHVlIiwicHJvY2VzcyIsImVudiIsInRyaW0iLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./lib/client-api.ts":
/*!***************************!*\
  !*** ./lib/client-api.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ClientAPI: () => (/* binding */ e0)
/* harmony export */ });
/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");

const proxy = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`C:\Users\Usuario\AKILES\GAME WEB APP\SPLIT\thegame\lib\client-api.ts`)

// Accessing the __esModule property and exporting $$typeof are required here.
// The __esModule getter forces the proxy target to create the default export
// and the $$typeof value is for rendering logic to determine if the module
// is a client boundary.
const { __esModule, $$typeof } = proxy;
const __default__ = proxy.default;

const e0 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`C:\Users\Usuario\AKILES\GAME WEB APP\SPLIT\thegame\lib\client-api.ts#ClientAPI`);


/***/ }),

/***/ "(rsc)/./links/link-registry.ts":
/*!********************************!*\
  !*** ./links/link-registry.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createLink: () => (/* binding */ createLink),\n/* harmony export */   getAllLinks: () => (/* binding */ getAllLinks),\n/* harmony export */   getLinksFor: () => (/* binding */ getLinksFor),\n/* harmony export */   removeLink: () => (/* binding */ removeLink)\n/* harmony export */ });\n/* harmony import */ var _data_store_kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/data-store/kv */ \"(rsc)/./data-store/kv.ts\");\n/* harmony import */ var _data_store_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/keys */ \"(rsc)/./data-store/keys.ts\");\n/* harmony import */ var _link_validation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./link-validation */ \"(rsc)/./links/link-validation.ts\");\n// links/link-registry.ts\n// The Rosetta Stone storage and query layer (KV only)\n\n\n\nasync function createLink(link) {\n    // NEW: Validate before creating\n    const validation = await (0,_link_validation__WEBPACK_IMPORTED_MODULE_2__.validateLink)(link.linkType, link.source, link.target, link.metadata);\n    if (!validation.isValid) {\n        console.warn(`[createLink] Validation failed: ${validation.reason}`);\n        if (validation.warnings) {\n            console.warn(`[createLink] Validation warnings:`, validation.warnings);\n        }\n        return; // Skip creating invalid links\n    }\n    // Log warnings if any\n    if (validation.warnings && validation.warnings.length > 0) {\n        console.warn(`[createLink] Validation warnings for ${link.linkType}:`, validation.warnings);\n    }\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLinkKey)(link.id), link);\n    // index by source and target for bidirectional queries\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLinksIndexKey)(link.source.type, link.source.id), link.id);\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLinksIndexKey)(link.target.type, link.target.id), link.id);\n}\nasync function getLinksFor(entity) {\n    const ids = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLinksIndexKey)(entity.type, entity.id));\n    if (!ids.length) return [];\n    const keys = ids.map(_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLinkKey);\n    const rows = await Promise.all(keys.map((k)=>(0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(k)));\n    return rows.filter(Boolean);\n}\nasync function removeLink(linkId) {\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLinkKey)(linkId);\n    const existing = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n    if (existing) {\n        // Remove from both source and target indexes\n        await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLinksIndexKey)(existing.source.type, existing.source.id), linkId);\n        await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLinksIndexKey)(existing.target.type, existing.target.id), linkId);\n    }\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)(key);\n}\nasync function getAllLinks() {\n    const keys = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvScan)(\"links:link:\");\n    if (!keys.length) return [];\n    const links = await Promise.all(keys.map((k)=>(0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(k)));\n    return links.filter(Boolean);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saW5rcy9saW5rLXJlZ2lzdHJ5LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSx5QkFBeUI7QUFDekIsc0RBQXNEO0FBSW9DO0FBQ3JCO0FBQ3BCO0FBRTFDLGVBQWVVLFdBQVdDLElBQVU7SUFDekMsZ0NBQWdDO0lBQ2hDLE1BQU1DLGFBQWEsTUFBTUgsOERBQVlBLENBQUNFLEtBQUtFLFFBQVEsRUFBRUYsS0FBS0csTUFBTSxFQUFFSCxLQUFLSSxNQUFNLEVBQUVKLEtBQUtLLFFBQVE7SUFDNUYsSUFBSSxDQUFDSixXQUFXSyxPQUFPLEVBQUU7UUFDdkJDLFFBQVFDLElBQUksQ0FBQyxDQUFDLGdDQUFnQyxFQUFFUCxXQUFXUSxNQUFNLENBQUMsQ0FBQztRQUNuRSxJQUFJUixXQUFXUyxRQUFRLEVBQUU7WUFDdkJILFFBQVFDLElBQUksQ0FBQyxDQUFDLGlDQUFpQyxDQUFDLEVBQUVQLFdBQVdTLFFBQVE7UUFDdkU7UUFDQSxRQUFRLDhCQUE4QjtJQUN4QztJQUVBLHNCQUFzQjtJQUN0QixJQUFJVCxXQUFXUyxRQUFRLElBQUlULFdBQVdTLFFBQVEsQ0FBQ0MsTUFBTSxHQUFHLEdBQUc7UUFDekRKLFFBQVFDLElBQUksQ0FBQyxDQUFDLHFDQUFxQyxFQUFFUixLQUFLRSxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUVELFdBQVdTLFFBQVE7SUFDNUY7SUFFQSxNQUFNcEIscURBQUtBLENBQUNNLDhEQUFZQSxDQUFDSSxLQUFLWSxFQUFFLEdBQUdaO0lBQ25DLHVEQUF1RDtJQUN2RCxNQUFNUixzREFBTUEsQ0FBQ0ssb0VBQWtCQSxDQUFDRyxLQUFLRyxNQUFNLENBQUNVLElBQUksRUFBRWIsS0FBS0csTUFBTSxDQUFDUyxFQUFFLEdBQUdaLEtBQUtZLEVBQUU7SUFDMUUsTUFBTXBCLHNEQUFNQSxDQUFDSyxvRUFBa0JBLENBQUNHLEtBQUtJLE1BQU0sQ0FBQ1MsSUFBSSxFQUFFYixLQUFLSSxNQUFNLENBQUNRLEVBQUUsR0FBR1osS0FBS1ksRUFBRTtBQUM1RTtBQUVPLGVBQWVFLFlBQVlDLE1BQXdDO0lBQ3hFLE1BQU1DLE1BQU0sTUFBTXRCLDBEQUFVQSxDQUFDRyxvRUFBa0JBLENBQUNrQixPQUFPRixJQUFJLEVBQUVFLE9BQU9ILEVBQUU7SUFDdEUsSUFBSSxDQUFDSSxJQUFJTCxNQUFNLEVBQUUsT0FBTyxFQUFFO0lBQzFCLE1BQU1NLE9BQU9ELElBQUlFLEdBQUcsQ0FBQ3RCLDBEQUFZQTtJQUNqQyxNQUFNdUIsT0FBTyxNQUFNQyxRQUFRQyxHQUFHLENBQUNKLEtBQUtDLEdBQUcsQ0FBQ0ksQ0FBQUEsSUFBS2pDLHFEQUFLQSxDQUFPaUM7SUFDekQsT0FBT0gsS0FBS0ksTUFBTSxDQUFDQztBQUNyQjtBQUVPLGVBQWVDLFdBQVdDLE1BQWM7SUFDN0MsTUFBTUMsTUFBTS9CLDhEQUFZQSxDQUFDOEI7SUFDekIsTUFBTUUsV0FBVyxNQUFNdkMscURBQUtBLENBQU9zQztJQUNuQyxJQUFJQyxVQUFVO1FBQ1osNkNBQTZDO1FBQzdDLE1BQU1uQyxzREFBTUEsQ0FBQ0ksb0VBQWtCQSxDQUFDK0IsU0FBU3pCLE1BQU0sQ0FBQ1UsSUFBSSxFQUFFZSxTQUFTekIsTUFBTSxDQUFDUyxFQUFFLEdBQUdjO1FBQzNFLE1BQU1qQyxzREFBTUEsQ0FBQ0ksb0VBQWtCQSxDQUFDK0IsU0FBU3hCLE1BQU0sQ0FBQ1MsSUFBSSxFQUFFZSxTQUFTeEIsTUFBTSxDQUFDUSxFQUFFLEdBQUdjO0lBQzdFO0lBQ0EsTUFBTW5DLHFEQUFLQSxDQUFDb0M7QUFDZDtBQUVPLGVBQWVFO0lBQ3BCLE1BQU1aLE9BQU8sTUFBTXRCLHNEQUFNQSxDQUFDO0lBQzFCLElBQUksQ0FBQ3NCLEtBQUtOLE1BQU0sRUFBRSxPQUFPLEVBQUU7SUFDM0IsTUFBTW1CLFFBQVEsTUFBTVYsUUFBUUMsR0FBRyxDQUFDSixLQUFLQyxHQUFHLENBQUMsQ0FBQ0ksSUFBY2pDLHFEQUFLQSxDQUFPaUM7SUFDcEUsT0FBT1EsTUFBTVAsTUFBTSxDQUFDQztBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL3RoZWdhbWUtYWRtaW4vLi9saW5rcy9saW5rLXJlZ2lzdHJ5LnRzP2VhMDciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbGlua3MvbGluay1yZWdpc3RyeS50c1xyXG4vLyBUaGUgUm9zZXR0YSBTdG9uZSBzdG9yYWdlIGFuZCBxdWVyeSBsYXllciAoS1Ygb25seSlcclxuXHJcbmltcG9ydCB7IExpbmtUeXBlLCBFbnRpdHlUeXBlIH0gZnJvbSAnQC90eXBlcy9lbnVtcyc7XHJcbmltcG9ydCB0eXBlIHsgTGluayB9IGZyb20gJ0AvdHlwZXMvZW50aXRpZXMnO1xyXG5pbXBvcnQgeyBrdkdldCwga3ZTZXQsIGt2RGVsLCBrdlNBZGQsIGt2U1JlbSwga3ZTTWVtYmVycywga3ZTY2FuIH0gZnJvbSAnQC9kYXRhLXN0b3JlL2t2JztcclxuaW1wb3J0IHsgYnVpbGRMaW5rS2V5LCBidWlsZExpbmtzSW5kZXhLZXkgfSBmcm9tICdAL2RhdGEtc3RvcmUva2V5cyc7XHJcbmltcG9ydCB7IHZhbGlkYXRlTGluayB9IGZyb20gJy4vbGluay12YWxpZGF0aW9uJztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVMaW5rKGxpbms6IExpbmspOiBQcm9taXNlPHZvaWQ+IHtcclxuICAvLyBORVc6IFZhbGlkYXRlIGJlZm9yZSBjcmVhdGluZ1xyXG4gIGNvbnN0IHZhbGlkYXRpb24gPSBhd2FpdCB2YWxpZGF0ZUxpbmsobGluay5saW5rVHlwZSwgbGluay5zb3VyY2UsIGxpbmsudGFyZ2V0LCBsaW5rLm1ldGFkYXRhKTtcclxuICBpZiAoIXZhbGlkYXRpb24uaXNWYWxpZCkge1xyXG4gICAgY29uc29sZS53YXJuKGBbY3JlYXRlTGlua10gVmFsaWRhdGlvbiBmYWlsZWQ6ICR7dmFsaWRhdGlvbi5yZWFzb259YCk7XHJcbiAgICBpZiAodmFsaWRhdGlvbi53YXJuaW5ncykge1xyXG4gICAgICBjb25zb2xlLndhcm4oYFtjcmVhdGVMaW5rXSBWYWxpZGF0aW9uIHdhcm5pbmdzOmAsIHZhbGlkYXRpb24ud2FybmluZ3MpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuOyAvLyBTa2lwIGNyZWF0aW5nIGludmFsaWQgbGlua3NcclxuICB9XHJcbiAgXHJcbiAgLy8gTG9nIHdhcm5pbmdzIGlmIGFueVxyXG4gIGlmICh2YWxpZGF0aW9uLndhcm5pbmdzICYmIHZhbGlkYXRpb24ud2FybmluZ3MubGVuZ3RoID4gMCkge1xyXG4gICAgY29uc29sZS53YXJuKGBbY3JlYXRlTGlua10gVmFsaWRhdGlvbiB3YXJuaW5ncyBmb3IgJHtsaW5rLmxpbmtUeXBlfTpgLCB2YWxpZGF0aW9uLndhcm5pbmdzKTtcclxuICB9XHJcbiAgXHJcbiAgYXdhaXQga3ZTZXQoYnVpbGRMaW5rS2V5KGxpbmsuaWQpLCBsaW5rKTtcclxuICAvLyBpbmRleCBieSBzb3VyY2UgYW5kIHRhcmdldCBmb3IgYmlkaXJlY3Rpb25hbCBxdWVyaWVzXHJcbiAgYXdhaXQga3ZTQWRkKGJ1aWxkTGlua3NJbmRleEtleShsaW5rLnNvdXJjZS50eXBlLCBsaW5rLnNvdXJjZS5pZCksIGxpbmsuaWQpO1xyXG4gIGF3YWl0IGt2U0FkZChidWlsZExpbmtzSW5kZXhLZXkobGluay50YXJnZXQudHlwZSwgbGluay50YXJnZXQuaWQpLCBsaW5rLmlkKTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldExpbmtzRm9yKGVudGl0eTogeyB0eXBlOiBFbnRpdHlUeXBlOyBpZDogc3RyaW5nIH0pOiBQcm9taXNlPExpbmtbXT4ge1xyXG4gIGNvbnN0IGlkcyA9IGF3YWl0IGt2U01lbWJlcnMoYnVpbGRMaW5rc0luZGV4S2V5KGVudGl0eS50eXBlLCBlbnRpdHkuaWQpKTtcclxuICBpZiAoIWlkcy5sZW5ndGgpIHJldHVybiBbXTtcclxuICBjb25zdCBrZXlzID0gaWRzLm1hcChidWlsZExpbmtLZXkpO1xyXG4gIGNvbnN0IHJvd3MgPSBhd2FpdCBQcm9taXNlLmFsbChrZXlzLm1hcChrID0+IGt2R2V0PExpbms+KGspKSk7XHJcbiAgcmV0dXJuIHJvd3MuZmlsdGVyKEJvb2xlYW4pIGFzIExpbmtbXTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlbW92ZUxpbmsobGlua0lkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcclxuICBjb25zdCBrZXkgPSBidWlsZExpbmtLZXkobGlua0lkKTtcclxuICBjb25zdCBleGlzdGluZyA9IGF3YWl0IGt2R2V0PExpbms+KGtleSk7XHJcbiAgaWYgKGV4aXN0aW5nKSB7XHJcbiAgICAvLyBSZW1vdmUgZnJvbSBib3RoIHNvdXJjZSBhbmQgdGFyZ2V0IGluZGV4ZXNcclxuICAgIGF3YWl0IGt2U1JlbShidWlsZExpbmtzSW5kZXhLZXkoZXhpc3Rpbmcuc291cmNlLnR5cGUsIGV4aXN0aW5nLnNvdXJjZS5pZCksIGxpbmtJZCk7XHJcbiAgICBhd2FpdCBrdlNSZW0oYnVpbGRMaW5rc0luZGV4S2V5KGV4aXN0aW5nLnRhcmdldC50eXBlLCBleGlzdGluZy50YXJnZXQuaWQpLCBsaW5rSWQpO1xyXG4gIH1cclxuICBhd2FpdCBrdkRlbChrZXkpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsTGlua3MoKTogUHJvbWlzZTxMaW5rW10+IHtcclxuICBjb25zdCBrZXlzID0gYXdhaXQga3ZTY2FuKCdsaW5rczpsaW5rOicpO1xyXG4gIGlmICgha2V5cy5sZW5ndGgpIHJldHVybiBbXTtcclxuICBjb25zdCBsaW5rcyA9IGF3YWl0IFByb21pc2UuYWxsKGtleXMubWFwKChrOiBzdHJpbmcpID0+IGt2R2V0PExpbms+KGspKSk7XHJcbiAgcmV0dXJuIGxpbmtzLmZpbHRlcihCb29sZWFuKSBhcyBMaW5rW107XHJcbn1cclxuXHJcblxyXG4iXSwibmFtZXMiOlsia3ZHZXQiLCJrdlNldCIsImt2RGVsIiwia3ZTQWRkIiwia3ZTUmVtIiwia3ZTTWVtYmVycyIsImt2U2NhbiIsImJ1aWxkTGlua0tleSIsImJ1aWxkTGlua3NJbmRleEtleSIsInZhbGlkYXRlTGluayIsImNyZWF0ZUxpbmsiLCJsaW5rIiwidmFsaWRhdGlvbiIsImxpbmtUeXBlIiwic291cmNlIiwidGFyZ2V0IiwibWV0YWRhdGEiLCJpc1ZhbGlkIiwiY29uc29sZSIsIndhcm4iLCJyZWFzb24iLCJ3YXJuaW5ncyIsImxlbmd0aCIsImlkIiwidHlwZSIsImdldExpbmtzRm9yIiwiZW50aXR5IiwiaWRzIiwia2V5cyIsIm1hcCIsInJvd3MiLCJQcm9taXNlIiwiYWxsIiwiayIsImZpbHRlciIsIkJvb2xlYW4iLCJyZW1vdmVMaW5rIiwibGlua0lkIiwia2V5IiwiZXhpc3RpbmciLCJnZXRBbGxMaW5rcyIsImxpbmtzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./links/link-registry.ts\n");

/***/ }),

/***/ "(rsc)/./links/link-validation.ts":
/*!**********************************!*\
  !*** ./links/link-validation.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateBusinessRules: () => (/* binding */ validateBusinessRules),\n/* harmony export */   validateEntityExists: () => (/* binding */ validateEntityExists),\n/* harmony export */   validateLink: () => (/* binding */ validateLink),\n/* harmony export */   validateLinkTypeCompatibility: () => (/* binding */ validateLinkTypeCompatibility)\n/* harmony export */ });\n/* harmony import */ var _types_enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/enums */ \"(rsc)/./types/enums.ts\");\n/* harmony import */ var _data_store_datastore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/datastore */ \"(rsc)/./data-store/datastore.ts\");\n// links/link-validation.ts\n// Link Validation System for The Rosetta Stone\n// Migrated from lib/game-mechanics/workflow-integration.ts\n\n\n/**\r\n * Main link validation orchestrator\r\n * Validates link type compatibility, entity existence, and business rules\r\n */ async function validateLink(linkType, source, target, metadata) {\n    const warnings = [];\n    try {\n        // 1. Basic validation\n        if (!linkType || !source?.type || !source?.id || !target?.type || !target?.id) {\n            return {\n                isValid: false,\n                reason: \"Missing required fields: linkType, source.type, source.id, target.type, target.id\"\n            };\n        }\n        // 2. Self-reference validation\n        if (source.type === target.type && source.id === target.id) {\n            return {\n                isValid: false,\n                reason: \"Self-referencing links are not allowed\"\n            };\n        }\n        // 3. Link type compatibility validation\n        const compatibilityResult = validateLinkTypeCompatibility(linkType, source.type, target.type);\n        if (!compatibilityResult.isValid) {\n            return {\n                isValid: false,\n                reason: `Incompatible link type: ${linkType} cannot connect ${source.type} to ${target.type}. ${compatibilityResult.reason}`\n            };\n        }\n        // 4. Entity existence validation\n        const sourceExists = await validateEntityExists(source.type, source.id);\n        if (!sourceExists) {\n            return {\n                isValid: false,\n                reason: `Source entity does not exist: ${source.type}:${source.id}`\n            };\n        }\n        const targetExists = await validateEntityExists(target.type, target.id);\n        if (!targetExists) {\n            return {\n                isValid: false,\n                reason: `Target entity does not exist: ${target.type}:${target.id}`\n            };\n        }\n        // 5. Business rules validation\n        const businessRulesResult = await validateBusinessRules(linkType, source, target, metadata);\n        if (!businessRulesResult.isValid) {\n            return {\n                isValid: false,\n                reason: businessRulesResult.reason\n            };\n        }\n        // Add any warnings from business rules\n        if (businessRulesResult.warnings) {\n            warnings.push(...businessRulesResult.warnings);\n        }\n        return {\n            isValid: true,\n            warnings: warnings.length > 0 ? warnings : undefined\n        };\n    } catch (error) {\n        return {\n            isValid: false,\n            reason: `Validation error: ${error instanceof Error ? error.message : \"Unknown error\"}`\n        };\n    }\n}\n/**\r\n * Validate link type compatibility with source and target entity types\r\n * Complete mapping of all 39 link types\r\n */ function validateLinkTypeCompatibility(linkType, sourceType, targetType) {\n    // Define valid link type combinations for all 39 link types\n    const validCombinations = {\n        // TASK relationships (6)\n        \"TASK_ITEM\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ]\n        },\n        \"TASK_FINREC\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ]\n        },\n        \"TASK_SALE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ]\n        },\n        \"TASK_PLAYER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ]\n        },\n        \"TASK_CHARACTER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ]\n        },\n        \"TASK_SITE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ]\n        },\n        // ITEM relationships (6)\n        \"ITEM_TASK\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ]\n        },\n        \"ITEM_SALE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ]\n        },\n        \"ITEM_FINREC\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ]\n        },\n        \"ITEM_PLAYER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ]\n        },\n        \"ITEM_CHARACTER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ]\n        },\n        \"ITEM_SITE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ]\n        },\n        // SALE relationships (6)\n        \"SALE_TASK\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ]\n        },\n        \"SALE_ITEM\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ]\n        },\n        \"SALE_FINREC\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ]\n        },\n        \"SALE_PLAYER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ]\n        },\n        \"SALE_CHARACTER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ]\n        },\n        \"SALE_SITE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ]\n        },\n        // FINANCIAL RECORD relationships (6)\n        \"FINREC_TASK\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ]\n        },\n        \"FINREC_ITEM\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ]\n        },\n        \"FINREC_SALE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ]\n        },\n        \"FINREC_PLAYER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ]\n        },\n        \"FINREC_CHARACTER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ]\n        },\n        \"FINREC_SITE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ]\n        },\n        // CHARACTER relationships (6)\n        \"CHARACTER_TASK\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ]\n        },\n        \"CHARACTER_ITEM\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ]\n        },\n        \"CHARACTER_SALE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ]\n        },\n        \"CHARACTER_FINREC\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ]\n        },\n        \"CHARACTER_SITE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ]\n        },\n        \"CHARACTER_PLAYER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ]\n        },\n        // SITE relationships (6)\n        \"SITE_TASK\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ]\n        },\n        \"SITE_CHARACTER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ]\n        },\n        \"SITE_FINREC\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ]\n        },\n        \"SITE_ITEM\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ]\n        },\n        \"SITE_SALE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ]\n        },\n        \"SITE_SITE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ]\n        },\n        // PLAYER relationships (5)\n        \"PLAYER_TASK\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ]\n        },\n        \"PLAYER_SALE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ]\n        },\n        \"PLAYER_FINREC\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ]\n        },\n        \"PLAYER_ITEM\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ]\n        },\n        \"PLAYER_CHARACTER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ]\n        },\n        // ACCOUNT relationships (4)\n        \"ACCOUNT_PLAYER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ACCOUNT\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ]\n        },\n        \"ACCOUNT_CHARACTER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ACCOUNT\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ]\n        },\n        \"PLAYER_ACCOUNT\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ACCOUNT\n            ]\n        },\n        \"CHARACTER_ACCOUNT\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ACCOUNT\n            ]\n        }\n    };\n    const combination = validCombinations[linkType];\n    if (!combination) {\n        return {\n            isValid: false,\n            reason: `Unknown link type: ${linkType}`\n        };\n    }\n    if (!combination.source.includes(sourceType)) {\n        return {\n            isValid: false,\n            reason: `Invalid source type for ${linkType}: ${sourceType}. Valid sources: ${combination.source.join(\", \")}`\n        };\n    }\n    if (!combination.target.includes(targetType)) {\n        return {\n            isValid: false,\n            reason: `Invalid target type for ${linkType}: ${targetType}. Valid targets: ${combination.target.join(\", \")}`\n        };\n    }\n    return {\n        isValid: true\n    };\n}\n/**\r\n * Validate that entity exists in the system\r\n */ async function validateEntityExists(entityType, entityId) {\n    try {\n        switch(entityType){\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK:\n                const tasks = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllTasks)();\n                const task = tasks.find((t)=>t.id === entityId);\n                return !!task;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM:\n                const items = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllItems)();\n                const item = items.find((i)=>i.id === entityId);\n                return !!item;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL:\n                const financialRecords = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllFinancials)();\n                const financial = financialRecords.find((f)=>f.id === entityId);\n                return !!financial;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE:\n                const sales = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllSales)();\n                const sale = sales.find((s)=>s.id === entityId);\n                return !!sale;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER:\n                const characters = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllCharacters)();\n                const character = characters.find((c)=>c.id === entityId);\n                return !!character;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER:\n                const players = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllPlayers)();\n                const player = players.find((p)=>p.id === entityId);\n                return !!player;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE:\n                const sites = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllSites)();\n                const site = sites.find((s)=>s.id === entityId);\n                return !!site;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ACCOUNT:\n                // Account entity not implemented in current datastore\n                return false;\n            default:\n                console.warn(`[validateEntityExists] Unknown entity type: ${entityType}`);\n                return false;\n        }\n    } catch (error) {\n        console.error(`[validateEntityExists] Error validating entity ${entityType}:${entityId}:`, error);\n        return false;\n    }\n}\n/**\r\n * Validate business rules specific to link types\r\n */ async function validateBusinessRules(linkType, source, target, metadata) {\n    const warnings = [];\n    try {\n        switch(linkType){\n            case \"PLAYER_CHARACTER\":\n                // Validate that character has valid playerId\n                const characters = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllCharacters)();\n                const character = characters.find((c)=>c.id === source.id);\n                if (character && character.playerId !== target.id) {\n                    warnings.push(`Character playerId (${character.playerId}) does not match target player ID (${target.id})`);\n                }\n                break;\n            case \"TASK_SITE\":\n                // Validate that task has valid siteId\n                const tasks = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllTasks)();\n                const task = tasks.find((t)=>t.id === source.id);\n                if (task && task.siteId !== target.id) {\n                    warnings.push(`Task siteId (${task.siteId}) does not match target site ID (${target.id})`);\n                }\n                break;\n            case \"ITEM_SITE\":\n                // Validate item stock location\n                const items = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllItems)();\n                const item = items.find((i)=>i.id === source.id);\n                if (item && item.stock) {\n                    const hasStockAtSite = item.stock.some((stock)=>stock.siteId === target.id);\n                    if (!hasStockAtSite) {\n                        warnings.push(`Item does not have stock at target site: ${target.id}`);\n                    }\n                }\n                break;\n            case \"SALE_ITEM\":\n                // Validate sale contains the item\n                const sales = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllSales)();\n                const sale = sales.find((s)=>s.id === source.id);\n                if (sale && sale.lines) {\n                    const hasItemInSale = sale.lines.some((line)=>line.kind === \"item\" && line.itemId === target.id);\n                    if (!hasItemInSale) {\n                        warnings.push(`Sale does not contain target item: ${target.id}`);\n                    }\n                }\n                break;\n            case \"CHARACTER_PLAYER\":\n                // Validate that character belongs to the player\n                const charForPlayer = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllCharacters)();\n                const char = charForPlayer.find((c)=>c.id === source.id);\n                if (char && char.playerId !== target.id) {\n                    warnings.push(`Character playerId (${char.playerId}) does not match target player ID (${target.id})`);\n                }\n                break;\n            case \"SALE_CHARACTER\":\n                // Validate that character is the customer\n                const saleForChar = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllSales)();\n                const saleWithChar = saleForChar.find((s)=>s.id === source.id);\n                if (saleWithChar && saleWithChar.customerId !== target.id) {\n                    warnings.push(`Sale customerId (${saleWithChar.customerId}) does not match target character ID (${target.id})`);\n                }\n                break;\n            // Add more business rule validations as needed\n            default:\n                break;\n        }\n        return {\n            isValid: true,\n            warnings: warnings.length > 0 ? warnings : undefined\n        };\n    } catch (error) {\n        return {\n            isValid: false,\n            reason: `Business rules validation error: ${error instanceof Error ? error.message : \"Unknown error\"}`\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./links/link-validation.ts\n");

/***/ }),

/***/ "(rsc)/./links/links-logging.ts":
/*!********************************!*\
  !*** ./links/links-logging.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendLinkLog: () => (/* binding */ appendLinkLog)\n/* harmony export */ });\n/* harmony import */ var _data_store_kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/data-store/kv */ \"(rsc)/./data-store/kv.ts\");\n/* harmony import */ var _data_store_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/keys */ \"(rsc)/./data-store/keys.ts\");\n// links/links-logging.ts\n// Links self-logging: append link events to KV\n\n\nconst ENTITY = \"links\";\nasync function appendLinkLog(link, kind = \"created\") {\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLogKey)(ENTITY);\n    const list = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key) || [];\n    list.push({\n        kind,\n        linkId: link.id,\n        linkType: String(link.linkType),\n        source: {\n            type: String(link.source.type),\n            id: link.source.id\n        },\n        target: {\n            type: String(link.target.type),\n            id: link.target.id\n        },\n        metadata: link.metadata,\n        at: new Date().toISOString()\n    });\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, list);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saW5rcy9saW5rcy1sb2dnaW5nLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHlCQUF5QjtBQUN6QiwrQ0FBK0M7QUFHQTtBQUNDO0FBRWhELE1BQU1HLFNBQVM7QUFZUixlQUFlQyxjQUFjQyxJQUFVLEVBQUVDLE9BQTZCLFNBQVM7SUFDcEYsTUFBTUMsTUFBTUwsNkRBQVdBLENBQUNDO0lBQ3hCLE1BQU1LLE9BQU8sTUFBT1IscURBQUtBLENBQWlCTyxRQUFTLEVBQUU7SUFDckRDLEtBQUtDLElBQUksQ0FBQztRQUNSSDtRQUNBSSxRQUFRTCxLQUFLTSxFQUFFO1FBQ2ZDLFVBQVVDLE9BQU9SLEtBQUtPLFFBQVE7UUFDOUJFLFFBQVE7WUFBRUMsTUFBTUYsT0FBT1IsS0FBS1MsTUFBTSxDQUFDQyxJQUFJO1lBQUdKLElBQUlOLEtBQUtTLE1BQU0sQ0FBQ0gsRUFBRTtRQUFDO1FBQzdESyxRQUFRO1lBQUVELE1BQU1GLE9BQU9SLEtBQUtXLE1BQU0sQ0FBQ0QsSUFBSTtZQUFHSixJQUFJTixLQUFLVyxNQUFNLENBQUNMLEVBQUU7UUFBQztRQUM3RE0sVUFBVVosS0FBS1ksUUFBUTtRQUN2QkMsSUFBSSxJQUFJQyxPQUFPQyxXQUFXO0lBQzVCO0lBQ0EsTUFBTW5CLHFEQUFLQSxDQUFDTSxLQUFLQztBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL3RoZWdhbWUtYWRtaW4vLi9saW5rcy9saW5rcy1sb2dnaW5nLnRzP2Q0MmUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbGlua3MvbGlua3MtbG9nZ2luZy50c1xyXG4vLyBMaW5rcyBzZWxmLWxvZ2dpbmc6IGFwcGVuZCBsaW5rIGV2ZW50cyB0byBLVlxyXG5cclxuaW1wb3J0IHR5cGUgeyBMaW5rIH0gZnJvbSAnQC90eXBlcy9lbnRpdGllcyc7XHJcbmltcG9ydCB7IGt2R2V0LCBrdlNldCB9IGZyb20gJ0AvZGF0YS1zdG9yZS9rdic7XHJcbmltcG9ydCB7IGJ1aWxkTG9nS2V5IH0gZnJvbSAnQC9kYXRhLXN0b3JlL2tleXMnO1xyXG5cclxuY29uc3QgRU5USVRZID0gJ2xpbmtzJztcclxuXHJcbmV4cG9ydCB0eXBlIExpbmtMb2dFdmVudCA9IHtcclxuICBraW5kOiAnY3JlYXRlZCcgfCAncmVtb3ZlZCcgfCAndXBkYXRlZCc7XHJcbiAgbGlua0lkOiBzdHJpbmc7XHJcbiAgbGlua1R5cGU6IHN0cmluZztcclxuICBzb3VyY2U6IHsgdHlwZTogc3RyaW5nOyBpZDogc3RyaW5nIH07XHJcbiAgdGFyZ2V0OiB7IHR5cGU6IHN0cmluZzsgaWQ6IHN0cmluZyB9O1xyXG4gIG1ldGFkYXRhPzogUmVjb3JkPHN0cmluZywgYW55PjtcclxuICBhdDogc3RyaW5nOyAvLyBJU08gdGltZXN0YW1wXHJcbn07XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYXBwZW5kTGlua0xvZyhsaW5rOiBMaW5rLCBraW5kOiBMaW5rTG9nRXZlbnRbJ2tpbmQnXSA9ICdjcmVhdGVkJyk6IFByb21pc2U8dm9pZD4ge1xyXG4gIGNvbnN0IGtleSA9IGJ1aWxkTG9nS2V5KEVOVElUWSk7XHJcbiAgY29uc3QgbGlzdCA9IChhd2FpdCBrdkdldDxMaW5rTG9nRXZlbnRbXT4oa2V5KSkgfHwgW107XHJcbiAgbGlzdC5wdXNoKHtcclxuICAgIGtpbmQsXHJcbiAgICBsaW5rSWQ6IGxpbmsuaWQsXHJcbiAgICBsaW5rVHlwZTogU3RyaW5nKGxpbmsubGlua1R5cGUpLFxyXG4gICAgc291cmNlOiB7IHR5cGU6IFN0cmluZyhsaW5rLnNvdXJjZS50eXBlKSwgaWQ6IGxpbmsuc291cmNlLmlkIH0sXHJcbiAgICB0YXJnZXQ6IHsgdHlwZTogU3RyaW5nKGxpbmsudGFyZ2V0LnR5cGUpLCBpZDogbGluay50YXJnZXQuaWQgfSxcclxuICAgIG1ldGFkYXRhOiBsaW5rLm1ldGFkYXRhLFxyXG4gICAgYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcclxuICB9KTtcclxuICBhd2FpdCBrdlNldChrZXksIGxpc3QpO1xyXG59XHJcblxyXG5cclxuIl0sIm5hbWVzIjpbImt2R2V0Iiwia3ZTZXQiLCJidWlsZExvZ0tleSIsIkVOVElUWSIsImFwcGVuZExpbmtMb2ciLCJsaW5rIiwia2luZCIsImtleSIsImxpc3QiLCJwdXNoIiwibGlua0lkIiwiaWQiLCJsaW5rVHlwZSIsIlN0cmluZyIsInNvdXJjZSIsInR5cGUiLCJ0YXJnZXQiLCJtZXRhZGF0YSIsImF0IiwiRGF0ZSIsInRvSVNPU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./links/links-logging.ts\n");

/***/ }),

/***/ "(rsc)/./links/links-workflows.ts":
/*!**********************************!*\
  !*** ./links/links-workflows.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeLink: () => (/* binding */ makeLink),\n/* harmony export */   processCharacterEffects: () => (/* binding */ processCharacterEffects),\n/* harmony export */   processFinancialEffects: () => (/* binding */ processFinancialEffects),\n/* harmony export */   processItemEffects: () => (/* binding */ processItemEffects),\n/* harmony export */   processLinkEntity: () => (/* binding */ processLinkEntity),\n/* harmony export */   processPlayerEffects: () => (/* binding */ processPlayerEffects),\n/* harmony export */   processSaleEffects: () => (/* binding */ processSaleEffects),\n/* harmony export */   processTaskEffects: () => (/* binding */ processTaskEffects)\n/* harmony export */ });\n/* harmony import */ var _types_enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/enums */ \"(rsc)/./types/enums.ts\");\n/* harmony import */ var _link_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./link-registry */ \"(rsc)/./links/link-registry.ts\");\n/* harmony import */ var _links_logging__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./links-logging */ \"(rsc)/./links/links-logging.ts\");\n/* harmony import */ var _data_store_datastore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/data-store/datastore */ \"(rsc)/./data-store/datastore.ts\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm/v4.js\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(rsc)/./data-store/effects-registry.ts\");\n// links/links-workflows.ts\n// Universal entry point for creating links from entities (property inspection)\n\n\n\n\n\n\nfunction makeLink(linkType, source, target, metadata) {\n    return {\n        id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(),\n        linkType,\n        source,\n        target,\n        createdAt: new Date(),\n        metadata\n    };\n}\nasync function processLinkEntity(entity, entityType) {\n    // Check for circular reference\n    if ((0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.isProcessing)(entityType, entity.id)) {\n        console.warn(`[CircuitBreaker] Already processing ${entityType}:${entity.id} - skipping to prevent circular reference`);\n        return;\n    }\n    try {\n        (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.startProcessing)(entityType, entity.id);\n        switch(entityType){\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK:\n                await processTaskEffects(entity);\n                break;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM:\n                await processItemEffects(entity);\n                break;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE:\n                await processSaleEffects(entity);\n                break;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL:\n                await processFinancialEffects(entity);\n                break;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER:\n                await processCharacterEffects(entity);\n                break;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER:\n                await processPlayerEffects(entity);\n                break;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE:\n                break;\n            default:\n                return;\n        }\n    } finally{\n        (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.endProcessing)(entityType, entity.id);\n    }\n}\nasync function processTaskEffects(task) {\n    if (task.siteId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.TASK_SITE, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n            id: task.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE,\n            id: task.siteId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n    if (task.outputItemId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.TASK_ITEM, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n            id: task.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM,\n            id: task.outputItemId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n    // TASK_CHARACTER link\n    if (task.characterId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.TASK_CHARACTER, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n            id: task.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER,\n            id: task.characterId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n    // Create TASK_ITEM link for items created from task emissary fields\n    if (task.outputItemType && task.outputQuantity && task.status === \"Done\") {\n        // Find the item created by this task\n        const items = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_3__.getAllItems)();\n        const createdItem = items.find((item)=>item.sourceTaskId === task.id && item.type === task.outputItemType);\n        if (createdItem) {\n            const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.TASK_ITEM, {\n                type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n                id: task.id\n            }, {\n                type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM,\n                id: createdItem.id\n            }, {\n                quantity: task.outputQuantity,\n                unitCost: task.outputUnitCost,\n                price: task.outputItemPrice,\n                itemType: task.outputItemType\n            });\n            await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n            await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n        }\n    }\n// Note: TASK_PLAYER handled by points-rewards-utils.ts ✅\n// Note: TASK_FINREC handled by financial-record-utils.ts ✅\n}\nasync function processItemEffects(item) {\n    if (item.sourceTaskId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.ITEM_TASK, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM,\n            id: item.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n            id: item.sourceTaskId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n    for (const s of item.stock || []){\n        if (s.siteId) {\n            const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.ITEM_SITE, {\n                type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM,\n                id: item.id\n            }, {\n                type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE,\n                id: s.siteId\n            });\n            await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n            await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n        }\n    }\n    // ITEM_CHARACTER link\n    if (item.ownerCharacterId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.ITEM_CHARACTER, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM,\n            id: item.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER,\n            id: item.ownerCharacterId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n// Note: ITEM_SALE links handled in processSaleEffects (from sale.lines)\n}\nasync function processSaleEffects(sale) {\n    if (sale.siteId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.SALE_SITE, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE,\n            id: sale.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE,\n            id: sale.siteId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n    // SALE_CHARACTER link\n    if (sale.customerId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.SALE_CHARACTER, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE,\n            id: sale.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER,\n            id: sale.customerId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n    // SALE_ITEM links (from sale lines)\n    if (sale.lines && sale.lines.length > 0) {\n        for (const line of sale.lines){\n            if (line.kind === \"item\" && line.itemId) {\n                const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.SALE_ITEM, {\n                    type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE,\n                    id: sale.id\n                }, {\n                    type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM,\n                    id: line.itemId\n                }, {\n                    quantity: line.quantity,\n                    unitPrice: line.unitPrice\n                });\n                await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n                await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n            }\n        }\n    }\n    // SALE_TASK link (if sale spawned from task)\n    if (sale.sourceTaskId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.SALE_TASK, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE,\n            id: sale.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n            id: sale.sourceTaskId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n// Note: SALE_PLAYER handled by points-rewards-utils.ts ✅\n}\nasync function processFinancialEffects(fin) {\n    if (fin.siteId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.FINREC_SITE, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL,\n            id: fin.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE,\n            id: fin.siteId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n    // FINREC_CHARACTER link\n    if (fin.customerCharacterId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.FINREC_CHARACTER, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL,\n            id: fin.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER,\n            id: fin.customerCharacterId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n    // Create FINREC_ITEM link for items created from financial record emissary fields\n    if (fin.outputItemType && fin.outputQuantity) {\n        // Find the item created by this financial record\n        const items = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_3__.getAllItems)();\n        const createdItem = items.find((item)=>item.sourceRecordId === fin.id && item.type === fin.outputItemType);\n        if (createdItem) {\n            const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.FINREC_ITEM, {\n                type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL,\n                id: fin.id\n            }, {\n                type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM,\n                id: createdItem.id\n            }, {\n                quantity: fin.outputQuantity,\n                unitCost: fin.outputUnitCost,\n                price: fin.outputItemPrice,\n                itemType: fin.outputItemType\n            });\n            await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n            await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n        }\n    }\n// Note: FINREC_TASK handled by financial-record-utils.ts ✅\n// Note: FINREC_PLAYER handled by points-rewards-utils.ts ✅\n}\nasync function processCharacterEffects(character) {\n    // CHARACTER_PLAYER link\n    if (character.playerId) {\n        const link = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.CHARACTER_PLAYER, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER,\n            id: character.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER,\n            id: character.playerId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(link);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(link, \"created\");\n    }\n    // CHARACTER_SITE link (if character has home site)\n    if (character.siteId) {\n        const link = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.CHARACTER_SITE, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER,\n            id: character.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE,\n            id: character.siteId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(link);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(link, \"created\");\n    }\n}\nasync function processPlayerEffects(player) {\n    // PLAYER_CHARACTER links (array of characters)\n    if (player.characterIds && player.characterIds.length > 0) {\n        for (const characterId of player.characterIds){\n            const link = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.PLAYER_CHARACTER, {\n                type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER,\n                id: player.id\n            }, {\n                type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER,\n                id: characterId\n            });\n            await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(link);\n            await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(link, \"created\");\n        }\n    }\n// Note: PLAYER_SITE links not implemented - Player doesn't have siteId field\n} // Sites don't create links when saved - they're primarily link targets\n // SITE_SITE links are created by movement operations (see workflows/site-movement-utils.ts)\n // No processSiteEffects function needed - sites have no link-creating properties\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./links/links-workflows.ts\n");

/***/ }),

/***/ "(rsc)/./types/enums.ts":
/*!************************!*\
  !*** ./types/enums.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ALL_AREAS: () => (/* binding */ ALL_AREAS),\n/* harmony export */   Attribute: () => (/* binding */ Attribute),\n/* harmony export */   BUSINESS_STRUCTURE: () => (/* binding */ BUSINESS_STRUCTURE),\n/* harmony export */   CHARACTER_ROLE_TYPES: () => (/* binding */ CHARACTER_ROLE_TYPES),\n/* harmony export */   COMPANY_AREAS: () => (/* binding */ COMPANY_AREAS),\n/* harmony export */   CharacterRole: () => (/* binding */ CharacterRole),\n/* harmony export */   CloudSiteType: () => (/* binding */ CloudSiteType),\n/* harmony export */   Collection: () => (/* binding */ Collection),\n/* harmony export */   CommColor: () => (/* binding */ CommColor),\n/* harmony export */   Currency: () => (/* binding */ Currency),\n/* harmony export */   DevSprintStatus: () => (/* binding */ DevSprintStatus),\n/* harmony export */   EntityType: () => (/* binding */ EntityType),\n/* harmony export */   FinancialStatus: () => (/* binding */ FinancialStatus),\n/* harmony export */   ITEM_CATEGORIES: () => (/* binding */ ITEM_CATEGORIES),\n/* harmony export */   IntelectualFunction: () => (/* binding */ IntelectualFunction),\n/* harmony export */   InventoryTab: () => (/* binding */ InventoryTab),\n/* harmony export */   ItemCategory: () => (/* binding */ ItemCategory),\n/* harmony export */   ItemStatus: () => (/* binding */ ItemStatus),\n/* harmony export */   ItemType: () => (/* binding */ ItemType),\n/* harmony export */   LOCATION_HIERARCHY: () => (/* binding */ LOCATION_HIERARCHY),\n/* harmony export */   LOCATION_STRUCTURE: () => (/* binding */ LOCATION_STRUCTURE),\n/* harmony export */   LinkType: () => (/* binding */ LinkType),\n/* harmony export */   NOTE_TAGS: () => (/* binding */ NOTE_TAGS),\n/* harmony export */   NoteColor: () => (/* binding */ NoteColor),\n/* harmony export */   NotebookType: () => (/* binding */ NotebookType),\n/* harmony export */   PAYMENT_METHOD_CATEGORIES: () => (/* binding */ PAYMENT_METHOD_CATEGORIES),\n/* harmony export */   PERSONAL_AREAS: () => (/* binding */ PERSONAL_AREAS),\n/* harmony export */   PaymentMethod: () => (/* binding */ PaymentMethod),\n/* harmony export */   PhysicalBusinessType: () => (/* binding */ PhysicalBusinessType),\n/* harmony export */   PointType: () => (/* binding */ PointType),\n/* harmony export */   RecurrentFrequency: () => (/* binding */ RecurrentFrequency),\n/* harmony export */   SITE_CATEGORIES: () => (/* binding */ SITE_CATEGORIES),\n/* harmony export */   SITE_GROUPS: () => (/* binding */ SITE_GROUPS),\n/* harmony export */   SKILLS_CATEGORIES: () => (/* binding */ SKILLS_CATEGORIES),\n/* harmony export */   STATION_CATEGORIES: () => (/* binding */ STATION_CATEGORIES),\n/* harmony export */   SaleStatus: () => (/* binding */ SaleStatus),\n/* harmony export */   SaleType: () => (/* binding */ SaleType),\n/* harmony export */   SalesSessionStatus: () => (/* binding */ SalesSessionStatus),\n/* harmony export */   SiteStatus: () => (/* binding */ SiteStatus),\n/* harmony export */   SiteType: () => (/* binding */ SiteType),\n/* harmony export */   Skill: () => (/* binding */ Skill),\n/* harmony export */   SpecialSiteType: () => (/* binding */ SpecialSiteType),\n/* harmony export */   TASK_CATEGORIES: () => (/* binding */ TASK_CATEGORIES),\n/* harmony export */   TaskPriority: () => (/* binding */ TaskPriority),\n/* harmony export */   TaskStatus: () => (/* binding */ TaskStatus),\n/* harmony export */   TaskType: () => (/* binding */ TaskType)\n/* harmony export */ });\n// types/enums.ts\n// All enums and constants - single source of truth for application state\n// ============================================================================\n// BUSINESS STRUCTURE - Single source of truth for sections and stations\n// ============================================================================\n/** Business Structure - Single source of truth for sections and stations */ const BUSINESS_STRUCTURE = {\n    ADMIN: [\n        \"Strategy\",\n        \"Projects\",\n        \"Inventory\",\n        \"Transport\",\n        \"Team\",\n        \"Materials\",\n        \"Equipment\",\n        \"Rent\",\n        \"Director\"\n    ],\n    RESEARCH: [\n        \"Classes\",\n        \"Studies\",\n        \"Development\"\n    ],\n    DESIGN: [\n        \"Digital Art\",\n        \"Art Creative Processes\",\n        \"Game Design\",\n        \"3D Modeling\",\n        \"Animation\"\n    ],\n    PRODUCTION: [\n        \"Artworks\",\n        \"Murals\",\n        \"Prints\",\n        \"Stickers\",\n        \"Merch\",\n        \"Woodworks\",\n        \"NFTs\"\n    ],\n    SALES: [\n        \"Direct Sales\",\n        \"Feria Sales\",\n        \"Network Sales\",\n        \"Online Sales\",\n        \"Store Sales\",\n        \"Marketing\",\n        \"Bookings\",\n        \"Other Sales\"\n    ],\n    PERSONAL: [\n        \"Health\",\n        \"Family\",\n        \"Food\",\n        \"Home\",\n        \"Transport P\",\n        \"Rent P\",\n        \"Other P\"\n    ]\n};\n// Areas (top-level business areas)\nconst COMPANY_AREAS = [\n    \"ADMIN\",\n    \"RESEARCH\",\n    \"DESIGN\",\n    \"PRODUCTION\",\n    \"SALES\"\n];\nconst PERSONAL_AREAS = [\n    \"PERSONAL\"\n];\nconst ALL_AREAS = [\n    ...COMPANY_AREAS,\n    ...PERSONAL_AREAS\n];\n// ============================================================================\n// STATION CATEGORIES - Derived from BUSINESS_STRUCTURE for SearchableSelect\n// ============================================================================\n/** Station categories for SearchableSelect grouping - derived from BUSINESS_STRUCTURE */ const STATION_CATEGORIES = {\n    ADMIN: BUSINESS_STRUCTURE.ADMIN,\n    RESEARCH: BUSINESS_STRUCTURE.RESEARCH,\n    DESIGN: BUSINESS_STRUCTURE.DESIGN,\n    PRODUCTION: BUSINESS_STRUCTURE.PRODUCTION,\n    SALES: BUSINESS_STRUCTURE.SALES,\n    PERSONAL: BUSINESS_STRUCTURE.PERSONAL\n};\n// ============================================================================\n// LOCATION STRUCTURE\n// ============================================================================\n/** Geographic Location Structure - Single source of truth for geographic hierarchy */ const LOCATION_STRUCTURE = {\n    \"North America\": {\n        \"United States\": [\n            \"United States\"\n        ],\n        \"Canada\": [\n            \"Canada\"\n        ]\n    },\n    \"Central America\": {\n        \"Costa Rica\": [\n            \"Puntarenas\",\n            \"San Jose\",\n            \"Guanacaste\",\n            \"Limon\"\n        ],\n        \"Panama\": [\n            \"Panama\"\n        ],\n        \"Nicaragua\": [\n            \"Nicaragua\"\n        ],\n        \"El Salvador\": [\n            \"El Salvador\"\n        ]\n    },\n    \"South America\": {\n        \"Venezuela\": [\n            \"Margarita Island\",\n            \"Caracas\"\n        ],\n        \"Colombia\": [\n            \"Bogota\"\n        ],\n        \"Uruguay\": [\n            \"Montevideo\"\n        ],\n        \"Chile\": [\n            \"Santiago\"\n        ],\n        \"Argentina\": [\n            \"Buenos Aires\"\n        ],\n        \"Brasil\": [\n            \"Rio de Janeiro\"\n        ],\n        \"Peru\": [\n            \"Lima\"\n        ]\n    }\n};\n// Export the structure for components to use\nconst LOCATION_HIERARCHY = LOCATION_STRUCTURE;\nvar PhysicalBusinessType;\n(function(PhysicalBusinessType) {\n    PhysicalBusinessType[\"STORAGE\"] = \"storage\";\n    PhysicalBusinessType[\"CONSIGNMENT\"] = \"consignment\";\n    PhysicalBusinessType[\"SELLING_POINT\"] = \"selling point\";\n    PhysicalBusinessType[\"FERIA\"] = \"feria\";\n    PhysicalBusinessType[\"TEACHING_SPACE\"] = \"teaching space\";\n    PhysicalBusinessType[\"HQ\"] = \"HQ\";\n    PhysicalBusinessType[\"ART_GALLERY\"] = \"art gallery\";\n    PhysicalBusinessType[\"DESIGN_SPACE\"] = \"design space\";\n    PhysicalBusinessType[\"WORKSHOP\"] = \"workshop\"; // Production sites for creating items\n})(PhysicalBusinessType || (PhysicalBusinessType = {}));\nvar CloudSiteType;\n(function(CloudSiteType) {\n    CloudSiteType[\"REPOSITORY\"] = \"repository\";\n    CloudSiteType[\"DIGITAL_STORAGE\"] = \"digital storage\";\n    CloudSiteType[\"NFT_WALLET\"] = \"nft wallet\"; // NFt assets\n})(CloudSiteType || (CloudSiteType = {}));\nvar SpecialSiteType;\n(function(SpecialSiteType) {\n    SpecialSiteType[\"UNIVERSAL_TRACKING\"] = \"universal tracking\";\n    SpecialSiteType[\"SOLD_ITEMS\"] = \"sold items\";\n    SpecialSiteType[\"ARCHIVED\"] = \"archived\";\n    SpecialSiteType[\"DELETED\"] = \"deleted\"; // Deleted items\n})(SpecialSiteType || (SpecialSiteType = {}));\nvar SiteType;\n(function(SiteType) {\n    SiteType[\"PHYSICAL\"] = \"PHYSICAL\";\n    SiteType[\"CLOUD\"] = \"CLOUD\";\n    SiteType[\"SPECIAL\"] = \"SPECIAL\"; // Special system-managed locations\n})(SiteType || (SiteType = {}));\nvar SiteStatus;\n(function(SiteStatus) {\n    SiteStatus[\"CREATED\"] = \"Created\";\n    SiteStatus[\"ACTIVE\"] = \"Active\";\n    SiteStatus[\"UPDATED\"] = \"Updated\";\n    SiteStatus[\"INACTIVE\"] = \"Inactive\";\n})(SiteStatus || (SiteStatus = {}));\n/** Site Structure - Single source of truth for sites and their types */ const SITE_STRUCTURE = {\n    PHYSICAL: {\n        HOME: \"Home\",\n        FERIA_BOX: \"Feria Box\",\n        SMOKING_LOUNGE: \"Smoking Lounge\",\n        TAGUA: \"Tagua\",\n        CAFE_VIVO: \"Cafe Vivo\",\n        XIVA: \"Xiva\",\n        PEREZOSO_FELIZ: \"Perezoso Feliz\",\n        EL_HORNITO: \"El Hornito\",\n        JUNGLE_ACADEMY: \"Jungle Academy\",\n        LA_TRIBU: \"La Tribu\",\n        OSA_DE_RIO: \"Osa de Rio\",\n        GALLERY_1084: \"Gallery 1084\",\n        CAT_CAFE: \"Cat Cafe\",\n        ECO_FERIA: \"Eco Feria\",\n        ESCUELA_VERDE: \"Escuela Verde\",\n        PRINT_MASTERS: \"Print Masters\"\n    },\n    CLOUD: {\n        DIGITAL_SPACE: \"Digital Space\",\n        DESKTOP_PC: \"Desktop PC\",\n        LAPTOP: \"Laptop\",\n        GOOGLE_DRIVE: \"Google Drive\",\n        GITHUB: \"Github\",\n        MAGIC_EDEN: \"Magic Eden\",\n        OPENSEA: \"OpenSea\"\n    },\n    SPECIAL: {\n        NONE: \"None\",\n        WORLD: \"World\",\n        SOLD_ITEMS_THIS_MONTH: \"Sold Items\",\n        ARCHIVED_HISTORICAL: \"Archived\",\n        DELETED_ITEMS_THIS_MONTH: \"Deleted Items\"\n    }\n};\n// Export the structure for components to use\nconst SITE_GROUPS = SITE_STRUCTURE;\n/** Site categories for UI organization and SearchableSelect grouping */ const SITE_CATEGORIES = {\n    PHYSICAL: [\n        \"HOME\",\n        \"FERIA_BOX\",\n        \"SMOKING_LOUNGE\",\n        \"TAGUA\",\n        \"CAFE_VIVO\",\n        \"XIVA\",\n        \"PEREZOSO_FELIZ\",\n        \"EL_HORNITO\",\n        \"JUNGLE_ACADEMY\",\n        \"LA_TRIBU\",\n        \"OSA_DE_RIO\",\n        \"GALLERY_1084\",\n        \"CAT_CAFE\",\n        \"ECO_FERIA\",\n        \"ESCUELA_VERDE\",\n        \"PRINT_MASTERS\"\n    ],\n    CLOUD: [\n        \"DIGITAL_SPACE\",\n        \"DESKTOP_PC\",\n        \"LAPTOP\",\n        \"GOOGLE_DRIVE\",\n        \"GITHUB\",\n        \"MAGIC_EDEN\",\n        \"OPENSEA\"\n    ],\n    SPECIAL: [\n        \"NONE\",\n        \"WORLD\",\n        \"SOLD_ITEMS_THIS_MONTH\",\n        \"ARCHIVED_HISTORICAL\",\n        \"DELETED_ITEMS_THIS_MONTH\"\n    ]\n};\nvar TaskType;\n(function(TaskType) {\n    TaskType[\"MISSION\"] = \"Mission\";\n    TaskType[\"MILESTONE\"] = \"Milestone\";\n    TaskType[\"GOAL\"] = \"Goal\";\n    TaskType[\"ASSIGNMENT\"] = \"Assignment\";\n    TaskType[\"RECURRENT_PARENT\"] = \"Recurrent Parent\";\n    TaskType[\"RECURRENT_TEMPLATE\"] = \"Recurrent Template\";\n    TaskType[\"RECURRENT_INSTANCE\"] = \"Recurrent Instance\"; // NEW: Spawned with due date\n})(TaskType || (TaskType = {}));\n/** Task categories for UI organization and SearchableSelect grouping */ const TASK_CATEGORIES = {\n    MISSION: [\n        \"Mission\",\n        \"Milestone\",\n        \"Goal\",\n        \"Assignment\"\n    ],\n    RECURRENT: [\n        \"Recurrent Parent\",\n        \"Recurrent Template\",\n        \"Recurrent Instance\"\n    ]\n};\nvar RecurrentFrequency;\n(function(RecurrentFrequency) {\n    RecurrentFrequency[\"ONCE\"] = \"Once\";\n    RecurrentFrequency[\"DAILY\"] = \"Daily\";\n    RecurrentFrequency[\"WEEKLY\"] = \"Weekly\";\n    RecurrentFrequency[\"MONTHLY\"] = \"Monthly\";\n    RecurrentFrequency[\"CUSTOM\"] = \"Custom\";\n    RecurrentFrequency[\"ALWAYS\"] = \"Always\";\n})(RecurrentFrequency || (RecurrentFrequency = {}));\nvar TaskStatus;\n(function(TaskStatus) {\n    TaskStatus[\"CREATED\"] = \"Created\";\n    TaskStatus[\"ON_HOLD\"] = \"On Hold\";\n    TaskStatus[\"IN_PROGRESS\"] = \"In Progress\";\n    TaskStatus[\"FINISHING\"] = \"Finishing\";\n    TaskStatus[\"DONE\"] = \"Done\";\n    TaskStatus[\"COLLECTED\"] = \"Collected\";\n    TaskStatus[\"FAILED\"] = \"Failed\";\n    TaskStatus[\"NONE\"] = \"None\";\n})(TaskStatus || (TaskStatus = {}));\nvar TaskPriority;\n(function(TaskPriority) {\n    TaskPriority[\"NOT_NOW\"] = \"Not Now\";\n    TaskPriority[\"SLOW\"] = \"Slow\";\n    TaskPriority[\"NORMAL\"] = \"Normal\";\n    TaskPriority[\"IMPORTANT\"] = \"Important\";\n    TaskPriority[\"URGENT\"] = \"Urgent\";\n})(TaskPriority || (TaskPriority = {}));\nvar FinancialStatus;\n(function(FinancialStatus) {\n    FinancialStatus[\"DONE\"] = \"Done\";\n    FinancialStatus[\"COLLECTED\"] = \"Collected\";\n})(FinancialStatus || (FinancialStatus = {}));\nvar DevSprintStatus;\n(function(DevSprintStatus) {\n    DevSprintStatus[\"NOT_STARTED\"] = \"Not Started\";\n    DevSprintStatus[\"IN_PROGRESS\"] = \"In Progress\";\n    DevSprintStatus[\"DONE\"] = \"Done\";\n})(DevSprintStatus || (DevSprintStatus = {}));\nvar PointType;\n(function(PointType) {\n    PointType[\"XP\"] = \"XP\";\n    PointType[\"RP\"] = \"RP\";\n    PointType[\"FP\"] = \"FP\";\n    PointType[\"HP\"] = \"HP\";\n})(PointType || (PointType = {}));\nvar Currency;\n(function(Currency) {\n    Currency[\"USD\"] = \"USD\";\n    Currency[\"JUNGLE_COINS\"] = \"J$\";\n    Currency[\"BTC\"] = \"BTC\";\n    Currency[\"CRC\"] = \"CRC\";\n})(Currency || (Currency = {}));\nvar ItemType;\n(function(ItemType) {\n    // MODEL_ITEM - Individual products that can be separated by model, subtype, site and collection\n    ItemType[\"DIGITAL\"] = \"Digital\";\n    ItemType[\"ARTWORK\"] = \"Artwork\";\n    ItemType[\"PRINT\"] = \"Print\";\n    ItemType[\"STICKER\"] = \"Sticker\";\n    ItemType[\"MERCH\"] = \"Merch\";\n    // BUNDLE_ITEM - Business Logic Items that are Packs of the same Type of Item\n    ItemType[\"STICKER_BUNDLE\"] = \"Sticker Bundle\";\n    ItemType[\"PRINT_BUNDLE\"] = \"Print Bundle\";\n    // RESOURCE_ITEM - Materials and Equipment for production\n    ItemType[\"MATERIAL\"] = \"Material\";\n    ItemType[\"EQUIPMENT\"] = \"Equipment\";\n})(ItemType || (ItemType = {}));\nvar ItemCategory;\n(function(ItemCategory) {\n    ItemCategory[\"MODEL_ITEM\"] = \"MODEL_ITEM\";\n    ItemCategory[\"BUNDLE_ITEM\"] = \"BUNDLE_ITEM\";\n    ItemCategory[\"RESOURCE_ITEM\"] = \"RESOURCE_ITEM\";\n})(ItemCategory || (ItemCategory = {}));\nvar InventoryTab;\n(function(InventoryTab) {\n    // MODEL_ITEM tabs\n    InventoryTab[\"DIGITAL\"] = \"digital\";\n    InventoryTab[\"ARTWORKS\"] = \"artworks\";\n    InventoryTab[\"STICKERS\"] = \"stickers\";\n    InventoryTab[\"PRINTS\"] = \"prints\";\n    InventoryTab[\"MERCH\"] = \"merch\";\n    // BUNDLE_ITEM tabs\n    InventoryTab[\"BUNDLES\"] = \"bundles\";\n    // RESOURCE_ITEM tabs\n    InventoryTab[\"MATERIALS\"] = \"materials\";\n    InventoryTab[\"EQUIPMENT\"] = \"equipment\";\n})(InventoryTab || (InventoryTab = {}));\nvar ItemStatus;\n(function(ItemStatus) {\n    ItemStatus[\"CREATED\"] = \"Created\";\n    ItemStatus[\"FOR_SALE\"] = \"For Sale\";\n    ItemStatus[\"SOLD\"] = \"Sold\";\n    ItemStatus[\"TO_ORDER\"] = \"To Order\";\n    ItemStatus[\"TO_DO\"] = \"To Do\";\n    ItemStatus[\"GIFTED\"] = \"Gifted\";\n    ItemStatus[\"RESERVED\"] = \"Reserved\";\n    ItemStatus[\"OBSOLETE\"] = \"Obsolete\";\n    ItemStatus[\"DAMAGED\"] = \"Damaged\";\n    ItemStatus[\"IDLE\"] = \"Idle\";\n    ItemStatus[\"COLLECTED\"] = \"Collected\";\n    // Temporary while building\n    ItemStatus[\"ON_HOLD\"] = \"On Hold\";\n    ItemStatus[\"STORED\"] = \"Stored\";\n    ItemStatus[\"TO_REPAIR\"] = \"To Repair\";\n})(ItemStatus || (ItemStatus = {}));\nvar Collection;\n(function(Collection) {\n    Collection[\"NO_COLLECTION\"] = \"No Collection\";\n    Collection[\"ORGANIC_IMAGINARY\"] = \"Organic Imaginary\";\n    Collection[\"ANIMAL_KINGDOM\"] = \"Animal Kingdom\";\n    Collection[\"MUSHLAND\"] = \"Mushland\";\n    Collection[\"SEVEN_ELEMENTS\"] = \"Seven Elements\";\n    Collection[\"BITCOIN\"] = \"Bitcoin\";\n    Collection[\"DOPE_CREW\"] = \"Dope Crew\";\n    Collection[\"WORDS\"] = \"Words\";\n    Collection[\"FRUITS_VEGGIES\"] = \"Fruits & Veggies\";\n    Collection[\"FLOWERS\"] = \"Flowers\";\n    Collection[\"KINGS_QUEENS\"] = \"Kings & Queens\";\n    Collection[\"POLYGONAL_HD\"] = \"Polygonal HD\";\n    Collection[\"RELIQUIAS\"] = \"Reliquias\";\n    Collection[\"BITUAYA\"] = \"Bituaya\";\n    Collection[\"LANDSCAPES\"] = \"Landscapes\";\n    Collection[\"EXILIADO\"] = \"Exiliado\";\n})(Collection || (Collection = {}));\n/** Item categories for UI organization and SearchableSelect grouping */ const ITEM_CATEGORIES = {\n    MODEL_ITEM: [\n        \"DIGITAL\",\n        \"ARTWORK\",\n        \"PRINT\",\n        \"STICKER\",\n        \"MERCH\"\n    ],\n    BUNDLE_ITEM: [\n        \"STICKER_BUNDLE\",\n        \"PRINT_BUNDLE\"\n    ],\n    RESOURCE_ITEM: [\n        \"MATERIAL\",\n        \"EQUIPMENT\"\n    ]\n};\nvar SaleType;\n(function(SaleType) {\n    SaleType[\"DIRECT\"] = \"DIRECT\";\n    SaleType[\"FERIA\"] = \"FERIA\";\n    SaleType[\"BUNDLE_SALE\"] = \"BUNDLE\";\n    SaleType[\"CONSIGNMENT\"] = \"CONSIGNMENT\";\n    SaleType[\"ONLINE\"] = \"ONLINE\";\n    SaleType[\"NFT\"] = \"NFT\";\n})(SaleType || (SaleType = {}));\nvar SalesSessionStatus;\n(function(SalesSessionStatus) {\n    SalesSessionStatus[\"PENDING_RECONCILIATION\"] = \"Pending Reconciliation\";\n    SalesSessionStatus[\"RECONCILED\"] = \"Reconciled\";\n})(SalesSessionStatus || (SalesSessionStatus = {}));\nvar SaleStatus;\n(function(SaleStatus) {\n    SaleStatus[\"PENDING\"] = \"PENDING\";\n    SaleStatus[\"ON_HOLD\"] = \"ON_HOLD\";\n    SaleStatus[\"CHARGED\"] = \"CHARGED\";\n    SaleStatus[\"CANCELLED\"] = \"CANCELLED\";\n})(SaleStatus || (SaleStatus = {}));\nvar PaymentMethod;\n(function(PaymentMethod) {\n    // Regular payment methods\n    PaymentMethod[\"FIAT_USD\"] = \"$ CASH\";\n    PaymentMethod[\"FIAT_CRC\"] = \"₡ CASH\";\n    PaymentMethod[\"BTC\"] = \"BITCOIN\";\n    PaymentMethod[\"CARD\"] = \"CARD\";\n    PaymentMethod[\"SINPE\"] = \"SINPE\";\n    PaymentMethod[\"PAYPAL\"] = \"PAYPAL\";\n    PaymentMethod[\"WIRE_TRANSFER\"] = \"WIRE\";\n    // Special payment methods\n    PaymentMethod[\"GIFT\"] = \"GIFT\";\n    PaymentMethod[\"EXCHANGE\"] = \"EXCHANGE\";\n    PaymentMethod[\"OTHER\"] = \"OTHER\";\n})(PaymentMethod || (PaymentMethod = {}));\n/** Payment method categories for UI organization */ const PAYMENT_METHOD_CATEGORIES = {\n    REGULAR: [\n        \"FIAT_USD\",\n        \"FIAT_CRC\",\n        \"BTC\",\n        \"CARD\",\n        \"SINPE\",\n        \"PAYPAL\",\n        \"WIRE_TRANSFER\"\n    ],\n    SPECIAL: [\n        \"GIFT\",\n        \"EXCHANGE\",\n        \"OTHER\"\n    ]\n};\nvar CharacterRole;\n(function(CharacterRole) {\n    CharacterRole[\"FOUNDER\"] = \"founder\";\n    CharacterRole[\"PLAYER\"] = \"player\";\n    CharacterRole[\"PADAWAN\"] = \"padawan\";\n    CharacterRole[\"INVESTOR\"] = \"investor\";\n    CharacterRole[\"TEAM\"] = \"team\";\n    CharacterRole[\"FAMILY\"] = \"family\";\n    CharacterRole[\"FRIEND\"] = \"friend\";\n    CharacterRole[\"ADMIN\"] = \"admin\";\n    CharacterRole[\"DESIGNER\"] = \"designer\";\n    CharacterRole[\"PRODUCER\"] = \"producer\";\n    CharacterRole[\"SELLER\"] = \"seller\";\n    CharacterRole[\"RESEARCHER\"] = \"researcher\";\n    CharacterRole[\"DEVELOPER\"] = \"developer\";\n    CharacterRole[\"AI_AGENT\"] = \"ai-agent\";\n    CharacterRole[\"ASSOCIATE\"] = \"associate\";\n    CharacterRole[\"COLLABORATOR\"] = \"collaborator\";\n    CharacterRole[\"CUSTOMER\"] = \"customer\";\n    CharacterRole[\"STUDENT\"] = \"student\";\n    CharacterRole[\"OTHER\"] = \"other\";\n})(CharacterRole || (CharacterRole = {}));\n/** Character role types for UI organization and permissions */ const CHARACTER_ROLE_TYPES = {\n    REGULAR: [\n        \"admin\",\n        \"designer\",\n        \"producer\",\n        \"seller\",\n        \"researcher\",\n        \"developer\",\n        \"associate\",\n        \"collaborator\",\n        \"customer\",\n        \"student\",\n        \"ai-agent\",\n        \"other\"\n    ],\n    SPECIAL: [\n        \"founder\",\n        \"player\",\n        \"padawan\",\n        \"team\",\n        \"family\",\n        \"friend\",\n        \"investor\"\n    ]\n};\nvar IntelectualFunction;\n(function(IntelectualFunction) {\n    IntelectualFunction[\"SELF_AWARE\"] = \"Self Awareness\";\n    IntelectualFunction[\"EMOTION_CONTROL\"] = \"Emotion Control\";\n    IntelectualFunction[\"DECISION_MAKING\"] = \"Decision Making\";\n    IntelectualFunction[\"CREATIVITY\"] = \"Creativity\";\n    IntelectualFunction[\"PROBLEM_SOLVING\"] = \"Problem Solving\";\n    IntelectualFunction[\"SELF_CONTROL\"] = \"Self Control\";\n    IntelectualFunction[\"WORK_MEMORY\"] = \"Working Memory\";\n    IntelectualFunction[\"ADAPTABILITY\"] = \"Adaptability\";\n    IntelectualFunction[\"INITIATIVE\"] = \"Initiative\";\n    IntelectualFunction[\"PLANNING\"] = \"Planning\";\n    IntelectualFunction[\"ORGANIZATION\"] = \"Organization\";\n    IntelectualFunction[\"TIME_MNGM\"] = \"Time Management\";\n    IntelectualFunction[\"CONCENTRATION\"] = \"Concentration\";\n    IntelectualFunction[\"DETERMINATION\"] = \"Determination\";\n})(IntelectualFunction || (IntelectualFunction = {}));\nvar Attribute;\n(function(Attribute) {\n    Attribute[\"PERCEPTION\"] = \"Perception\";\n    Attribute[\"LOGIC\"] = \"Logic\";\n    Attribute[\"FITNESS\"] = \"Fitness\";\n    Attribute[\"CHARISMA\"] = \"Charisma\";\n    Attribute[\"WISDOM\"] = \"Wisdom\";\n    Attribute[\"LEADERSHIP\"] = \"Leadership\";\n    Attribute[\"COMMUNICATION\"] = \"Communication\";\n    Attribute[\"VISION\"] = \"Vision\";\n    Attribute[\"RESILIENCE\"] = \"Resilience\";\n    Attribute[\"EMPATHY\"] = \"Empathy\";\n    Attribute[\"INTEGRITY\"] = \"Integrity\";\n})(Attribute || (Attribute = {}));\nvar Skill;\n(function(Skill) {\n    Skill[\"DESIGN_THINKING\"] = \"Design Thinking\";\n    Skill[\"PROJECT_MANAGEMENT\"] = \"Project Management\";\n    Skill[\"TEACHING\"] = \"Teaching\";\n    Skill[\"NEGOTIATION\"] = \"Negotiation\";\n    Skill[\"NARRATIVE\"] = \"Narrative\";\n    Skill[\"DEVELOPING\"] = \"Developing\";\n    Skill[\"HANDCRAFTING\"] = \"Handcrafting\";\n    Skill[\"PAINTING\"] = \"Painting\";\n    Skill[\"ILLUSTRATION\"] = \"Illustration\";\n})(Skill || (Skill = {}));\n/** Skills categories for UI organization and SearchableSelect grouping */ const SKILLS_CATEGORIES = {\n    COGNITIVE: [\n        \"SELF_AWARE\",\n        \"EMOTION_CONTROL\",\n        \"DECISION_MAKING\",\n        \"CREATIVITY\",\n        \"PROBLEM_SOLVING\",\n        \"SELF_CONTROL\",\n        \"WORK_MEMORY\",\n        \"ADAPTABILITY\",\n        \"INITIATIVE\",\n        \"PLANNING\"\n    ],\n    CHARACTER: [\n        \"PERCEPTION\",\n        \"LOGIC\",\n        \"FITNESS\",\n        \"CHARISMA\",\n        \"WISDOM\",\n        \"LEADERSHIP\",\n        \"COMMUNICATION\",\n        \"VISION\",\n        \"RESILIENCE\",\n        \"EMPATHY\"\n    ],\n    PRACTICAL: [\n        \"DESIGN_THINKING\",\n        \"PROJECT_MANAGEMENT\",\n        \"TEACHING\",\n        \"NEGOTIATION\",\n        \"NARRATIVE\",\n        \"DEVELOPING\",\n        \"HANDCRAFTING\",\n        \"PAINTING\",\n        \"ILLUSTRATION\"\n    ]\n};\nvar CommColor;\n(function(CommColor) {\n    CommColor[\"RED\"] = \"Red\";\n    CommColor[\"YELLOW\"] = \"Yellow\";\n    CommColor[\"GREEN\"] = \"Green\";\n    CommColor[\"BLUE\"] = \"Blue\";\n    CommColor[\"PURPLE\"] = \"Purple\";\n    CommColor[\"ORANGE\"] = \"Orange\";\n    CommColor[\"TURQUOISE\"] = \"Turquoise\";\n    CommColor[\"BROWN\"] = \"Brown\";\n    CommColor[\"YELLOW_BLUE\"] = \"Yellow-Blue\";\n    CommColor[\"YELLOW_GREEN\"] = \"Yellow-Green\";\n})(CommColor || (CommColor = {}));\nvar LinkType;\n(function(LinkType) {\n    // TASK relationships\n    LinkType[\"TASK_ITEM\"] = \"TASK_ITEM\";\n    LinkType[\"TASK_FINREC\"] = \"TASK_FINREC\";\n    LinkType[\"TASK_SALE\"] = \"TASK_SALE\";\n    LinkType[\"TASK_PLAYER\"] = \"TASK_PLAYER\";\n    LinkType[\"TASK_CHARACTER\"] = \"TASK_CHARACTER\";\n    LinkType[\"TASK_SITE\"] = \"TASK_SITE\";\n    // ITEM relationships\n    LinkType[\"ITEM_TASK\"] = \"ITEM_TASK\";\n    LinkType[\"ITEM_SALE\"] = \"ITEM_SALE\";\n    LinkType[\"ITEM_FINREC\"] = \"ITEM_FINREC\";\n    LinkType[\"ITEM_PLAYER\"] = \"ITEM_PLAYER\";\n    LinkType[\"ITEM_CHARACTER\"] = \"ITEM_CHARACTER\";\n    LinkType[\"ITEM_SITE\"] = \"ITEM_SITE\";\n    // SALE relationships\n    LinkType[\"SALE_TASK\"] = \"SALE_TASK\";\n    LinkType[\"SALE_ITEM\"] = \"SALE_ITEM\";\n    LinkType[\"SALE_FINREC\"] = \"SALE_FINREC\";\n    LinkType[\"SALE_PLAYER\"] = \"SALE_PLAYER\";\n    LinkType[\"SALE_CHARACTER\"] = \"SALE_CHARACTER\";\n    LinkType[\"SALE_SITE\"] = \"SALE_SITE\";\n    // FINANCIAL RECORD relationships\n    LinkType[\"FINREC_TASK\"] = \"FINREC_TASK\";\n    LinkType[\"FINREC_ITEM\"] = \"FINREC_ITEM\";\n    LinkType[\"FINREC_SALE\"] = \"FINREC_SALE\";\n    LinkType[\"FINREC_PLAYER\"] = \"FINREC_PLAYER\";\n    LinkType[\"FINREC_CHARACTER\"] = \"FINREC_CHARACTER\";\n    LinkType[\"FINREC_SITE\"] = \"FINREC_SITE\";\n    // CHARACTER relationships\n    LinkType[\"CHARACTER_TASK\"] = \"CHARACTER_TASK\";\n    LinkType[\"CHARACTER_ITEM\"] = \"CHARACTER_ITEM\";\n    LinkType[\"CHARACTER_SALE\"] = \"CHARACTER_SALE\";\n    LinkType[\"CHARACTER_FINREC\"] = \"CHARACTER_FINREC\";\n    LinkType[\"CHARACTER_SITE\"] = \"CHARACTER_SITE\";\n    LinkType[\"CHARACTER_PLAYER\"] = \"CHARACTER_PLAYER\";\n    // SITE relationships (locations and places)\n    LinkType[\"SITE_TASK\"] = \"SITE_TASK\";\n    LinkType[\"SITE_CHARACTER\"] = \"SITE_CHARACTER\";\n    LinkType[\"SITE_FINREC\"] = \"SITE_FINREC\";\n    LinkType[\"SITE_ITEM\"] = \"SITE_ITEM\";\n    LinkType[\"SITE_SALE\"] = \"SITE_SALE\";\n    LinkType[\"SITE_SITE\"] = \"SITE_SITE\";\n    // PLAYER relationships\n    LinkType[\"PLAYER_TASK\"] = \"PLAYER_TASK\";\n    LinkType[\"PLAYER_SALE\"] = \"PLAYER_SALE\";\n    LinkType[\"PLAYER_FINREC\"] = \"PLAYER_FINREC\";\n    LinkType[\"PLAYER_ITEM\"] = \"PLAYER_ITEM\";\n    LinkType[\"PLAYER_CHARACTER\"] = \"PLAYER_CHARACTER\";\n    // ACCOUNT relationships (authentication & identity)\n    LinkType[\"ACCOUNT_PLAYER\"] = \"ACCOUNT_PLAYER\";\n    LinkType[\"ACCOUNT_CHARACTER\"] = \"ACCOUNT_CHARACTER\";\n    LinkType[\"PLAYER_ACCOUNT\"] = \"PLAYER_ACCOUNT\";\n    LinkType[\"CHARACTER_ACCOUNT\"] = \"CHARACTER_ACCOUNT\";\n})(LinkType || (LinkType = {}));\nvar EntityType;\n(function(EntityType) {\n    EntityType[\"TASK\"] = \"task\";\n    EntityType[\"ITEM\"] = \"item\";\n    EntityType[\"SALE\"] = \"sale\";\n    EntityType[\"FINANCIAL\"] = \"financial\";\n    EntityType[\"CHARACTER\"] = \"character\";\n    EntityType[\"SITE\"] = \"site\";\n    EntityType[\"PLAYER\"] = \"player\";\n    EntityType[\"ACCOUNT\"] = \"account\";\n})(EntityType || (EntityType = {}));\nvar NoteColor;\n(function(NoteColor) {\n    NoteColor[\"WHITE\"] = \"white\";\n    NoteColor[\"ORANGE\"] = \"orange\";\n    NoteColor[\"PURPLE\"] = \"purple\";\n    NoteColor[\"GREEN\"] = \"green\";\n    NoteColor[\"BLUE\"] = \"blue\";\n    NoteColor[\"YELLOW\"] = \"yellow\";\n    NoteColor[\"PINK\"] = \"pink\";\n    NoteColor[\"RED\"] = \"red\";\n    NoteColor[\"GRAY\"] = \"gray\"; // Personal, private\n})(NoteColor || (NoteColor = {}));\nvar NotebookType;\n(function(NotebookType) {\n    NotebookType[\"ALL_NOTES\"] = \"all\";\n    NotebookType[\"CURRENT_SPRINT\"] = \"current_sprint\";\n    NotebookType[\"CHALLENGES\"] = \"challenges\";\n    NotebookType[\"ROAD_AHEAD\"] = \"road_ahead\";\n    NotebookType[\"STRATEGY\"] = \"strategy\";\n    NotebookType[\"IDEAS\"] = \"ideas\";\n    NotebookType[\"GENERAL\"] = \"general\";\n})(NotebookType || (NotebookType = {}));\n/** Available tags derived from business structure - DRY principle */ const NOTE_TAGS = Object.values(BUSINESS_STRUCTURE).flat();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi90eXBlcy9lbnVtcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsaUJBQWlCO0FBQ2pCLHlFQUF5RTtBQUV6RSwrRUFBK0U7QUFDL0Usd0VBQXdFO0FBQ3hFLCtFQUErRTtBQUUvRSwwRUFBMEUsR0FDbkUsTUFBTUEscUJBQXFCO0lBQ2hDQyxPQUFZO1FBQUM7UUFBWTtRQUFZO1FBQWE7UUFBYTtRQUFRO1FBQWE7UUFBYTtRQUFRO0tBQVc7SUFDcEhDLFVBQVk7UUFBQztRQUFXO1FBQVc7S0FBYztJQUNqREMsUUFBWTtRQUFDO1FBQWU7UUFBMEI7UUFBZTtRQUFlO0tBQVk7SUFDaEdDLFlBQVk7UUFBQztRQUFZO1FBQVU7UUFBVTtRQUFZO1FBQVM7UUFBYTtLQUFPO0lBQ3RGQyxPQUFZO1FBQUM7UUFBZ0I7UUFBZTtRQUFpQjtRQUFnQjtRQUFlO1FBQWE7UUFBWTtLQUFjO0lBQ25JQyxVQUFZO1FBQUM7UUFBVTtRQUFVO1FBQVE7UUFBUTtRQUFlO1FBQVU7S0FBVTtBQUN0RixFQUFXO0FBRVgsbUNBQW1DO0FBQzVCLE1BQU1DLGdCQUFnQjtJQUFDO0lBQVM7SUFBWTtJQUFVO0lBQWM7Q0FBUSxDQUFVO0FBQ3RGLE1BQU1DLGlCQUFpQjtJQUFDO0NBQVcsQ0FBVTtBQUM3QyxNQUFNQyxZQUFZO09BQUlGO09BQWtCQztDQUFlLENBQVU7QUFNeEUsK0VBQStFO0FBQy9FLDRFQUE0RTtBQUM1RSwrRUFBK0U7QUFFL0UsdUZBQXVGLEdBQ2hGLE1BQU1FLHFCQUFxQjtJQUNoQ1QsT0FBT0QsbUJBQW1CQyxLQUFLO0lBQy9CQyxVQUFVRixtQkFBbUJFLFFBQVE7SUFDckNDLFFBQVFILG1CQUFtQkcsTUFBTTtJQUNqQ0MsWUFBWUosbUJBQW1CSSxVQUFVO0lBQ3pDQyxPQUFPTCxtQkFBbUJLLEtBQUs7SUFDL0JDLFVBQVVOLG1CQUFtQk0sUUFBUTtBQUN2QyxFQUFXO0FBRVgsK0VBQStFO0FBQy9FLHFCQUFxQjtBQUNyQiwrRUFBK0U7QUFFL0Usb0ZBQW9GLEdBQzdFLE1BQU1LLHFCQUFxQjtJQUNoQyxpQkFBaUI7UUFDZixpQkFBaUI7WUFBQztTQUFnQjtRQUNsQyxVQUFVO1lBQUM7U0FBUztJQUNwQjtJQUNGLG1CQUFtQjtRQUNqQixjQUFjO1lBQUM7WUFBYztZQUFZO1lBQWM7U0FBUTtRQUMvRCxVQUFVO1lBQUM7U0FBUztRQUNwQixhQUFhO1lBQUM7U0FBWTtRQUMxQixlQUFlO1lBQUM7U0FBYztJQUM5QjtJQUNGLGlCQUFpQjtRQUNmLGFBQWE7WUFBQztZQUFvQjtTQUFVO1FBQzVDLFlBQVk7WUFBQztTQUFTO1FBQ3RCLFdBQVc7WUFBQztTQUFhO1FBQ3pCLFNBQVM7WUFBQztTQUFXO1FBQ3JCLGFBQWE7WUFBQztTQUFlO1FBQzdCLFVBQVU7WUFBQztTQUFpQjtRQUM1QixRQUFRO1lBQUM7U0FBTztJQUNoQjtBQUNKLEVBQVc7QUFFWCw2Q0FBNkM7QUFDdEMsTUFBTUMscUJBQXFCRCxtQkFBbUI7O1VBVXpDRTs7Ozs7Ozs7O21EQVNvQyxzQ0FBc0M7R0FUMUVBLHlCQUFBQTs7VUFhQUM7OztnREFHc0MsYUFBYTtHQUhuREEsa0JBQUFBOztVQU9BQzs7Ozs0Q0FJaUMsZ0JBQWdCO0dBSmpEQSxvQkFBQUE7O1VBUUFDOzs7cUNBR2MsbUNBQW1DO0dBSGpEQSxhQUFBQTs7VUFPQUM7Ozs7O0dBQUFBLGVBQUFBO0FBT1osc0VBQXNFLEdBQ3RFLE1BQU1DLGlCQUFpQjtJQUNyQkMsVUFBVTtRQUNSQyxNQUFNO1FBQ05DLFdBQVc7UUFDWEMsZ0JBQWdCO1FBQ2hCQyxPQUFPO1FBQ1BDLFdBQVc7UUFDWEMsTUFBTTtRQUNOQyxnQkFBZ0I7UUFDaEJDLFlBQVk7UUFDWkMsZ0JBQWdCO1FBQ2hCQyxVQUFVO1FBQ1ZDLFlBQVk7UUFDWkMsY0FBYztRQUNkQyxVQUFVO1FBQ1ZDLFdBQVc7UUFDWEMsZUFBZTtRQUNmQyxlQUFlO0lBQ2pCO0lBQ0FDLE9BQU87UUFDTEMsZUFBZTtRQUNmQyxZQUFZO1FBQ1pDLFFBQVE7UUFDUkMsY0FBYztRQUNkQyxRQUFRO1FBQ1JDLFlBQVk7UUFDWkMsU0FBUztJQUNYO0lBQ0FDLFNBQVM7UUFDUEMsTUFBTTtRQUNOQyxPQUFPO1FBQ1BDLHVCQUF1QjtRQUN2QkMscUJBQXFCO1FBQ3JCQywwQkFBMEI7SUFDNUI7QUFDRjtBQUVBLDZDQUE2QztBQUN0QyxNQUFNQyxjQUFjaEMsZUFBZTtBQUUxQyxzRUFBc0UsR0FDL0QsTUFBTWlDLGtCQUFrQjtJQUM3QmhDLFVBQVU7UUFBQztRQUFRO1FBQWE7UUFBa0I7UUFBUztRQUFhO1FBQVE7UUFBa0I7UUFBYztRQUFrQjtRQUFZO1FBQWM7UUFBZ0I7UUFBWTtRQUFhO1FBQWlCO0tBQWdCO0lBQ3RPaUIsT0FBTztRQUFDO1FBQWlCO1FBQWM7UUFBVTtRQUFnQjtRQUFVO1FBQWM7S0FBVTtJQUNuR1EsU0FBUztRQUFDO1FBQVE7UUFBUztRQUF5QjtRQUF1QjtLQUEyQjtBQUN4RyxFQUFXOztVQVVDUTs7Ozs7OzsyREFPc0MsNkJBQTZCO0dBUG5FQSxhQUFBQTtBQVVaLHNFQUFzRSxHQUMvRCxNQUFNQyxrQkFBa0I7SUFDN0JDLFNBQVM7UUFBQztRQUFXO1FBQWE7UUFBUTtLQUFhO0lBQ3ZEQyxXQUFXO1FBQUM7UUFBb0I7UUFBc0I7S0FBcUI7QUFDN0UsRUFBVzs7VUFHQ0M7Ozs7Ozs7R0FBQUEsdUJBQUFBOztVQVVBQzs7Ozs7Ozs7O0dBQUFBLGVBQUFBOztVQVlBQzs7Ozs7O0dBQUFBLGlCQUFBQTs7VUFhQUM7OztHQUFBQSxvQkFBQUE7O1VBTUFDOzs7O0dBQUFBLG9CQUFBQTs7VUFPQUM7Ozs7O0dBQUFBLGNBQUFBOztVQVFBQzs7Ozs7R0FBQUEsYUFBQUE7O1VBWUFDO0lBQ1YsZ0dBQWdHOzs7Ozs7SUFPaEcsNkVBQTZFOzs7SUFJN0UseURBQXlEOzs7R0FaL0NBLGFBQUFBOztVQWtCQUM7Ozs7R0FBQUEsaUJBQUFBOztVQU9BQztJQUNWLGtCQUFrQjs7Ozs7O0lBT2xCLG1CQUFtQjs7SUFHbkIscUJBQXFCOzs7R0FYWEEsaUJBQUFBOztVQWlCQUM7Ozs7Ozs7Ozs7OztJQVlWLDJCQUEyQjs7OztHQVpqQkEsZUFBQUE7O1VBbUJBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FBQUEsZUFBQUE7QUFtQlosc0VBQXNFLEdBQy9ELE1BQU1DLGtCQUFrQjtJQUM3QkMsWUFBWTtRQUFDO1FBQVc7UUFBVztRQUFTO1FBQVc7S0FBUTtJQUMvREMsYUFBYTtRQUFDO1FBQWtCO0tBQWU7SUFDL0NDLGVBQWU7UUFBQztRQUFZO0tBQVk7QUFDMUMsRUFBVzs7VUFRQ0M7Ozs7Ozs7R0FBQUEsYUFBQUE7O1VBVUFDOzs7R0FBQUEsdUJBQUFBOztVQU1BQzs7Ozs7R0FBQUEsZUFBQUE7O1VBUUFDO0lBQ1YsMEJBQTBCOzs7Ozs7OztJQVMxQiwwQkFBMEI7Ozs7R0FWaEJBLGtCQUFBQTtBQWdCWixrREFBa0QsR0FDM0MsTUFBTUMsNEJBQTRCO0lBQ3ZDQyxTQUFTO1FBQUM7UUFBWTtRQUFZO1FBQU87UUFBUTtRQUFTO1FBQVU7S0FBZ0I7SUFDcEZqQyxTQUFTO1FBQUM7UUFBUTtRQUFZO0tBQVE7QUFDeEMsRUFBVzs7VUFPQ2tDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQUFBQSxrQkFBQUE7QUFzQlosNkRBQTZELEdBQ3RELE1BQU1DLHVCQUF1QjtJQUNsQ0YsU0FBUztRQUFDO1FBQVM7UUFBWTtRQUFZO1FBQVU7UUFBYztRQUFhO1FBQWE7UUFBZ0I7UUFBWTtRQUFXO1FBQVk7S0FBUTtJQUN4SmpDLFNBQVM7UUFBQztRQUFXO1FBQVU7UUFBVztRQUFRO1FBQVU7UUFBVTtLQUFZO0FBQ3BGLEVBQVc7O1VBRUNvQzs7Ozs7Ozs7Ozs7Ozs7O0dBQUFBLHdCQUFBQTs7VUFpQkFDOzs7Ozs7Ozs7Ozs7R0FBQUEsY0FBQUE7O1VBY0FDOzs7Ozs7Ozs7O0dBQUFBLFVBQUFBO0FBWVosd0VBQXdFLEdBQ2pFLE1BQU1DLG9CQUFvQjtJQUMvQkMsV0FBVztRQUNUO1FBQWM7UUFBbUI7UUFBbUI7UUFDcEQ7UUFBbUI7UUFBZ0I7UUFBZTtRQUNsRDtRQUFjO0tBQ2Y7SUFDREMsV0FBVztRQUNUO1FBQWM7UUFBUztRQUFXO1FBQVk7UUFDOUM7UUFBYztRQUFpQjtRQUFVO1FBQWM7S0FDeEQ7SUFDREMsV0FBVztRQUNUO1FBQW1CO1FBQXNCO1FBQVk7UUFDckQ7UUFBYTtRQUFjO1FBQWdCO1FBQVk7S0FDeEQ7QUFDSCxFQUFXOztVQUVDQzs7Ozs7Ozs7Ozs7R0FBQUEsY0FBQUE7O1VBa0JBQztJQUNWLHFCQUFxQjs7Ozs7OztJQVFyQixxQkFBcUI7Ozs7Ozs7SUFRckIscUJBQXFCOzs7Ozs7O0lBUXJCLGlDQUFpQzs7Ozs7OztJQVFqQywwQkFBMEI7Ozs7Ozs7SUFRMUIsNENBQTRDOzs7Ozs7O0lBUTVDLHVCQUF1Qjs7Ozs7O0lBT3ZCLG9EQUFvRDs7Ozs7R0F4RDFDQSxhQUFBQTs7VUFnRUFDOzs7Ozs7Ozs7R0FBQUEsZUFBQUE7O1VBZ0JBQzs7Ozs7Ozs7O2dDQVNZLG9CQUFvQjtHQVRoQ0EsY0FBQUE7O1VBYUFDOzs7Ozs7OztHQUFBQSxpQkFBQUE7QUFVWixtRUFBbUUsR0FDNUQsTUFBTUMsWUFBWUMsT0FBT0MsTUFBTSxDQUFDOUYsb0JBQW9CK0YsSUFBSSxHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGhlZ2FtZS1hZG1pbi8uL3R5cGVzL2VudW1zLnRzPzQ4MmUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdHlwZXMvZW51bXMudHNcbi8vIEFsbCBlbnVtcyBhbmQgY29uc3RhbnRzIC0gc2luZ2xlIHNvdXJjZSBvZiB0cnV0aCBmb3IgYXBwbGljYXRpb24gc3RhdGVcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQlVTSU5FU1MgU1RSVUNUVVJFIC0gU2luZ2xlIHNvdXJjZSBvZiB0cnV0aCBmb3Igc2VjdGlvbnMgYW5kIHN0YXRpb25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8qKiBCdXNpbmVzcyBTdHJ1Y3R1cmUgLSBTaW5nbGUgc291cmNlIG9mIHRydXRoIGZvciBzZWN0aW9ucyBhbmQgc3RhdGlvbnMgKi9cbmV4cG9ydCBjb25zdCBCVVNJTkVTU19TVFJVQ1RVUkUgPSB7XG4gIEFETUlOOiAgICAgIFsnU3RyYXRlZ3knLCAnUHJvamVjdHMnLCAnSW52ZW50b3J5JywgJ1RyYW5zcG9ydCcsICdUZWFtJywgJ01hdGVyaWFscycsICdFcXVpcG1lbnQnLCAnUmVudCcsICdEaXJlY3RvciddLFxuICBSRVNFQVJDSDogICBbJ0NsYXNzZXMnLCAnU3R1ZGllcycsICdEZXZlbG9wbWVudCddLFxuICBERVNJR046ICAgICBbJ0RpZ2l0YWwgQXJ0JywgJ0FydCBDcmVhdGl2ZSBQcm9jZXNzZXMnLCAnR2FtZSBEZXNpZ24nLCAnM0QgTW9kZWxpbmcnLCAnQW5pbWF0aW9uJ10sXG4gIFBST0RVQ1RJT046IFsnQXJ0d29ya3MnLCAnTXVyYWxzJywgJ1ByaW50cycsICdTdGlja2VycycsICdNZXJjaCcsICdXb29kd29ya3MnLCAnTkZUcyddLFxuICBTQUxFUzogICAgICBbJ0RpcmVjdCBTYWxlcycsICdGZXJpYSBTYWxlcycsICdOZXR3b3JrIFNhbGVzJywgJ09ubGluZSBTYWxlcycsICdTdG9yZSBTYWxlcycsICdNYXJrZXRpbmcnLCAnQm9va2luZ3MnLCAnT3RoZXIgU2FsZXMnXSxcbiAgUEVSU09OQUw6ICAgWydIZWFsdGgnLCAnRmFtaWx5JywgJ0Zvb2QnLCAnSG9tZScsICdUcmFuc3BvcnQgUCcsICdSZW50IFAnLCAnT3RoZXIgUCddXG59IGFzIGNvbnN0O1xuXG4vLyBBcmVhcyAodG9wLWxldmVsIGJ1c2luZXNzIGFyZWFzKVxuZXhwb3J0IGNvbnN0IENPTVBBTllfQVJFQVMgPSBbJ0FETUlOJywgJ1JFU0VBUkNIJywgJ0RFU0lHTicsICdQUk9EVUNUSU9OJywgJ1NBTEVTJ10gYXMgY29uc3Q7XG5leHBvcnQgY29uc3QgUEVSU09OQUxfQVJFQVMgPSBbJ1BFUlNPTkFMJ10gYXMgY29uc3Q7XG5leHBvcnQgY29uc3QgQUxMX0FSRUFTID0gWy4uLkNPTVBBTllfQVJFQVMsIC4uLlBFUlNPTkFMX0FSRUFTXSBhcyBjb25zdDtcblxuLy8gVHlwZSBleHBvcnRzXG5leHBvcnQgdHlwZSBBcmVhID0gdHlwZW9mIEFMTF9BUkVBU1tudW1iZXJdO1xuZXhwb3J0IHR5cGUgU3RhdGlvbiA9IHR5cGVvZiBCVVNJTkVTU19TVFJVQ1RVUkVbQXJlYV1bbnVtYmVyXTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gU1RBVElPTiBDQVRFR09SSUVTIC0gRGVyaXZlZCBmcm9tIEJVU0lORVNTX1NUUlVDVFVSRSBmb3IgU2VhcmNoYWJsZVNlbGVjdFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vKiogU3RhdGlvbiBjYXRlZ29yaWVzIGZvciBTZWFyY2hhYmxlU2VsZWN0IGdyb3VwaW5nIC0gZGVyaXZlZCBmcm9tIEJVU0lORVNTX1NUUlVDVFVSRSAqL1xuZXhwb3J0IGNvbnN0IFNUQVRJT05fQ0FURUdPUklFUyA9IHtcbiAgQURNSU46IEJVU0lORVNTX1NUUlVDVFVSRS5BRE1JTixcbiAgUkVTRUFSQ0g6IEJVU0lORVNTX1NUUlVDVFVSRS5SRVNFQVJDSCxcbiAgREVTSUdOOiBCVVNJTkVTU19TVFJVQ1RVUkUuREVTSUdOLFxuICBQUk9EVUNUSU9OOiBCVVNJTkVTU19TVFJVQ1RVUkUuUFJPRFVDVElPTixcbiAgU0FMRVM6IEJVU0lORVNTX1NUUlVDVFVSRS5TQUxFUyxcbiAgUEVSU09OQUw6IEJVU0lORVNTX1NUUlVDVFVSRS5QRVJTT05BTFxufSBhcyBjb25zdDtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gTE9DQVRJT04gU1RSVUNUVVJFXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8qKiBHZW9ncmFwaGljIExvY2F0aW9uIFN0cnVjdHVyZSAtIFNpbmdsZSBzb3VyY2Ugb2YgdHJ1dGggZm9yIGdlb2dyYXBoaWMgaGllcmFyY2h5ICovXG5leHBvcnQgY29uc3QgTE9DQVRJT05fU1RSVUNUVVJFID0ge1xuICAnTm9ydGggQW1lcmljYSc6IHtcbiAgICAnVW5pdGVkIFN0YXRlcyc6IFsnVW5pdGVkIFN0YXRlcyddLFxuICAgICdDYW5hZGEnOiBbJ0NhbmFkYSddXG4gICAgfSxcbiAgJ0NlbnRyYWwgQW1lcmljYSc6IHtcbiAgICAnQ29zdGEgUmljYSc6IFsnUHVudGFyZW5hcycsICdTYW4gSm9zZScsICdHdWFuYWNhc3RlJywgJ0xpbW9uJ10sXG4gICAgJ1BhbmFtYSc6IFsnUGFuYW1hJ10sXG4gICAgJ05pY2FyYWd1YSc6IFsnTmljYXJhZ3VhJ10sXG4gICAgJ0VsIFNhbHZhZG9yJzogWydFbCBTYWx2YWRvciddXG4gICAgfSxcbiAgJ1NvdXRoIEFtZXJpY2EnOiB7XG4gICAgJ1ZlbmV6dWVsYSc6IFsnTWFyZ2FyaXRhIElzbGFuZCcsICdDYXJhY2FzJ10sXG4gICAgJ0NvbG9tYmlhJzogWydCb2dvdGEnXSxcbiAgICAnVXJ1Z3VheSc6IFsnTW9udGV2aWRlbyddLFxuICAgICdDaGlsZSc6IFsnU2FudGlhZ28nXSxcbiAgICAnQXJnZW50aW5hJzogWydCdWVub3MgQWlyZXMnXSxcbiAgICAnQnJhc2lsJzogWydSaW8gZGUgSmFuZWlybyddLFxuICAgICdQZXJ1JzogWydMaW1hJ11cbiAgICB9LFxufSBhcyBjb25zdDtcblxuLy8gRXhwb3J0IHRoZSBzdHJ1Y3R1cmUgZm9yIGNvbXBvbmVudHMgdG8gdXNlXG5leHBvcnQgY29uc3QgTE9DQVRJT05fSElFUkFSQ0hZID0gTE9DQVRJT05fU1RSVUNUVVJFO1xuXG4vKiogU2V0dGxlbWVudCBjYXRlZ29yaWVzIGZvciBTZWFyY2hhYmxlU2VsZWN0IGdyb3VwaW5nIC0gYmFzZWQgb24gTE9DQVRJT05fU1RSVUNUVVJFIHJlZ2lvbnMgKi9cbi8vIFNFVFRMRU1FTlRfQ0FURUdPUklFUyByZW1vdmVkIC0gbm93IHVzaW5nIGR5bmFtaWMgU2V0dGxlbWVudCBlbnRpdGllcyB3aXRoIGNvdW50cnkgZmllbGRcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gU0lURSBFTlVNU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vKiogUGh5c2ljYWwgU2l0ZSBCdXNpbmVzcyBUeXBlcyAqL1xuZXhwb3J0IGVudW0gUGh5c2ljYWxCdXNpbmVzc1R5cGUge1xuICBTVE9SQUdFICAgICAgICAgICA9ICdzdG9yYWdlJywgICAgICAgICAgICAgICAgLy8gV2FyZWhvdXNlIHNpdGVzIChIb21lLCBGZXJpYSBCb3guLi4pXG4gIENPTlNJR05NRU5UICAgICAgID0gJ2NvbnNpZ25tZW50JywgICAgICAgICAgICAvLyBJdGVtcyBsZWZ0IHRvIHNlbGwgKFNtb2tpbmcgTG91bmdlLCBUYWd1YS4uLilcbiAgU0VMTElOR19QT0lOVCAgICAgPSAnc2VsbGluZyBwb2ludCcsICAgICAgICAgIC8vIFN0b3JlcyB0aGF0IGJ1eSBhdCBkaXNjb3VudCAoRWwgSG9ybml0bywgUGVyZXpvc28gRmVsaXouLi4pXG4gIEZFUklBICAgICAgICAgICAgID0gJ2ZlcmlhJywgICAgICAgICAgICAgICAgICAvLyBGZXJpYSBzaXRlcyAoRWNvIEZlcmlhLi4uKVxuICBURUFDSElOR19TUEFDRSAgICA9ICd0ZWFjaGluZyBzcGFjZScsICAgICAgICAgLy8gVGVhY2hpbmcgc2l0ZXMgKEp1bmdsZSBBY2FkZW15Li4uKVxuICBIUSAgICAgICAgICAgICAgICA9ICdIUScsICAgICAgICAgICAgICAgICAgICAgLy8gSFEgc2l0ZXMgKEhvbWUsIEZlcmlhIEJveC4uLilcbiAgQVJUX0dBTExFUlkgICAgICAgPSAnYXJ0IGdhbGxlcnknLCAgICAgICAgICAgIC8vIEdhbGxlcnkgc2l0ZXMgKEdhbGxlcnkgMTA4NC4uLilcbiAgREVTSUdOX1NQQUNFICAgICAgPSAnZGVzaWduIHNwYWNlJywgICAgICAgICAgIC8vIERlc2lnbiBodWIgc2l0ZXMgKERlc2lnbiBIdWIuLi4pXG4gIFdPUktTSE9QICAgICAgICAgID0gJ3dvcmtzaG9wJyAgICAgICAgICAgICAgICAvLyBQcm9kdWN0aW9uIHNpdGVzIGZvciBjcmVhdGluZyBpdGVtc1xufVxuXG4vKiogQ2xvdWQgRGlnaXRhbCBUeXBlcyAqL1xuZXhwb3J0IGVudW0gQ2xvdWRTaXRlVHlwZSB7XG4gIFJFUE9TSVRPUlkgICAgICAgICAgPSAncmVwb3NpdG9yeScsICAgICAgICAgICAgIC8vIFNvdXJjZSBmaWxlcywgdGVtcGxhdGVzLCBkaWdpdGFsIGFzc2V0c1xuICBESUdJVEFMX1NUT1JBR0UgICAgID0gJ2RpZ2l0YWwgc3RvcmFnZScsICAgICAgICAvLyBEcml2ZXMsIGRpZ2l0YWwgYXJ0IGZvbGRlciwgb25saW5lIGdhbGxlcmllc1xuICBORlRfV0FMTEVUICAgICAgICAgID0gJ25mdCB3YWxsZXQnICAgICAgICAgICAgICAvLyBORnQgYXNzZXRzXG59XG5cbi8qKiBTcGVjaWFsIFNpdGUgUHVycG9zZXMgKi9cbmV4cG9ydCBlbnVtIFNwZWNpYWxTaXRlVHlwZSB7XG4gIFVOSVZFUlNBTF9UUkFDS0lORyA9ICd1bml2ZXJzYWwgdHJhY2tpbmcnLCAvLyBJdGVtcyBubyBsb25nZXIgYXQgc3BlY2lmaWMgc2l0ZXNcbiAgU09MRF9JVEVNUyAgICAgICAgID0gJ3NvbGQgaXRlbXMnLCAgICAgICAgIC8vIFNvbGQgaXRlbXMgdHJhY2tpbmdcbiAgQVJDSElWRUQgICAgICAgICAgID0gJ2FyY2hpdmVkJywgICAgICAgICAgIC8vIEFyY2hpdmVkL2hpc3RvcmljYWwgaXRlbXNcbiAgREVMRVRFRCAgICAgICAgICAgID0gJ2RlbGV0ZWQnICAgICAgICAgICAgIC8vIERlbGV0ZWQgaXRlbXNcbn1cblxuLyoqIFNpdGVUeXBlIGVudW0gZm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHkgd2l0aCBlbnRpdGllcyAqL1xuZXhwb3J0IGVudW0gU2l0ZVR5cGUge1xuICBQSFlTSUNBTCA9ICdQSFlTSUNBTCcsICAvLyBQaHlzaWNhbCBsb2NhdGlvbnMgd2l0aCBhZGRyZXNzZXNcbiAgQ0xPVUQgPSAnQ0xPVUQnLCAgICAgICAgLy8gRGlnaXRhbC9jbG91ZCBzdG9yYWdlIGxvY2F0aW9uc1xuICBTUEVDSUFMID0gJ1NQRUNJQUwnICAgICAvLyBTcGVjaWFsIHN5c3RlbS1tYW5hZ2VkIGxvY2F0aW9uc1xufVxuXG4vKiogU3RhdHVzIG9mIFNpdGVzIC0gY29udHJvbHMgc3RhdGUgKi9cbmV4cG9ydCBlbnVtIFNpdGVTdGF0dXMge1xuICBDUkVBVEVEICA9ICdDcmVhdGVkJywgICAvLyBGaXJzdCBjcmVhdGVkXG4gIEFDVElWRSAgID0gJ0FjdGl2ZScsICAgIC8vIEhhcyBJdGVtIG9yIFRhc2sgbGlua3NcbiAgVVBEQVRFRCAgPSAnVXBkYXRlZCcsICAgLy8gRGF0YSBlZGl0ZWRcbiAgSU5BQ1RJVkUgPSAnSW5hY3RpdmUnLCAgLy8gTm8gcmVsYXRpb25zaGlwc1xufVxuXG4vKiogU2l0ZSBTdHJ1Y3R1cmUgLSBTaW5nbGUgc291cmNlIG9mIHRydXRoIGZvciBzaXRlcyBhbmQgdGhlaXIgdHlwZXMgKi9cbmNvbnN0IFNJVEVfU1RSVUNUVVJFID0ge1xuICBQSFlTSUNBTDoge1xuICAgIEhPTUU6ICdIb21lJyxcbiAgICBGRVJJQV9CT1g6ICdGZXJpYSBCb3gnLFxuICAgIFNNT0tJTkdfTE9VTkdFOiAnU21va2luZyBMb3VuZ2UnLFxuICAgIFRBR1VBOiAnVGFndWEnLFxuICAgIENBRkVfVklWTzogJ0NhZmUgVml2bycsXG4gICAgWElWQTogJ1hpdmEnLFxuICAgIFBFUkVaT1NPX0ZFTElaOiAnUGVyZXpvc28gRmVsaXonLFxuICAgIEVMX0hPUk5JVE86ICdFbCBIb3JuaXRvJyxcbiAgICBKVU5HTEVfQUNBREVNWTogJ0p1bmdsZSBBY2FkZW15JyxcbiAgICBMQV9UUklCVTogJ0xhIFRyaWJ1JyxcbiAgICBPU0FfREVfUklPOiAnT3NhIGRlIFJpbycsXG4gICAgR0FMTEVSWV8xMDg0OiAnR2FsbGVyeSAxMDg0JyxcbiAgICBDQVRfQ0FGRTogJ0NhdCBDYWZlJyxcbiAgICBFQ09fRkVSSUE6ICdFY28gRmVyaWEnLFxuICAgIEVTQ1VFTEFfVkVSREU6ICdFc2N1ZWxhIFZlcmRlJyxcbiAgICBQUklOVF9NQVNURVJTOiAnUHJpbnQgTWFzdGVycycsXG4gIH0sXG4gIENMT1VEOiB7XG4gICAgRElHSVRBTF9TUEFDRTogJ0RpZ2l0YWwgU3BhY2UnLFxuICAgIERFU0tUT1BfUEM6ICdEZXNrdG9wIFBDJyxcbiAgICBMQVBUT1A6ICdMYXB0b3AnLFxuICAgIEdPT0dMRV9EUklWRTogJ0dvb2dsZSBEcml2ZScsXG4gICAgR0lUSFVCOiAnR2l0aHViJyxcbiAgICBNQUdJQ19FREVOOiAnTWFnaWMgRWRlbicsXG4gICAgT1BFTlNFQTogJ09wZW5TZWEnLFxuICB9LFxuICBTUEVDSUFMOiB7XG4gICAgTk9ORTogJ05vbmUnLFxuICAgIFdPUkxEOiAnV29ybGQnLFxuICAgIFNPTERfSVRFTVNfVEhJU19NT05USDogJ1NvbGQgSXRlbXMnLFxuICAgIEFSQ0hJVkVEX0hJU1RPUklDQUw6ICdBcmNoaXZlZCcsXG4gICAgREVMRVRFRF9JVEVNU19USElTX01PTlRIOiAnRGVsZXRlZCBJdGVtcycsXG4gIH1cbn0gYXMgY29uc3Q7XG5cbi8vIEV4cG9ydCB0aGUgc3RydWN0dXJlIGZvciBjb21wb25lbnRzIHRvIHVzZVxuZXhwb3J0IGNvbnN0IFNJVEVfR1JPVVBTID0gU0lURV9TVFJVQ1RVUkU7XG5cbi8qKiBTaXRlIGNhdGVnb3JpZXMgZm9yIFVJIG9yZ2FuaXphdGlvbiBhbmQgU2VhcmNoYWJsZVNlbGVjdCBncm91cGluZyAqL1xuZXhwb3J0IGNvbnN0IFNJVEVfQ0FURUdPUklFUyA9IHtcbiAgUEhZU0lDQUw6IFsnSE9NRScsICdGRVJJQV9CT1gnLCAnU01PS0lOR19MT1VOR0UnLCAnVEFHVUEnLCAnQ0FGRV9WSVZPJywgJ1hJVkEnLCAnUEVSRVpPU09fRkVMSVonLCAnRUxfSE9STklUTycsICdKVU5HTEVfQUNBREVNWScsICdMQV9UUklCVScsICdPU0FfREVfUklPJywgJ0dBTExFUllfMTA4NCcsICdDQVRfQ0FGRScsICdFQ09fRkVSSUEnLCAnRVNDVUVMQV9WRVJERScsICdQUklOVF9NQVNURVJTJ10sXG4gIENMT1VEOiBbJ0RJR0lUQUxfU1BBQ0UnLCAnREVTS1RPUF9QQycsICdMQVBUT1AnLCAnR09PR0xFX0RSSVZFJywgJ0dJVEhVQicsICdNQUdJQ19FREVOJywgJ09QRU5TRUEnXSxcbiAgU1BFQ0lBTDogWydOT05FJywgJ1dPUkxEJywgJ1NPTERfSVRFTVNfVEhJU19NT05USCcsICdBUkNISVZFRF9ISVNUT1JJQ0FMJywgJ0RFTEVURURfSVRFTVNfVEhJU19NT05USCddXG59IGFzIGNvbnN0O1xuXG4vLyBTZXR0bGVtZW50IGVudW0gcmVtb3ZlZCAtIG5vdyB1c2luZyBkeW5hbWljIFNldHRsZW1lbnQgZW50aXRpZXNcblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBUQVNLIEVOVU1TXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8qKiBNaXNzaW9uIFRyZWUgJiBoaWVyYXJjaGllcyAqL1xuZXhwb3J0IGVudW0gVGFza1R5cGUge1xuICBNSVNTSU9OICAgICAgICAgICAgICAgPSAnTWlzc2lvbicsXG4gIE1JTEVTVE9ORSAgICAgICAgICAgICA9ICdNaWxlc3RvbmUnLFxuICBHT0FMICAgICAgICAgICAgICAgICAgPSAnR29hbCcsXG4gIEFTU0lHTk1FTlQgICAgICAgICAgICA9ICdBc3NpZ25tZW50JyxcbiAgUkVDVVJSRU5UX1BBUkVOVCAgICAgID0gJ1JlY3VycmVudCBQYXJlbnQnLCAgICAgLy8gTkVXOiBGb2xkZXIvY29udGFpbmVyIGZvciByZWN1cnJlbnQgdGFza3NcbiAgUkVDVVJSRU5UX1RFTVBMQVRFICAgID0gJ1JlY3VycmVudCBUZW1wbGF0ZScsICAgLy8gTkVXOiBTZXRzIGZyZXF1ZW5jeSBwYXR0ZXJuXG4gIFJFQ1VSUkVOVF9JTlNUQU5DRSAgICA9ICdSZWN1cnJlbnQgSW5zdGFuY2UnICAgIC8vIE5FVzogU3Bhd25lZCB3aXRoIGR1ZSBkYXRlXG59XG5cbi8qKiBUYXNrIGNhdGVnb3JpZXMgZm9yIFVJIG9yZ2FuaXphdGlvbiBhbmQgU2VhcmNoYWJsZVNlbGVjdCBncm91cGluZyAqL1xuZXhwb3J0IGNvbnN0IFRBU0tfQ0FURUdPUklFUyA9IHtcbiAgTUlTU0lPTjogWydNaXNzaW9uJywgJ01pbGVzdG9uZScsICdHb2FsJywgJ0Fzc2lnbm1lbnQnXSxcbiAgUkVDVVJSRU5UOiBbJ1JlY3VycmVudCBQYXJlbnQnLCAnUmVjdXJyZW50IFRlbXBsYXRlJywgJ1JlY3VycmVudCBJbnN0YW5jZSddXG59IGFzIGNvbnN0O1xuXG4vKiogUmVjdXJyZW50IHRhc2sgZnJlcXVlbmN5IG9wdGlvbnMgKi9cbmV4cG9ydCBlbnVtIFJlY3VycmVudEZyZXF1ZW5jeSB7XG4gIE9OQ0UgPSAnT25jZScsXG4gIERBSUxZID0gJ0RhaWx5JyxcbiAgV0VFS0xZID0gJ1dlZWtseScsIFxuICBNT05USExZID0gJ01vbnRobHknLFxuICBDVVNUT00gPSAnQ3VzdG9tJyxcbiAgQUxXQVlTID0gJ0Fsd2F5cydcbn1cblxuLyoqIFdvcmtmbG93IHN0YXRlIG9mIGEgVGFzayAqL1xuZXhwb3J0IGVudW0gVGFza1N0YXR1cyB7XG4gIENSRUFURUQgICAgID0gJ0NyZWF0ZWQnLFxuICBPTl9IT0xEICAgICA9ICdPbiBIb2xkJyxcbiAgSU5fUFJPR1JFU1MgPSAnSW4gUHJvZ3Jlc3MnLFxuICBGSU5JU0hJTkcgICA9ICdGaW5pc2hpbmcnLFxuICBET05FICAgICAgICA9ICdEb25lJyxcbiAgQ09MTEVDVEVEICAgPSAnQ29sbGVjdGVkJyxcbiAgRkFJTEVEICAgICAgPSAnRmFpbGVkJyxcbiAgTk9ORSAgICAgICAgPSAnTm9uZScsICAgICAgICAvLyBubyBzdGF0dXNcbn1cblxuLyoqIE9wdGlvbmFsIHVyZ2VuY3kgZmxhZyAoLS3ilrogcmVwbGFjZXMgXCJBd2FpdGluZyAvIFVyZ2VudCDigKZcIikgKi9cbmV4cG9ydCBlbnVtIFRhc2tQcmlvcml0eSB7XG4gIE5PVF9OT1cgICAgPSAnTm90IE5vdycsXG4gIFNMT1cgICAgICAgPSAnU2xvdycsXG4gIE5PUk1BTCAgICAgPSAnTm9ybWFsJyxcbiAgSU1QT1JUQU5UICA9ICdJbXBvcnRhbnQnLFxuICBVUkdFTlQgICAgID0gJ1VyZ2VudCcsXG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEZJTkFOQ0lBTCAmIFBPSU5UUyBFTlVNU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vKiogU3RhdHVzIG9mIFJlY29yZHMgKGNvbXBsZXRlZCB0YXNrcykgKi9cbmV4cG9ydCBlbnVtIEZpbmFuY2lhbFN0YXR1cyB7XG4gIERPTkUgPSAnRG9uZScsICAgICAgICAvLyBhcyBzb29uIGFzIHRoZXkgYXJlIGNyZWF0ZWRcbiAgQ09MTEVDVEVEID0gJ0NvbGxlY3RlZCcsIC8vIHRoZXkgc3RheSBkb25lIHVudGlsIHRoZXkgYXJlIGNvbGxlY3RlZFxufVxuXG4vKiogU3RhdHVzIG9mIERldiBTcHJpbnRzL1BoYXNlcyAqL1xuZXhwb3J0IGVudW0gRGV2U3ByaW50U3RhdHVzIHtcbiAgTk9UX1NUQVJURUQgPSAnTm90IFN0YXJ0ZWQnLFxuICBJTl9QUk9HUkVTUyA9ICdJbiBQcm9ncmVzcycsXG4gIERPTkUgPSAnRG9uZScsXG59XG5cbi8vIE5ldyBQb2ludHMgU3lzdGVtIEVudW1zXG5leHBvcnQgZW51bSBQb2ludFR5cGUge1xuICBYUCA9ICdYUCcsICAgICAvLyBFeHBlcmllbmNlIFBvaW50c1xuICBSUCA9ICdSUCcsICAgIC8vIFJlc2VhcmNoIFBvaW50c1xuICBGUCA9ICdGUCcsICAgIC8vIEZhbWlseSBQb2ludHMgXG4gIEhQID0gJ0hQJywgICAgLy8gSGVhbHRoIFBvaW50c1xufVxuXG4vKiogSW4tZ2FtZSBjdXJyZW5jeSBzeXN0ZW0gKi9cbmV4cG9ydCBlbnVtIEN1cnJlbmN5IHtcbiAgVVNEICAgICAgICAgICA9ICdVU0QnLCAgICAgICAgICAgICAgLy8gVVMgRG9sbGFycyAtIHByaW1hcnkgYnVzaW5lc3MgY3VycmVuY3kgZm9yIGludmVudG9yaWVzLCBwYXltZW50cywgZXRjLlxuICBKVU5HTEVfQ09JTlMgID0gJ0okJywgICAgICAgICAgICAgICAvLyBKdW5nbGUgQ29pbnMgLSByZXdhcmQgdG9rZW5zIHRoYXQgY29udmVydCB0byBVU0QgKGxpa2UgWmVsZGEgZ2VtcylcbiAgQlRDICAgICAgICAgICA9ICdCVEMnLCAgICAgICAgICAgICAgLy8gQml0Y29pbiAtIGNyeXB0b2N1cnJlbmN5IGFzc2V0XG4gIENSQyAgICAgICAgICAgPSAnQ1JDJywgICAgICAgICAgICAgIC8vIENvc3RhIFJpY2EgQ29sb24gLSBsb2NhbCBjdXJyZW5jeVxufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBJVEVNIEVOVU1TXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8qKiBBbGwgSXRlbXMgLSBQcm9kdWN0cywgQnVuZGxlcywgTWF0ZXJpYWxzIGFuZCBFcXVpcG1lbnQgKi9cbmV4cG9ydCBlbnVtIEl0ZW1UeXBlIHtcbiAgLy8gTU9ERUxfSVRFTSAtIEluZGl2aWR1YWwgcHJvZHVjdHMgdGhhdCBjYW4gYmUgc2VwYXJhdGVkIGJ5IG1vZGVsLCBzdWJ0eXBlLCBzaXRlIGFuZCBjb2xsZWN0aW9uXG4gIERJR0lUQUwgICAgICAgICA9ICdEaWdpdGFsJyxcbiAgQVJUV09SSyAgICAgICAgID0gJ0FydHdvcmsnLFxuICBQUklOVCAgICAgICAgICAgPSAnUHJpbnQnLFxuICBTVElDS0VSICAgICAgICAgPSAnU3RpY2tlcicsXG4gIE1FUkNIICAgICAgICAgICA9ICdNZXJjaCcsXG4gIFxuICAvLyBCVU5ETEVfSVRFTSAtIEJ1c2luZXNzIExvZ2ljIEl0ZW1zIHRoYXQgYXJlIFBhY2tzIG9mIHRoZSBzYW1lIFR5cGUgb2YgSXRlbVxuICBTVElDS0VSX0JVTkRMRSAgPSAnU3RpY2tlciBCdW5kbGUnLCAgICAvLyBQYWNrIG9mIFN0aWNrZXJzXG4gIFBSSU5UX0JVTkRMRSAgICA9ICdQcmludCBCdW5kbGUnLCAgICAgIC8vIFBhY2sgb2YgUHJpbnRzXG4gIFxuICAvLyBSRVNPVVJDRV9JVEVNIC0gTWF0ZXJpYWxzIGFuZCBFcXVpcG1lbnQgZm9yIHByb2R1Y3Rpb25cbiAgTUFURVJJQUwgICAgICAgID0gJ01hdGVyaWFsJyxcbiAgRVFVSVBNRU5UICAgICAgID0gJ0VxdWlwbWVudCcsXG59XG5cbi8qKiBJdGVtIENhdGVnb3JpZXMgZm9yIFVJIG9yZ2FuaXphdGlvbiBhbmQgYnVzaW5lc3MgbG9naWMgKi9cbmV4cG9ydCBlbnVtIEl0ZW1DYXRlZ29yeSB7XG4gIE1PREVMX0lURU0gICAgICA9ICdNT0RFTF9JVEVNJywgICAgICAvLyBJbmRpdmlkdWFsIHByb2R1Y3RzIChEaWdpdGFsLCBBcnR3b3JrLCBQcmludCwgU3RpY2tlciwgTWVyY2gpXG4gIEJVTkRMRV9JVEVNICAgICA9ICdCVU5ETEVfSVRFTScsICAgICAvLyBCdXNpbmVzcyBMb2dpYyBJdGVtcyAoU3RpY2tlciBCdW5kbGUsIFByaW50IEJ1bmRsZSlcbiAgUkVTT1VSQ0VfSVRFTSAgID0gJ1JFU09VUkNFX0lURU0nLCAgIC8vIFByb2R1Y3Rpb24gcmVzb3VyY2VzIChNYXRlcmlhbCwgRXF1aXBtZW50KVxufVxuXG4vKiogSW52ZW50b3J5IHRhYiB2YWx1ZXMgLSBPcmdhbml6ZWQgYnkgSXRlbSBDYXRlZ29yaWVzICovXG5leHBvcnQgZW51bSBJbnZlbnRvcnlUYWIge1xuICAvLyBNT0RFTF9JVEVNIHRhYnNcbiAgRElHSVRBTCAgICAgPSAnZGlnaXRhbCcsXG4gIEFSVFdPUktTICAgID0gJ2FydHdvcmtzJyxcbiAgU1RJQ0tFUlMgICAgPSAnc3RpY2tlcnMnLFxuICBQUklOVFMgICAgICA9ICdwcmludHMnLFxuICBNRVJDSCAgICAgICA9ICdtZXJjaCcsXG4gIFxuICAvLyBCVU5ETEVfSVRFTSB0YWJzXG4gIEJVTkRMRVMgICAgID0gJ2J1bmRsZXMnLCAgICAvLyBCdXNpbmVzcyBMb2dpYyBJdGVtcyAoQnVuZGxlcylcbiAgXG4gIC8vIFJFU09VUkNFX0lURU0gdGFic1xuICBNQVRFUklBTFMgICA9ICdtYXRlcmlhbHMnLFxuICBFUVVJUE1FTlQgICA9ICdlcXVpcG1lbnQnLFxufVxuXG4vKiogTGlmZWN5Y2xlIHN0YXRlIG9mIE9ORSBJdGVtIC9TS1UgKi9cbmV4cG9ydCBlbnVtIEl0ZW1TdGF0dXMge1xuICBDUkVBVEVEICAgICA9ICdDcmVhdGVkJyxcbiAgRk9SX1NBTEUgICAgPSAnRm9yIFNhbGUnLFxuICBTT0xEICAgICAgICA9ICdTb2xkJyxcbiAgVE9fT1JERVIgICAgPSAnVG8gT3JkZXInLFxuICBUT19ETyAgICAgICA9ICdUbyBEbycsXG4gIEdJRlRFRCAgICAgID0gJ0dpZnRlZCcsXG4gIFJFU0VSVkVEICAgID0gJ1Jlc2VydmVkJyxcbiAgT0JTT0xFVEUgICAgPSAnT2Jzb2xldGUnLFxuICBEQU1BR0VEICAgICA9ICdEYW1hZ2VkJyxcbiAgSURMRSAgICAgICAgPSAnSWRsZScsXG4gIENPTExFQ1RFRCAgID0gJ0NvbGxlY3RlZCcsXG4gIC8vIFRlbXBvcmFyeSB3aGlsZSBidWlsZGluZ1xuICBPTl9IT0xEICAgICA9ICdPbiBIb2xkJyxcbiAgU1RPUkVEICAgICAgPSAnU3RvcmVkJyxcbiAgVE9fUkVQQUlSICAgPSAnVG8gUmVwYWlyJyxcbn1cblxuLyoqIENyZWF0aXZlIGNvbGxlY3Rpb25zICovXG5leHBvcnQgZW51bSBDb2xsZWN0aW9uIHtcbiAgTk9fQ09MTEVDVElPTiAgICAgPSAnTm8gQ29sbGVjdGlvbicsXG4gIE9SR0FOSUNfSU1BR0lOQVJZID0gJ09yZ2FuaWMgSW1hZ2luYXJ5JyxcbiAgQU5JTUFMX0tJTkdET00gICAgPSAnQW5pbWFsIEtpbmdkb20nLFxuICBNVVNITEFORCAgICAgICAgICA9ICdNdXNobGFuZCcsXG4gIFNFVkVOX0VMRU1FTlRTICAgID0gJ1NldmVuIEVsZW1lbnRzJyxcbiAgQklUQ09JTiAgICAgICAgICAgPSAnQml0Y29pbicsXG4gIERPUEVfQ1JFVyAgICAgICAgID0gJ0RvcGUgQ3JldycsXG4gIFdPUkRTICAgICAgICAgICAgID0gJ1dvcmRzJyxcbiAgRlJVSVRTX1ZFR0dJRVMgICAgPSAnRnJ1aXRzICYgVmVnZ2llcycsXG4gIEZMT1dFUlMgICAgICAgICAgID0gJ0Zsb3dlcnMnLFxuICBLSU5HU19RVUVFTlMgICAgICA9ICdLaW5ncyAmIFF1ZWVucycsXG4gIFBPTFlHT05BTF9IRCAgICAgID0gJ1BvbHlnb25hbCBIRCcsXG4gIFJFTElRVUlBUyAgICAgICAgID0gJ1JlbGlxdWlhcycsXG4gIEJJVFVBWUEgICAgICAgICAgID0gJ0JpdHVheWEnLFxuICBMQU5EU0NBUEVTICAgICAgICA9ICdMYW5kc2NhcGVzJyxcbiAgRVhJTElBRE8gICAgICAgICAgPSAnRXhpbGlhZG8nLFxufVxuXG4vKiogSXRlbSBjYXRlZ29yaWVzIGZvciBVSSBvcmdhbml6YXRpb24gYW5kIFNlYXJjaGFibGVTZWxlY3QgZ3JvdXBpbmcgKi9cbmV4cG9ydCBjb25zdCBJVEVNX0NBVEVHT1JJRVMgPSB7XG4gIE1PREVMX0lURU06IFsnRElHSVRBTCcsICdBUlRXT1JLJywgJ1BSSU5UJywgJ1NUSUNLRVInLCAnTUVSQ0gnXSxcbiAgQlVORExFX0lURU06IFsnU1RJQ0tFUl9CVU5ETEUnLCAnUFJJTlRfQlVORExFJ10sXG4gIFJFU09VUkNFX0lURU06IFsnTUFURVJJQUwnLCAnRVFVSVBNRU5UJ11cbn0gYXMgY29uc3Q7XG5cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gU0FMRVMgRU5VTVNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLyoqIFNhbGVzIHRyYW5zYWN0aW9uIHR5cGVzICovXG5leHBvcnQgZW51bSBTYWxlVHlwZSB7XG4gIERJUkVDVCA9ICdESVJFQ1QnLFxuICBGRVJJQSA9ICdGRVJJQScsXG4gIEJVTkRMRV9TQUxFID0gJ0JVTkRMRScsXG4gIENPTlNJR05NRU5UID0gJ0NPTlNJR05NRU5UJyxcbiAgT05MSU5FID0gJ09OTElORScsXG4gIE5GVCA9ICdORlQnLFxufVxuXG4vKiogQ2FzaC1kcmF3ZXIgc3RhdGUgKi9cbmV4cG9ydCBlbnVtIFNhbGVzU2Vzc2lvblN0YXR1cyB7XG4gIFBFTkRJTkdfUkVDT05DSUxJQVRJT04gPSAnUGVuZGluZyBSZWNvbmNpbGlhdGlvbicsXG4gIFJFQ09OQ0lMRUQgICAgICAgICAgICAgPSAnUmVjb25jaWxlZCcsXG59XG5cbi8qKiBTYWxlcyB0cmFuc2FjdGlvbiBzdGF0dXMgKi9cbmV4cG9ydCBlbnVtIFNhbGVTdGF0dXMge1xuICBQRU5ESU5HID0gJ1BFTkRJTkcnLCAgICAgIC8vIFNhbGUgaXNOb3RDaGFyZ2VkXG4gIE9OX0hPTEQgPSAnT05fSE9MRCcsICAgICAgLy8gV2FpdGluZyBmb3Igb3RoZXIgcmVhc29uc1xuICBDSEFSR0VEID0gJ0NIQVJHRUQnLCAgICAgIC8vIFNhbGUgaXMgQ2hhcmdlZFxuICBDQU5DRUxMRUQgPSAnQ0FOQ0VMTEVEJywgIC8vIFNhbGUgaXMgQ2FuY2VsbGVkXG59XG5cbi8qKiBQYXltZW50IG1ldGhvZHMgZm9yIHNhbGVzICovXG5leHBvcnQgZW51bSBQYXltZW50TWV0aG9kIHtcbiAgLy8gUmVndWxhciBwYXltZW50IG1ldGhvZHNcbiAgRklBVF9VU0QgPSAgICAgICckIENBU0gnLFxuICBGSUFUX0NSQyA9ICAgICAgJ+KCoSBDQVNIJyxcbiAgQlRDID0gICAgICAgICAgICdCSVRDT0lOJyxcbiAgQ0FSRCA9ICAgICAgICAgICdDQVJEJyxcbiAgU0lOUEUgPSAgICAgICAgICdTSU5QRScsXG4gIFBBWVBBTCA9ICAgICAgICAnUEFZUEFMJyxcbiAgV0lSRV9UUkFOU0ZFUiA9ICdXSVJFJyxcbiAgXG4gIC8vIFNwZWNpYWwgcGF5bWVudCBtZXRob2RzXG4gIEdJRlQgPSAgICAgICAgICAnR0lGVCcsXG4gIEVYQ0hBTkdFID0gICAgICAnRVhDSEFOR0UnLFxuICBPVEhFUiA9ICAgICAgICAgJ09USEVSJyxcbn1cblxuLyoqIFBheW1lbnQgbWV0aG9kIGNhdGVnb3JpZXMgZm9yIFVJIG9yZ2FuaXphdGlvbiAqL1xuZXhwb3J0IGNvbnN0IFBBWU1FTlRfTUVUSE9EX0NBVEVHT1JJRVMgPSB7XG4gIFJFR1VMQVI6IFsnRklBVF9VU0QnLCAnRklBVF9DUkMnLCAnQlRDJywgJ0NBUkQnLCAnU0lOUEUnLCAnUEFZUEFMJywgJ1dJUkVfVFJBTlNGRVInXSxcbiAgU1BFQ0lBTDogWydHSUZUJywgJ0VYQ0hBTkdFJywgJ09USEVSJ11cbn0gYXMgY29uc3Q7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIENIQVJBQ1RFUiBFTlVNU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vKiogQ2hhcmFjdGVyIHJvbGVzICovXG5leHBvcnQgZW51bSBDaGFyYWN0ZXJSb2xlIHtcbiAgRk9VTkRFUiAgICAgICA9ICdmb3VuZGVyJyxcbiAgUExBWUVSICAgICAgICA9ICdwbGF5ZXInLFxuICBQQURBV0FOICAgICAgID0gJ3BhZGF3YW4nLFxuICBJTlZFU1RPUiAgICAgID0gJ2ludmVzdG9yJyxcbiAgVEVBTSAgICAgICAgICA9ICd0ZWFtJyxcbiAgRkFNSUxZICAgICAgICA9ICdmYW1pbHknLFxuICBGUklFTkQgICAgICAgID0gJ2ZyaWVuZCcsXG4gIEFETUlOICAgICAgICAgPSAnYWRtaW4nLFxuICBERVNJR05FUiAgICAgID0gJ2Rlc2lnbmVyJyxcbiAgUFJPRFVDRVIgICAgICA9ICdwcm9kdWNlcicsXG4gIFNFTExFUiAgICAgICAgPSAnc2VsbGVyJyxcbiAgUkVTRUFSQ0hFUiAgICA9ICdyZXNlYXJjaGVyJyxcbiAgREVWRUxPUEVSICAgICA9ICdkZXZlbG9wZXInLFxuICBBSV9BR0VOVCAgICAgID0gJ2FpLWFnZW50JyxcbiAgQVNTT0NJQVRFICAgICA9ICdhc3NvY2lhdGUnLFxuICBDT0xMQUJPUkFUT1IgID0gJ2NvbGxhYm9yYXRvcicsXG4gIENVU1RPTUVSICAgICAgPSAnY3VzdG9tZXInLFxuICBTVFVERU5UICAgICAgID0gJ3N0dWRlbnQnLFxuICBPVEhFUiAgICAgICAgID0gJ290aGVyJ1xufVxuXG4vKiogQ2hhcmFjdGVyIHJvbGUgdHlwZXMgZm9yIFVJIG9yZ2FuaXphdGlvbiBhbmQgcGVybWlzc2lvbnMgKi9cbmV4cG9ydCBjb25zdCBDSEFSQUNURVJfUk9MRV9UWVBFUyA9IHtcbiAgUkVHVUxBUjogWydhZG1pbicsICdkZXNpZ25lcicsICdwcm9kdWNlcicsICdzZWxsZXInLCAncmVzZWFyY2hlcicsICdkZXZlbG9wZXInLCAnYXNzb2NpYXRlJywgJ2NvbGxhYm9yYXRvcicsICdjdXN0b21lcicsICdzdHVkZW50JywgJ2FpLWFnZW50JywgJ290aGVyJ10sXG4gIFNQRUNJQUw6IFsnZm91bmRlcicsICdwbGF5ZXInLCAncGFkYXdhbicsICd0ZWFtJywgJ2ZhbWlseScsICdmcmllbmQnLCAnaW52ZXN0b3InIF1cbn0gYXMgY29uc3Q7XG5cbmV4cG9ydCBlbnVtIEludGVsZWN0dWFsRnVuY3Rpb24ge1xuICBTRUxGX0FXQVJFICAgICAgPSAnU2VsZiBBd2FyZW5lc3MnLCAgICAgLy8gU2VsZi1tb25pdG9yaW5nIC8gZXJyb3IgbW9uaXRvcmluZzogTm90aWNlIHBlcmZvcm1hbmNlIGRyaWZ0LCBjYXRjaCBtaXN0YWtlcywgYWRqdXN0IGluLWZsaWdodC5cbiAgRU1PVElPTl9DT05UUk9MID0gJ0Vtb3Rpb24gQ29udHJvbCcsICAgIC8vIEVtb3Rpb25hbCByZWd1bGF0aW9uOiBNb2R1bGF0ZSBmcnVzdHJhdGlvbiwgc3RyZXNzLCBhbmQgcmV3YXJkLXNlZWtpbmcgc28geW91IGNhbiBleGVjdXRlLlxuICBERUNJU0lPTl9NQUtJTkcgPSAnRGVjaXNpb24gTWFraW5nJywgICAgLy8gRGVjaXNpb24tbWFraW5nICh2YWx1YXRpb24gJiByaXNrKTogQ2hvb3NlIHVuZGVyIHVuY2VydGFpbnR5OyB3ZWlnaCBjb3N0L2JlbmVmaXQgYW5kIHJpc2suXG4gIENSRUFUSVZJVFkgICAgICA9ICdDcmVhdGl2aXR5JywgICAgICAgICAvLyBhYmlsaXR5IHRvIGdlbmVyYXRlIG9yaWdpbmFsIGlkZWFzLCB2aWV3IHNpdHVhdGlvbnMgZnJvbSBuZXcgcGVyc3BlY3RpdmVzLCBhbmQgcHJvZHVjZSBub3ZlbCBvdXRjb21lcy4gXG4gIFBST0JMRU1fU09MVklORyA9ICdQcm9ibGVtIFNvbHZpbmcnLCAgICAvLyBQcm9ibGVtIHNvbHZpbmcgKHN0cmF0ZWd5IGdlbmVyYXRpb24pOiBEaWFnbm9zZSBibG9ja2VycywgZ2VuZXJhdGUgb3B0aW9ucywgdGVzdCBhbmQgaXRlcmF0ZS5cbiAgU0VMRl9DT05UUk9MICAgID0gJ1NlbGYgQ29udHJvbCcsICAgICAgIC8vIEluaGliaXRvcnkgY29udHJvbDogUmVzaXN0IGltcHVsc2VzIGFuZCBkZWxheSBncmF0aWZpY2F0aW9uIHRvIHN0YXkgYWxpZ25lZCB3aXRoIGdvYWxzLlxuICBXT1JLX01FTU9SWSAgICAgPSAnV29ya2luZyBNZW1vcnknLCAgICAgLy8gSG9sZCBhbmQgbWFuaXB1bGF0ZSBpbmZvcm1hdGlvbiBpbiBtaW5kIHdoaWxlIGFjdGluZy5cbiAgQURBUFRBQklMSVRZICAgID0gJ0FkYXB0YWJpbGl0eScsICAgICAgIC8vIENvZ25pdGl2ZSBmbGV4aWJpbGl0eTogU3dpdGNoIHRhc2tzL3N0cmF0ZWdpZXMgYW5kIGFkYXB0IHdoZW4gY29uZGl0aW9ucyBjaGFuZ2UuXG4gIElOSVRJQVRJVkUgICAgICA9ICdJbml0aWF0aXZlJywgICAgICAgICAvLyBUYXNrIGluaXRpYXRpb246IFN0YXJ0IHdpdGhvdXQgb3Zlci1wcmVwcGluZywgcGVyZmVjdGlvbmlzbSwgb3IgYXZvaWRhbmNlLlxuICBQTEFOTklORyAgICAgICAgPSAnUGxhbm5pbmcnLCAgICAgICAgICAgLy8gUGxhbm5pbmcgJiBwcmlvcml0aXphdGlvbjogQ2hvb3NlIHN0cmF0ZWd5LCBvcmRlciBzdGVwcywgYW5kIGRlY2lkZSB3aGF0IG1hdHRlcnMgbm93IHZzIGxhdGVyLlxuICBPUkdBTklaQVRJT04gICAgPSAnT3JnYW5pemF0aW9uJywgICAgICAgLy8gT3JnYW5pemF0aW9uICYgc2VxdWVuY2luZzogU3RydWN0dXJlIGluZm8sIGFzc2V0cywgYW5kIHN0ZXBzIGludG8gd29ya2FibGUgc2VxdWVuY2VzLlxuICBUSU1FX01OR00gICAgICAgPSAnVGltZSBNYW5hZ2VtZW50JywgICAgLy8gVGltZSBtYW5hZ2VtZW50ICYgZXN0aW1hdGlvbjogRXN0aW1hdGUgZHVyYXRpb25zLCBwYWNlIHdvcmssIHJlc3BlY3QgdGltZWJveGVzLCBmaW5pc2ggb24gdGltZS5cbiAgQ09OQ0VOVFJBVElPTiAgID0gJ0NvbmNlbnRyYXRpb24nLCAgICAgIC8vIFN1c3RhaW5lZCBhdHRlbnRpb24gKGZvY3VzKTogTWFpbnRhaW4gZW5nYWdlbWVudCwgcmVkdWNlIGRpc3RyYWN0aWJpbGl0eS5cbiAgREVURVJNSU5BVElPTiAgID0gJ0RldGVybWluYXRpb24nLCAgICAgIC8vIEdvYWwtZGlyZWN0ZWQgcGVyc2lzdGVuY2U6IEtlZXAgYWR2YW5jaW5nIGxvbmcgYXJjcyBkZXNwaXRlIGZyaWN0aW9uIG9yIGJvcmVkb20uXG59XG5cbmV4cG9ydCBlbnVtIEF0dHJpYnV0ZSB7XG4gIFBFUkNFUFRJT04gICAgICAgICAgICA9ICdQZXJjZXB0aW9uJywgICAgIC8vIGFsc28gcmVjdGlvblxuICBMT0dJQyAgICAgICAgICAgICAgICAgPSAnTG9naWMnLCAgICAgICAgICAvLyBhbHNvIGFuYWx5c2lzXG4gIEZJVE5FU1MgICAgICAgICAgICAgICA9ICdGaXRuZXNzJywgICAgICAgIC8vIGFsc28gc3RyZW5ndGgsIHBoeXNpY2FsIGF0dHJhY3RpdmVuZXNzLCBwaHlzaWNhbCBoZWFsdGhcbiAgQ0hBUklTTUEgICAgICAgICAgICAgID0gJ0NoYXJpc21hJywgICAgICAgLy8gYWxzbyBjaGFybVxuICBXSVNET00gICAgICAgICAgICAgICAgPSAnV2lzZG9tJywgICAgICAgICAvLyBhbHNvIGtub3dsZWRnZVxuICBMRUFERVJTSElQICAgICAgICAgICAgPSAnTGVhZGVyc2hpcCcsICAgICAvLyBhbHNvIGF1dGhvcml0eVxuICBDT01NVU5JQ0FUSU9OICAgICAgICAgPSAnQ29tbXVuaWNhdGlvbicsICAvLyBhbHNvIHJoZXRvcmljXG4gIFZJU0lPTiAgICAgICAgICAgICAgICA9ICdWaXNpb24nLFxuICBSRVNJTElFTkNFICAgICAgICAgICAgPSAnUmVzaWxpZW5jZScsICAgICAvLyBhbHNvIGVuZHVyYW5jZVxuICBFTVBBVEhZICAgICAgICAgICAgICAgPSAnRW1wYXRoeScsICAgXG4gIElOVEVHUklUWSAgICAgICAgICAgICA9ICdJbnRlZ3JpdHknLCAgICAgIC8vIGFsc28gaG9uZXN0eVxufVxuXG5leHBvcnQgZW51bSBTa2lsbCB7XG4gIERFU0lHTl9USElOS0lORyAgICAgICA9ICdEZXNpZ24gVGhpbmtpbmcnLFxuICBQUk9KRUNUX01BTkFHRU1FTlQgICAgPSAnUHJvamVjdCBNYW5hZ2VtZW50JyxcbiAgVEVBQ0hJTkcgICAgICAgICAgICAgID0gJ1RlYWNoaW5nJyxcbiAgTkVHT1RJQVRJT04gICAgICAgICAgID0gJ05lZ290aWF0aW9uJyxcbiAgTkFSUkFUSVZFICAgICAgICAgICAgID0gJ05hcnJhdGl2ZScsXG4gIERFVkVMT1BJTkcgICAgICAgICAgICA9ICdEZXZlbG9waW5nJyxcbiAgSEFORENSQUZUSU5HICAgICAgICAgID0gJ0hhbmRjcmFmdGluZycsXG4gIFBBSU5USU5HICAgICAgICAgICAgICA9ICdQYWludGluZycsXG4gIElMTFVTVFJBVElPTiAgICAgICAgICA9ICdJbGx1c3RyYXRpb24nLFxufVxuXG4vKiogU2tpbGxzIGNhdGVnb3JpZXMgZm9yIFVJIG9yZ2FuaXphdGlvbiBhbmQgU2VhcmNoYWJsZVNlbGVjdCBncm91cGluZyAqL1xuZXhwb3J0IGNvbnN0IFNLSUxMU19DQVRFR09SSUVTID0ge1xuICBDT0dOSVRJVkU6IFtcbiAgICAnU0VMRl9BV0FSRScsICdFTU9USU9OX0NPTlRST0wnLCAnREVDSVNJT05fTUFLSU5HJywgJ0NSRUFUSVZJVFknLCBcbiAgICAnUFJPQkxFTV9TT0xWSU5HJywgJ1NFTEZfQ09OVFJPTCcsICdXT1JLX01FTU9SWScsICdBREFQVEFCSUxJVFknLCBcbiAgICAnSU5JVElBVElWRScsICdQTEFOTklORydcbiAgXSxcbiAgQ0hBUkFDVEVSOiBbXG4gICAgJ1BFUkNFUFRJT04nLCAnTE9HSUMnLCAnRklUTkVTUycsICdDSEFSSVNNQScsICdXSVNET00nLCBcbiAgICAnTEVBREVSU0hJUCcsICdDT01NVU5JQ0FUSU9OJywgJ1ZJU0lPTicsICdSRVNJTElFTkNFJywgJ0VNUEFUSFknXG4gIF0sXG4gIFBSQUNUSUNBTDogW1xuICAgICdERVNJR05fVEhJTktJTkcnLCAnUFJPSkVDVF9NQU5BR0VNRU5UJywgJ1RFQUNISU5HJywgJ05FR09USUFUSU9OJywgXG4gICAgJ05BUlJBVElWRScsICdERVZFTE9QSU5HJywgJ0hBTkRDUkFGVElORycsICdQQUlOVElORycsICdJTExVU1RSQVRJT04nXG4gIF1cbn0gYXMgY29uc3Q7XG5cbmV4cG9ydCBlbnVtIENvbW1Db2xvciB7XG4gIFJFRCAgICAgICAgICAgICAgID0gJ1JlZCcsICAgICAgICAgICAgICAgLy8gRXhwbGFpbmVkIGluIGRldGFpbCBsYXRlclxuICBZRUxMT1cgICAgICAgICAgICA9ICdZZWxsb3cnLCAgICAgICAgICAgIC8vIEV4cGxhaW5lZCBpbiBkZXRhaWwgbGF0ZXJcbiAgR1JFRU4gICAgICAgICAgICAgPSAnR3JlZW4nLCAgICAgICAgICAgICAvLyBFeHBsYWluZWQgaW4gZGV0YWlsIGxhdGVyXG4gIEJMVUUgICAgICAgICAgICAgID0gJ0JsdWUnLCAgICAgICAgICAgICAgLy8gRXhwbGFpbmVkIGluIGRldGFpbCBsYXRlclxuICBQVVJQTEUgICAgICAgICAgICA9ICdQdXJwbGUnLCAgICAgICAgICAgIC8vIEV4cGxhaW5lZCBpbiBkZXRhaWwgbGF0ZXJcbiAgT1JBTkdFICAgICAgICAgICAgPSAnT3JhbmdlJywgICAgICAgICAgICAvLyBFeHBsYWluZWQgaW4gZGV0YWlsIGxhdGVyXG4gIFRVUlFVT0lTRSAgICAgICAgID0gJ1R1cnF1b2lzZScsICAgICAgICAgLy8gRXhwbGFpbmVkIGluIGRldGFpbCBsYXRlclxuICBCUk9XTiAgICAgICAgICAgICA9ICdCcm93bicsICAgICAgICAgICAgICAvLyBSQVJFOiBSZWQtR3JlZW4sIFBhY2lmaWMgQm9zc3ksIHRyYWl0cyB1bmtub3duXG4gIFlFTExPV19CTFVFICAgICAgID0gJ1llbGxvdy1CbHVlJywgICAgICAgIC8vIFJBUkU6IFllbGxvdy1CbHVlLCBKb3lmdWwgVGVjaGluaWNhbCwgdHJhaXRzIHVua25vd25cbiAgWUVMTE9XX0dSRUVOICAgICAgPSAnWWVsbG93LUdyZWVuJywgICAgICAgLy8gUkFSRTogWWVsbG93LUdyZWVuLCBQYWNpZmljIEpveWZ1bCwgcG9zc2libHkgYSBCb2IgTWFybGV5XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIExJTksgJiBFTlRJVFkgRU5VTVNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLyoqIExpbmsgVHlwZXMgLSBUaGUgUm9zZXR0YSBTdG9uZSBDb21tdW5pY2F0aW9uIFBhdHRlcm4gKi9cbmV4cG9ydCBlbnVtIExpbmtUeXBlIHtcbiAgLy8gVEFTSyByZWxhdGlvbnNoaXBzXG4gIFRBU0tfSVRFTSAgICAgICAgID0gJ1RBU0tfSVRFTScsICAgICAgLy8gVGFzayBjcmVhdGVkIEl0ZW1cbiAgVEFTS19GSU5SRUMgICAgICAgPSAnVEFTS19GSU5SRUMnLCAgICAvLyBUYXNrIGxpbmtlZCB0byBGaW5hbmNpYWwgUmVjb3JkXG4gIFRBU0tfU0FMRSAgICAgICAgID0gJ1RBU0tfU0FMRScsICAgICAgLy8gVGFzayBzcGF3bmVkIGZyb20gU2FsZVxuICBUQVNLX1BMQVlFUiAgICAgICA9ICdUQVNLX1BMQVlFUicsICAgIC8vIFRhc2sgZWFybmVkIFBsYXllciBwb2ludHMgKG9ubHkgZm9yIFBMQVlFUlMpXG4gIFRBU0tfQ0hBUkFDVEVSICAgID0gJ1RBU0tfQ0hBUkFDVEVSJywgLy8gVGFzayBhc3NpZ25lZCB0byBDaGFyYWN0ZXIgKGN1c3RvbWVyLCB0ZWFtIG1lbWJlciwgZXRjLilcbiAgVEFTS19TSVRFICAgICAgICAgPSAnVEFTS19TSVRFJywgICAgICAvLyBUYXNrIGlzIHBlcmZvcm1lZCBhdCBhIFNpdGVcbiAgXG4gIC8vIElURU0gcmVsYXRpb25zaGlwc1xuICBJVEVNX1RBU0sgICAgICAgICA9ICdJVEVNX1RBU0snLCAgICAgIC8vIEl0ZW0gd2FzIGNyZWF0ZWQgYnkgVGFza1xuICBJVEVNX1NBTEUgICAgICAgICA9ICdJVEVNX1NBTEUnLCAgICAgIC8vIEl0ZW0gd2FzIHNvbGQgaW4gU2FsZVxuICBJVEVNX0ZJTlJFQyAgICAgICA9ICdJVEVNX0ZJTlJFQycsICAgIC8vIEl0ZW0gdHJhY2tlZCBpbiBGaW5hbmNpYWwgUmVjb3JkXG4gIElURU1fUExBWUVSICAgICAgID0gJ0lURU1fUExBWUVSJywgICAgLy8gSXRlbSBlYXJuZWQgUGxheWVyIHBvaW50cyAob25seSBmb3IgUExBWUVSUylcbiAgSVRFTV9DSEFSQUNURVIgICAgPSAnSVRFTV9DSEFSQUNURVInLCAvLyBJdGVtIG93bmVkIGJ5IENoYXJhY3RlciAoY3VzdG9tZXIsIHRlYW0gbWVtYmVyLCBldGMuKVxuICBJVEVNX1NJVEUgICAgICAgICA9ICdJVEVNX1NJVEUnLCAgICAgIC8vIEl0ZW0gaXMgbG9jYXRlZCBhdCBhIFNpdGVcblxuICAvLyBTQUxFIHJlbGF0aW9uc2hpcHNcbiAgU0FMRV9UQVNLICAgICAgICAgPSAnU0FMRV9UQVNLJywgICAgICAvLyBTYWxlIGNyZWF0ZWQgVGFza1xuICBTQUxFX0lURU0gICAgICAgICA9ICdTQUxFX0lURU0nLCAgICAgIC8vIFNhbGUgc29sZCBJdGVtXG4gIFNBTEVfRklOUkVDICAgICAgID0gJ1NBTEVfRklOUkVDJywgICAgLy8gU2FsZSBsaW5rZWQgdG8gRmluYW5jaWFsIFJlY29yZFxuICBTQUxFX1BMQVlFUiAgICAgICA9ICdTQUxFX1BMQVlFUicsICAgIC8vIFNhbGUgZWFybmVkIFBsYXllciBwb2ludHMgKG9ubHkgZm9yIFBMQVlFUlMpXG4gIFNBTEVfQ0hBUkFDVEVSICAgID0gJ1NBTEVfQ0hBUkFDVEVSJywgLy8gU2FsZSBjdXN0b21lciBpcyBDaGFyYWN0ZXIgKGN1c3RvbWVyLCB0ZWFtIG1lbWJlciwgZXRjLilcbiAgU0FMRV9TSVRFICAgICAgICAgPSAnU0FMRV9TSVRFJywgICAgICAvLyBTYWxlIGlzIHBlcmZvcm1lZCBhdCBhIFNpdGVcbiAgXG4gIC8vIEZJTkFOQ0lBTCBSRUNPUkQgcmVsYXRpb25zaGlwc1xuICBGSU5SRUNfVEFTSyAgICAgICA9ICdGSU5SRUNfVEFTSycsICAgIC8vIEZpbmFuY2lhbCBSZWNvcmQgdHJhY2tzIFRhc2tcbiAgRklOUkVDX0lURU0gICAgICAgPSAnRklOUkVDX0lURU0nLCAgICAvLyBGaW5hbmNpYWwgUmVjb3JkIHRyYWNrcyBJdGVtXG4gIEZJTlJFQ19TQUxFICAgICAgID0gJ0ZJTlJFQ19TQUxFJywgICAgLy8gRmluYW5jaWFsIFJlY29yZCBsaW5rZWQgdG8gU2FsZVxuICBGSU5SRUNfUExBWUVSICAgICA9ICdGSU5SRUNfUExBWUVSJywgIC8vIEZpbmFuY2lhbCBSZWNvcmQgZWFybmVkIFBsYXllciBwb2ludHMgKG9ubHkgZm9yIFBMQVlFUlMpXG4gIEZJTlJFQ19DSEFSQUNURVIgID0gJ0ZJTlJFQ19DSEFSQUNURVInLCAvLyBGaW5hbmNpYWwgUmVjb3JkIGFzc2lnbmVkIHRvIENoYXJhY3RlciAoY3VzdG9tZXIsIHRlYW0gbWVtYmVyLCBldGMuKVxuICBGSU5SRUNfU0lURSAgICAgICA9ICdGSU5SRUNfU0lURScsICAgICAgLy8gRmluYW5jaWFsIFJlY29yZCBpcyByZWxhdGVkIHRvIGEgU2l0ZVxuICBcbiAgLy8gQ0hBUkFDVEVSIHJlbGF0aW9uc2hpcHNcbiAgQ0hBUkFDVEVSX1RBU0sgICAgPSAnQ0hBUkFDVEVSX1RBU0snLCAgICAgLy8gQ2hhcmFjdGVyIGFzc2lnbmVkIHRvIFRhc2sgKGN1c3RvbWVyLCB0ZWFtIG1lbWJlciwgZXRjLilcbiAgQ0hBUkFDVEVSX0lURU0gICAgPSAnQ0hBUkFDVEVSX0lURU0nLCAgICAgLy8gQ2hhcmFjdGVyIG93bnMvcG9zc2Vzc2VzIHRoaXMgSXRlbSAoY3VzdG9tZXIsIHRlYW0gbWVtYmVyLCBldGMuKVxuICBDSEFSQUNURVJfU0FMRSAgICA9ICdDSEFSQUNURVJfU0FMRScsICAgICAvLyBDaGFyYWN0ZXIgaXMgY3VzdG9tZXIgb2YgdGhpcyBTYWxlIChjdXN0b21lciwgdGVhbSBtZW1iZXIsIGV0Yy4pXG4gIENIQVJBQ1RFUl9GSU5SRUMgID0gJ0NIQVJBQ1RFUl9GSU5SRUMnLCAgIC8vIENoYXJhY3RlciBpcyBhc3NpZ25lZCB0byB0aGlzIEZpbmFuY2lhbCBSZWNvcmQgKGN1c3RvbWVyLCB0ZWFtIG1lbWJlciwgZXRjLilcbiAgQ0hBUkFDVEVSX1NJVEUgICAgPSAnQ0hBUkFDVEVSX1NJVEUnLCAgICAgLy8gQ2hhcmFjdGVyIGlzIHJlbGF0ZWQgdG8gYSBTaXRlIChvd25lciwgbGl2ZXMgYXQsIHdvcmtzIGF0LCBjdXN0b21lciBvZiwgZXRjLilcbiAgQ0hBUkFDVEVSX1BMQVlFUiAgPSAnQ0hBUkFDVEVSX1BMQVlFUicsICAgLy8gV2hlbiBhIENoYXJhY3RlciBiZWxvbmdzIHRvIGEgUGxheWVyXG5cbiAgLy8gU0lURSByZWxhdGlvbnNoaXBzIChsb2NhdGlvbnMgYW5kIHBsYWNlcylcbiAgU0lURV9UQVNLICAgICAgICAgPSAnU0lURV9UQVNLJywgLy8gU2l0ZSBoYXMgVGFza3MgcGVyZm9ybWVkIHRoZXJlIChyZXZlcnNlKVxuICBTSVRFX0NIQVJBQ1RFUiAgICA9ICdTSVRFX0NIQVJBQ1RFUicsIC8vIFNpdGUgaGFzIGEgcmVsYXRlZCBDaGFyYWN0ZXIgKHJldmVyc2UpXG4gIFNJVEVfRklOUkVDICAgICAgID0gJ1NJVEVfRklOUkVDJywgICAgLy8gU2l0ZSBoYXMgYSByZWxhdGVkIEZpbmFuY2lhbCBSZWNvcmQgKHJldmVyc2UpXG4gIFNJVEVfSVRFTSAgICAgICAgID0gJ1NJVEVfSVRFTScsICAgICAgLy8gU2l0ZSBoYXMgYSByZWxhdGVkIEl0ZW0gKHJldmVyc2UpXG4gIFNJVEVfU0FMRSAgICAgICAgID0gJ1NJVEVfU0FMRScsICAgICAgLy8gU2l0ZSBoYXMgYSByZWxhdGVkIFNhbGUgKHJldmVyc2UpXG4gIFNJVEVfU0lURSAgICAgICAgID0gJ1NJVEVfU0lURScsICAgICAgLy8gU2l0ZSBjb25uZWN0ZWQgdG8gYW5vdGhlciBTaXRlIChpbnZlbnRvcnkgbW92ZW1lbnQsIGxvZ2lzdGljcywgZXRjLilcblxuICAvLyBQTEFZRVIgcmVsYXRpb25zaGlwc1xuICBQTEFZRVJfVEFTSyAgICAgICA9ICdQTEFZRVJfVEFTSycsIC8vIFBsYXllciBoYXMgVGFza3MgUG9pbnRzIChyZXZlcnNlKVxuICBQTEFZRVJfU0FMRSAgICAgICA9ICdQTEFZRVJfU0FMRScsIC8vIFBsYXllciBoYXMgU2FsZXMgUG9pbnRzIChyZXZlcnNlKVxuICBQTEFZRVJfRklOUkVDICAgICA9ICdQTEFZRVJfRklOUkVDJywgLy8gUGxheWVyIGl0cyB0aWVkIHRvIHRoaXMgRmluYW5jaWFsIFJlY29yZCAocmV2ZXJzZSlcbiAgUExBWUVSX0lURU0gICAgICAgPSAnUExBWUVSX0lURU0nLCAvLyBQbGF5ZXIgb3ducy9wb3NzZXNzZXMgdGhpcyBJdGVtIChyZXZlcnNlKVxuICBQTEFZRVJfQ0hBUkFDVEVSICA9ICdQTEFZRVJfQ0hBUkFDVEVSJywgLy8gUGxheWVyIGludGVyYWN0cyB3aXRoIG9yIG1hbmFnZXMgdGhpcyBDaGFyYWN0ZXIgKHJldmVyc2UpXG4gIFxuICAvLyBBQ0NPVU5UIHJlbGF0aW9uc2hpcHMgKGF1dGhlbnRpY2F0aW9uICYgaWRlbnRpdHkpXG4gIEFDQ09VTlRfUExBWUVSICAgID0gJ0FDQ09VTlRfUExBWUVSJywgICAgLy8gQWNjb3VudCBvd25zIFBsYXllciAob3B0aW9uYWwpXG4gIEFDQ09VTlRfQ0hBUkFDVEVSID0gJ0FDQ09VTlRfQ0hBUkFDVEVSJywgLy8gQWNjb3VudCBvd25zIENoYXJhY3RlciAocmVxdWlyZWQpXG4gIFBMQVlFUl9BQ0NPVU5UICAgID0gJ1BMQVlFUl9BQ0NPVU5UJywgICAgLy8gUGxheWVyIGJlbG9uZ3MgdG8gQWNjb3VudCAocmV2ZXJzZSlcbiAgQ0hBUkFDVEVSX0FDQ09VTlQgPSAnQ0hBUkFDVEVSX0FDQ09VTlQnLCAvLyBDaGFyYWN0ZXIgYmVsb25ncyB0byBBY2NvdW50IChyZXZlcnNlKVxufVxuXG4vKiogRW50aXR5IFR5cGVzIGZvciBMaW5rIFN5c3RlbSAqL1xuZXhwb3J0IGVudW0gRW50aXR5VHlwZSB7XG4gIFRBU0sgICAgICAgICAgPSAndGFzaycsICAgICAgICAgICAgLy8gVGFza3MgTWlzc2lvbnMsIE1pbGVzdG9uZXMsIEdvYWxzLCBBc3NpZ25tZW50cywgYW5kIFJlY3VycmVudHMgVHJlZVxuICBJVEVNICAgICAgICAgID0gJ2l0ZW0nLCAgICAgICAgICAgIC8vIEl0ZW1zIHdpdGggSW52ZW50b3J5IGFuZCBTdG9jayB0cmFja2luZ1xuICBTQUxFICAgICAgICAgID0gJ3NhbGUnLCAgICAgICAgICAgIC8vIFNhbGVzIHdpdGggbGluZXMgYW5kIFBheW1lbnQgTWV0aG9kc1xuICBGSU5BTkNJQUwgICAgID0gJ2ZpbmFuY2lhbCcsICAgLy8gRmluYW5jaWFsIFJlY29yZFMgYW5kIERvbmUgVGFza3NcbiAgQ0hBUkFDVEVSICAgICA9ICdjaGFyYWN0ZXInLCAgIC8vIE1haW4gZW50aXR5IC0gQ2hhcmFjdGVycyBjYW4gaGF2ZSBtdWx0aXBsZSByb2xlcyAoRk9VTkRFUiwgUExBWUVSLCBDVVNUT01FUiwgZXRjLilcbiAgU0lURSAgICAgICAgICA9ICdzaXRlJywgICAgICAgICAgICAvLyBTaXRlcyBhbmQgbG9jYXRpb25zIGNhbiBub3cgYmUgbGlua2VkIHRvIFRhc2tzLCBTYWxlcyBhbmQgb3RoZXIgZW50aXRpZXNcbiAgUExBWUVSICAgICAgICA9ICdwbGF5ZXInLCAgICAgICAgLy8gUGxheWVycyBhcmUgcmVhbCBwZW9wbGUgd2l0aCBhdXRoZW50aWNhdGlvbiBhbmQgcHJvZ3Jlc3Npb25cbiAgQUNDT1VOVCAgICAgICA9ICdhY2NvdW50JywgICAgICAgLy8gQWNjb3VudHMgZW50aXR5IGZvciBhdXRoZW50aWNhdGlvbiBsb2dpbiBhbmQgYXJlIGNoYXJhY3RlciBhbmQgcGxheWVyIGxpbmtlZFxufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBOT1RFIFNZU1RFTVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vKiogTm90ZSBjb2xvciB0aGVtZXMgLSBtYXBwZWQgdG8gYnVzaW5lc3Mgc3RydWN0dXJlICovXG5leHBvcnQgZW51bSBOb3RlQ29sb3Ige1xuICBXSElURSAgID0gJ3doaXRlJywgICAgLy8gR2VuZXJhbCwgbmV1dHJhbFxuICBPUkFOR0UgID0gJ29yYW5nZScsICAgLy8gSWRlYXMsIGNyZWF0aXZpdHlcbiAgUFVSUExFICA9ICdwdXJwbGUnLCAgIC8vIEFkbWluLCBzdHJhdGVneSwgbWFuYWdlbWVudFxuICBHUkVFTiAgID0gJ2dyZWVuJywgICAgLy8gRGVzaWduLCBjcmVhdGl2ZSBwcm9jZXNzZXNcbiAgQkxVRSAgICA9ICdibHVlJywgICAgIC8vIFJlc2VhcmNoLCBzdHVkaWVzLCBkZXZlbG9wbWVudFxuICBZRUxMT1cgID0gJ3llbGxvdycsICAgLy8gUHJvZHVjdGlvbiwgbWFudWZhY3R1cmluZ1xuICBQSU5LICAgID0gJ3BpbmsnLCAgICAgLy8gU2FsZXMsIG1hcmtldGluZ1xuICBSRUQgICAgID0gJ3JlZCcsICAgICAgLy8gQ2hhbGxlbmdlcywgcHJvYmxlbXMsIHVyZ2VudFxuICBHUkFZICAgID0gJ2dyYXknICAgICAgLy8gUGVyc29uYWwsIHByaXZhdGVcbn1cblxuLyoqIE5vdGVib29rIHR5cGVzIGZvciB0aGUgbm90ZS10YWtpbmcgc3lzdGVtICovXG5leHBvcnQgZW51bSBOb3RlYm9va1R5cGUge1xuICBBTExfTk9URVMgICAgICA9ICdhbGwnLFxuICBDVVJSRU5UX1NQUklOVCA9ICdjdXJyZW50X3NwcmludCcsXG4gIENIQUxMRU5HRVMgICAgID0gJ2NoYWxsZW5nZXMnLFxuICBST0FEX0FIRUFEICAgICA9ICdyb2FkX2FoZWFkJyxcbiAgU1RSQVRFR1kgICAgICAgPSAnc3RyYXRlZ3knLFxuICBJREVBUyAgICAgICAgICA9ICdpZGVhcycsXG4gIEdFTkVSQUwgICAgICAgID0gJ2dlbmVyYWwnXG59XG5cbi8qKiBBdmFpbGFibGUgdGFncyBkZXJpdmVkIGZyb20gYnVzaW5lc3Mgc3RydWN0dXJlIC0gRFJZIHByaW5jaXBsZSAqL1xuZXhwb3J0IGNvbnN0IE5PVEVfVEFHUyA9IE9iamVjdC52YWx1ZXMoQlVTSU5FU1NfU1RSVUNUVVJFKS5mbGF0KCk7Il0sIm5hbWVzIjpbIkJVU0lORVNTX1NUUlVDVFVSRSIsIkFETUlOIiwiUkVTRUFSQ0giLCJERVNJR04iLCJQUk9EVUNUSU9OIiwiU0FMRVMiLCJQRVJTT05BTCIsIkNPTVBBTllfQVJFQVMiLCJQRVJTT05BTF9BUkVBUyIsIkFMTF9BUkVBUyIsIlNUQVRJT05fQ0FURUdPUklFUyIsIkxPQ0FUSU9OX1NUUlVDVFVSRSIsIkxPQ0FUSU9OX0hJRVJBUkNIWSIsIlBoeXNpY2FsQnVzaW5lc3NUeXBlIiwiQ2xvdWRTaXRlVHlwZSIsIlNwZWNpYWxTaXRlVHlwZSIsIlNpdGVUeXBlIiwiU2l0ZVN0YXR1cyIsIlNJVEVfU1RSVUNUVVJFIiwiUEhZU0lDQUwiLCJIT01FIiwiRkVSSUFfQk9YIiwiU01PS0lOR19MT1VOR0UiLCJUQUdVQSIsIkNBRkVfVklWTyIsIlhJVkEiLCJQRVJFWk9TT19GRUxJWiIsIkVMX0hPUk5JVE8iLCJKVU5HTEVfQUNBREVNWSIsIkxBX1RSSUJVIiwiT1NBX0RFX1JJTyIsIkdBTExFUllfMTA4NCIsIkNBVF9DQUZFIiwiRUNPX0ZFUklBIiwiRVNDVUVMQV9WRVJERSIsIlBSSU5UX01BU1RFUlMiLCJDTE9VRCIsIkRJR0lUQUxfU1BBQ0UiLCJERVNLVE9QX1BDIiwiTEFQVE9QIiwiR09PR0xFX0RSSVZFIiwiR0lUSFVCIiwiTUFHSUNfRURFTiIsIk9QRU5TRUEiLCJTUEVDSUFMIiwiTk9ORSIsIldPUkxEIiwiU09MRF9JVEVNU19USElTX01PTlRIIiwiQVJDSElWRURfSElTVE9SSUNBTCIsIkRFTEVURURfSVRFTVNfVEhJU19NT05USCIsIlNJVEVfR1JPVVBTIiwiU0lURV9DQVRFR09SSUVTIiwiVGFza1R5cGUiLCJUQVNLX0NBVEVHT1JJRVMiLCJNSVNTSU9OIiwiUkVDVVJSRU5UIiwiUmVjdXJyZW50RnJlcXVlbmN5IiwiVGFza1N0YXR1cyIsIlRhc2tQcmlvcml0eSIsIkZpbmFuY2lhbFN0YXR1cyIsIkRldlNwcmludFN0YXR1cyIsIlBvaW50VHlwZSIsIkN1cnJlbmN5IiwiSXRlbVR5cGUiLCJJdGVtQ2F0ZWdvcnkiLCJJbnZlbnRvcnlUYWIiLCJJdGVtU3RhdHVzIiwiQ29sbGVjdGlvbiIsIklURU1fQ0FURUdPUklFUyIsIk1PREVMX0lURU0iLCJCVU5ETEVfSVRFTSIsIlJFU09VUkNFX0lURU0iLCJTYWxlVHlwZSIsIlNhbGVzU2Vzc2lvblN0YXR1cyIsIlNhbGVTdGF0dXMiLCJQYXltZW50TWV0aG9kIiwiUEFZTUVOVF9NRVRIT0RfQ0FURUdPUklFUyIsIlJFR1VMQVIiLCJDaGFyYWN0ZXJSb2xlIiwiQ0hBUkFDVEVSX1JPTEVfVFlQRVMiLCJJbnRlbGVjdHVhbEZ1bmN0aW9uIiwiQXR0cmlidXRlIiwiU2tpbGwiLCJTS0lMTFNfQ0FURUdPUklFUyIsIkNPR05JVElWRSIsIkNIQVJBQ1RFUiIsIlBSQUNUSUNBTCIsIkNvbW1Db2xvciIsIkxpbmtUeXBlIiwiRW50aXR5VHlwZSIsIk5vdGVDb2xvciIsIk5vdGVib29rVHlwZSIsIk5PVEVfVEFHUyIsIk9iamVjdCIsInZhbHVlcyIsImZsYXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./types/enums.ts\n");

/***/ }),

/***/ "(rsc)/./workflows/entities-logging.ts":
/*!***************************************!*\
  !*** ./workflows/entities-logging.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendBulkOperationLog: () => (/* binding */ appendBulkOperationLog),\n/* harmony export */   appendCharacterJungleCoinsLog: () => (/* binding */ appendCharacterJungleCoinsLog),\n/* harmony export */   appendEntityLog: () => (/* binding */ appendEntityLog),\n/* harmony export */   appendItemCreationLog: () => (/* binding */ appendItemCreationLog),\n/* harmony export */   appendPlayerPointsLog: () => (/* binding */ appendPlayerPointsLog),\n/* harmony export */   appendPlayerPointsUpdateLog: () => (/* binding */ appendPlayerPointsUpdateLog),\n/* harmony export */   updateEntityLogField: () => (/* binding */ updateEntityLogField)\n/* harmony export */ });\n/* harmony import */ var _data_store_kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/data-store/kv */ \"(rsc)/./data-store/kv.ts\");\n/* harmony import */ var _data_store_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/keys */ \"(rsc)/./data-store/keys.ts\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm/v4.js\");\n// workflows/entities-logging.ts\n// Append-only lifecycle logs + in-place field updates for descriptive changes\n\n\n\nasync function appendEntityLog(entityType, entityId, event, details) {\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLogKey)(entityType);\n    const list = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key) || [];\n    list.push({\n        event,\n        entityId,\n        ...details,\n        timestamp: new Date().toISOString()\n    });\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, list);\n}\nasync function updateEntityLogField(entityType, entityId, fieldName, oldValue, newValue) {\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLogKey)(entityType);\n    const list = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key) || [];\n    // Find the most recent log entry for this entity\n    for(let i = list.length - 1; i >= 0; i--){\n        if (list[i]?.entityId === entityId) {\n            list[i][fieldName] = newValue;\n            list[i].lastUpdated = new Date().toISOString();\n            break;\n        }\n    }\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, list);\n}\nasync function appendBulkOperationLog(entityType, operation, details) {\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLogKey)(entityType);\n    const list = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key) || [];\n    const event = operation === \"import\" ? \"BULK_IMPORT\" : \"BULK_EXPORT\";\n    const operationId = (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n    list.push({\n        event,\n        operationId,\n        operation,\n        count: details.count,\n        source: details.source,\n        importMode: details.importMode,\n        exportFormat: details.exportFormat,\n        extra: details.extra,\n        timestamp: new Date().toISOString()\n    });\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, list);\n}\n/**\r\n * Log item creation with source tracking\r\n * Used for items created from tasks, financial records, or directly\r\n */ async function appendItemCreationLog(item, sourceType, sourceId) {\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLogKey)(\"item\");\n    const list = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key) || [];\n    const logEntry = {\n        event: \"CREATED\",\n        entityId: item.id,\n        itemName: item.name,\n        itemType: item.type,\n        collection: item.collection,\n        status: item.status,\n        quantity: item.stock?.reduce((sum, stock)=>sum + stock.quantity, 0) || 0,\n        unitCost: item.unitCost || 0,\n        totalCost: (item.stock?.reduce((sum, stock)=>sum + stock.quantity, 0) || 0) * (item.unitCost || 0),\n        price: item.price || 0,\n        station: item.station,\n        category: item.category,\n        year: item.year,\n        sourceType,\n        sourceId,\n        description: `Item created from ${sourceType}: ${item.type} (${item.stock?.reduce((sum, stock)=>sum + stock.quantity, 0) || 0}x)`,\n        timestamp: new Date().toISOString()\n    };\n    list.push(logEntry);\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, list);\n}\n/**\r\n * Log player points award with source tracking\r\n * Used for points awarded from tasks, financial records, or sales\r\n */ async function appendPlayerPointsLog(playerId, points, sourceId, sourceType) {\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLogKey)(\"player\");\n    const list = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key) || [];\n    const logEntry = {\n        event: \"POINTS_CHANGED\",\n        entityId: playerId,\n        points: points,\n        sourceId: sourceId,\n        sourceType: sourceType,\n        description: `Points awarded from ${sourceType}: XP+${points.xp}, RP+${points.rp}, FP+${points.fp}, HP+${points.hp}`,\n        timestamp: new Date().toISOString()\n    };\n    list.push(logEntry);\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, list);\n}\n/**\r\n * Log character jungle coins award with source tracking\r\n * Used for jungle coins awarded from financial records\r\n */ async function appendCharacterJungleCoinsLog(characterId, amount, sourceId, sourceType) {\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLogKey)(\"character\");\n    const list = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key) || [];\n    const logEntry = {\n        event: \"UPDATED\",\n        entityId: characterId,\n        jungleCoins: amount,\n        sourceId: sourceId,\n        sourceType: sourceType,\n        description: `Jungle coins awarded from ${sourceType}: +${amount} J$`,\n        timestamp: new Date().toISOString()\n    };\n    list.push(logEntry);\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, list);\n}\n/**\r\n * Log player points update with change tracking\r\n * Used when task rewards change and points need to be updated\r\n */ async function appendPlayerPointsUpdateLog(playerId, oldPoints, newPoints, sourceId) {\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLogKey)(\"player\");\n    const list = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key) || [];\n    const delta = {\n        xp: newPoints.xp - oldPoints.xp,\n        rp: newPoints.rp - oldPoints.rp,\n        fp: newPoints.fp - oldPoints.fp,\n        hp: newPoints.hp - oldPoints.hp\n    };\n    const logEntry = {\n        event: \"POINTS_CHANGED\",\n        entityId: playerId,\n        oldPoints: oldPoints,\n        newPoints: newPoints,\n        delta: delta,\n        sourceId: sourceId,\n        description: `Points updated: XP${delta.xp >= 0 ? \"+\" : \"\"}${delta.xp}, RP${delta.rp >= 0 ? \"+\" : \"\"}${delta.rp}, FP${delta.fp >= 0 ? \"+\" : \"\"}${delta.fp}, HP${delta.hp >= 0 ? \"+\" : \"\"}${delta.hp}`,\n        timestamp: new Date().toISOString()\n    };\n    list.push(logEntry);\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, list);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./workflows/entities-logging.ts\n");

/***/ }),

/***/ "(rsc)/./workflows/entities-workflows/character.workflow.ts":
/*!************************************************************!*\
  !*** ./workflows/entities-workflows/character.workflow.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logCharacterEffect: () => (/* binding */ logCharacterEffect),\n/* harmony export */   logCharacterEffectFromRecord: () => (/* binding */ logCharacterEffectFromRecord),\n/* harmony export */   logCharacterUpdateFromTask: () => (/* binding */ logCharacterUpdateFromTask),\n/* harmony export */   onCharacterUpsert: () => (/* binding */ onCharacterUpsert),\n/* harmony export */   removeCharacterEffectsOnDelete: () => (/* binding */ removeCharacterEffectsOnDelete)\n/* harmony export */ });\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../entities-logging */ \"(rsc)/./workflows/entities-logging.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(rsc)/./data-store/effects-registry.ts\");\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/client-api */ \"(rsc)/./lib/client-api.ts\");\n// workflows/entities-workflows/character.workflow.ts\n// Character-specific workflow with ROLE_CHANGED event\n\n\n\n\nconst STATE_FIELDS = [\n    \"roles\",\n    \"isActive\"\n];\nconst DESCRIPTIVE_FIELDS = [\n    \"name\",\n    \"description\",\n    \"contactEmail\",\n    \"contactPhone\",\n    \"commColor\"\n];\nasync function onCharacterUpsert(character, previousCharacter) {\n    // New character creation\n    if (!previousCharacter) {\n        const effectKey = `character:${character.id}:created`;\n        if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(effectKey)) return;\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"character\", character.id, \"CREATED\", {\n            name: character.name,\n            roles: character.roles\n        });\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(effectKey);\n        return;\n    }\n    // Role changes - ROLE_CHANGED event\n    const rolesChanged = JSON.stringify(previousCharacter.roles) !== JSON.stringify(character.roles);\n    if (rolesChanged) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"character\", character.id, \"ROLE_CHANGED\", {\n            name: character.name,\n            oldRoles: previousCharacter.roles,\n            newRoles: character.roles\n        });\n    }\n    // General updates - UPDATED event\n    const hasSignificantChanges = previousCharacter.isActive !== character.isActive;\n    if (hasSignificantChanges) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"character\", character.id, \"UPDATED\", {\n            name: character.name,\n            isActive: character.isActive\n        });\n    }\n    // Descriptive changes - update in-place\n    for (const field of DESCRIPTIVE_FIELDS){\n        if (previousCharacter[field] !== character[field]) {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"character\", character.id, field, previousCharacter[field], character[field]);\n        }\n    }\n}\n/**\r\n * Remove character effects when character is deleted\r\n * Characters can have entries in character log and related links\r\n */ async function removeCharacterEffectsOnDelete(characterId) {\n    try {\n        console.log(`[removeCharacterEffectsOnDelete] Starting cleanup for character: ${characterId}`);\n        // 1. Remove all Links related to this character\n        const characterLinks = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getLinksFor({\n            type: \"character\",\n            id: characterId\n        });\n        console.log(`[removeCharacterEffectsOnDelete] Found ${characterLinks.length} links to remove`);\n        for (const link of characterLinks){\n            try {\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLink(link.id);\n                console.log(`[removeCharacterEffectsOnDelete] ✅ Removed link: ${link.linkType}`);\n            } catch (error) {\n                console.error(`[removeCharacterEffectsOnDelete] ❌ Failed to remove link ${link.id}:`, error);\n            }\n        }\n        // 2. Clear all effects for this character\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffect)(`character:${characterId}:created`);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"character\", characterId, \"\");\n        // 3. Remove log entries from character log\n        console.log(`[removeCharacterEffectsOnDelete] Starting log entry removal for character: ${characterId}`);\n        const result = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"character\", characterId);\n        if (result.success) {\n            console.log(`[removeCharacterEffectsOnDelete] ✅ Character log entries removed successfully for character: ${characterId}`);\n        } else {\n            console.error(`[removeCharacterEffectsOnDelete] Failed to remove character log entries: ${result.message}`);\n        }\n        console.log(`[removeCharacterEffectsOnDelete] ✅ Cleared effects, removed links, and removed log entries for character ${characterId}`);\n    } catch (error) {\n        console.error(\"Error removing character effects:\", error);\n    }\n}\n/**\r\n * Log character effect from task completion\r\n * This is currently a no-op since tasks don't award jungle coins anymore\r\n * J$ are only earned via Points Exchange\r\n */ async function logCharacterEffect(task) {\n    // J$ no longer awarded as task rewards - only earned via Points Exchange\n    // This function is now a no-op since tasks don't award J$ anymore\n    return;\n}\n/**\r\n * Log character effect from financial record\r\n * This logs the jungle coins awarded to the character from a financial record\r\n */ async function logCharacterEffectFromRecord(record) {\n    try {\n        console.log(`[logCharacterEffectFromRecord] Logging character effect for record: ${record.name} (${record.id})`);\n        // Only log if there are jungle coins to award\n        if (!record.jungleCoins || record.jungleCoins <= 0) {\n            console.log(\"[logCharacterEffectFromRecord] No jungle coins to log, skipping\");\n            return;\n        }\n        // Get main character ID (V0.1 constant)\n        const mainCharacterId = \"CHARACTER_ONE_ID\";\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendCharacterJungleCoinsLog)(mainCharacterId, record.jungleCoins, record.id, \"financial\");\n        console.log(`[logCharacterEffectFromRecord] ✅ Character effect logged successfully for ${record.name}`);\n    } catch (error) {\n        console.error(\"Error logging character effect from record:\", error);\n    }\n}\n/**\r\n * Log character update from task changes\r\n * This is currently a no-op since tasks don't award jungle coins anymore\r\n * J$ are only earned via Points Exchange\r\n */ async function logCharacterUpdateFromTask(task, oldTask) {\n    // J$ no longer awarded as task rewards - only earned via Points Exchange\n    // This function is now a no-op since tasks don't award J$ anymore\n    return;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./workflows/entities-workflows/character.workflow.ts\n");

/***/ }),

/***/ "(rsc)/./workflows/entities-workflows/financial.workflow.ts":
/*!************************************************************!*\
  !*** ./workflows/entities-workflows/financial.workflow.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onFinancialUpsert: () => (/* binding */ onFinancialUpsert),\n/* harmony export */   removeRecordEffectsOnDelete: () => (/* binding */ removeRecordEffectsOnDelete)\n/* harmony export */ });\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../entities-logging */ \"(rsc)/./workflows/entities-logging.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(rsc)/./data-store/effects-registry.ts\");\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/client-api */ \"(rsc)/./lib/client-api.ts\");\n/* harmony import */ var _item_creation_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../item-creation-utils */ \"(rsc)/./workflows/item-creation-utils.ts\");\n/* harmony import */ var _points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../points-rewards-utils */ \"(rsc)/./workflows/points-rewards-utils.ts\");\n/* harmony import */ var _update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../update-propagation-utils */ \"(rsc)/./workflows/update-propagation-utils.ts\");\n// workflows/entities-workflows/financial.workflow.ts\n// Financial-specific workflow with CHARGED, COLLECTED events\n\n\n\n\n\n\nconst STATE_FIELDS = [\n    \"isNotPaid\",\n    \"isNotCharged\",\n    \"isCollected\"\n];\nconst DESCRIPTIVE_FIELDS = [\n    \"name\",\n    \"description\",\n    \"cost\",\n    \"revenue\",\n    \"jungleCoins\",\n    \"notes\"\n];\nasync function onFinancialUpsert(financial, previousFinancial) {\n    // New financial record creation\n    if (!previousFinancial) {\n        const effectKey = `financial:${financial.id}:created`;\n        if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(effectKey)) return;\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"financial\", financial.id, \"CREATED\", {\n            name: financial.name,\n            type: financial.type,\n            station: financial.station\n        });\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(effectKey);\n        // Item creation from emissary fields - on record creation\n        if (financial.outputItemType && financial.outputQuantity) {\n            const itemEffectKey = `financial:${financial.id}:itemCreated`;\n            if (!await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(itemEffectKey)) {\n                console.log(`[onFinancialUpsert] Creating item from financial record emissary fields: ${financial.name}`);\n                const createdItem = await (0,_item_creation_utils__WEBPACK_IMPORTED_MODULE_3__.createItemFromRecord)(financial);\n                if (createdItem) {\n                    await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(itemEffectKey);\n                    console.log(`[onFinancialUpsert] ✅ Item created and effect marked: ${createdItem.name}`);\n                }\n            }\n        }\n        // Points awarding - on record creation with rewards\n        if (financial.rewards?.points) {\n            const pointsEffectKey = `financial:${financial.id}:pointsAwarded`;\n            if (!await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(pointsEffectKey)) {\n                console.log(`[onFinancialUpsert] Awarding points from financial record: ${financial.name}`);\n                await (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__.awardPointsToPlayer)((0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__.getMainPlayerId)(), {\n                    xp: financial.rewards.points.xp || 0,\n                    rp: financial.rewards.points.rp || 0,\n                    fp: financial.rewards.points.fp || 0,\n                    hp: financial.rewards.points.hp || 0\n                }, financial.id, \"financial\");\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(pointsEffectKey);\n                console.log(`[onFinancialUpsert] ✅ Points awarded and effect marked for record: ${financial.name}`);\n            }\n        }\n        // Jungle coins awarding - on record creation\n        if (financial.jungleCoins && financial.jungleCoins > 0) {\n            const jungleCoinsEffectKey = `financial:${financial.id}:jungleCoinsAwarded`;\n            if (!await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(jungleCoinsEffectKey)) {\n                console.log(`[onFinancialUpsert] Awarding jungle coins from financial record: ${financial.name}`);\n                await (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__.awardJungleCoinsToCharacter)((0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__.getMainCharacterId)(), financial.jungleCoins, financial.id, \"financial\");\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(jungleCoinsEffectKey);\n                console.log(`[onFinancialUpsert] ✅ Jungle coins awarded and effect marked for record: ${financial.name}`);\n            }\n        }\n        return;\n    }\n    // Payment status changes - CHARGED event\n    if (previousFinancial.isNotCharged && !financial.isNotCharged) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"financial\", financial.id, \"CHARGED\", {\n            name: financial.name,\n            revenue: financial.revenue,\n            chargedAt: new Date().toISOString()\n        });\n    }\n    // Collection status - COLLECTED event\n    if (!previousFinancial.isCollected && financial.isCollected) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"financial\", financial.id, \"COLLECTED\", {\n            name: financial.name,\n            collectedAt: new Date().toISOString()\n        });\n    }\n    // COMPREHENSIVE UPDATE PROPAGATION - when financial record properties change\n    if (previousFinancial) {\n        // Propagate to Tasks\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.hasFinancialPropsChanged)(financial, previousFinancial)) {\n            console.log(`[onFinancialUpsert] Propagating financial changes to tasks: ${financial.name}`);\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.updateTasksFromFinancialRecord)(financial, previousFinancial);\n        }\n        // Propagate to Items\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.hasOutputPropsChanged)(financial, previousFinancial)) {\n            console.log(`[onFinancialUpsert] Propagating output changes to items: ${financial.name}`);\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.updateItemsCreatedByRecord)(financial, previousFinancial);\n        }\n        // Propagate to Player (points delta)\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.hasRewardsChanged)(financial, previousFinancial)) {\n            console.log(`[onFinancialUpsert] Propagating points changes to player: ${financial.name}`);\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.updatePlayerPointsFromSource)(\"financial\", financial, previousFinancial);\n        }\n        // Propagate to Character (jungle coins delta)\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.hasJungleCoinsChanged)(financial, previousFinancial)) {\n            console.log(`[onFinancialUpsert] Propagating jungle coins changes to character: ${financial.name}`);\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.updateCharacterJungleCoinsFromRecord)(financial, previousFinancial);\n        }\n    }\n    // Descriptive changes - update in-place\n    for (const field of DESCRIPTIVE_FIELDS){\n        if (previousFinancial[field] !== financial[field]) {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"financial\", financial.id, field, previousFinancial[field], financial[field]);\n        }\n    }\n}\n/**\r\n * Remove financial record effects when record is deleted\r\n * Financial records can have entries in multiple logs: financials, character, player, items\r\n */ async function removeRecordEffectsOnDelete(recordId) {\n    try {\n        console.log(`[removeRecordEffectsOnDelete] Starting cleanup for record: ${recordId}`);\n        // 1. Remove items created by this record\n        await (0,_item_creation_utils__WEBPACK_IMPORTED_MODULE_3__.removeItemsCreatedByRecord)(recordId);\n        // 2. Remove player points that were awarded by this record (if points were badly given)\n        await removePlayerPointsFromRecord(recordId);\n        // 3. Remove jungle coins that were awarded by this record\n        await removeJungleCoinsFromRecord(recordId);\n        // 4. Remove all Links related to this record\n        const recordLinks = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getLinksFor({\n            type: \"financial\",\n            id: recordId\n        });\n        console.log(`[removeRecordEffectsOnDelete] Found ${recordLinks.length} links to remove`);\n        for (const link of recordLinks){\n            try {\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLink(link.id);\n                console.log(`[removeRecordEffectsOnDelete] ✅ Removed link: ${link.linkType}`);\n            } catch (error) {\n                console.error(`[removeRecordEffectsOnDelete] ❌ Failed to remove link ${link.id}:`, error);\n            }\n        }\n        // 5. Clear effects registry\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffect)(`financial:${recordId}:created`);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffect)(`financial:${recordId}:itemCreated`);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffect)(`financial:${recordId}:pointsAwarded`);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffect)(`financial:${recordId}:jungleCoinsAwarded`);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"financial\", recordId, \"pointsLogged:\");\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"financial\", recordId, \"financialLogged:\");\n        // 6. Remove log entries from all relevant logs\n        console.log(`[removeRecordEffectsOnDelete] Starting log entry removal for record: ${recordId}`);\n        const removals = await Promise.all([\n            _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"financials\", recordId).then((r)=>{\n                console.log(`[removeRecordEffectsOnDelete] Financials log removal result:`, r);\n                return r;\n            }).catch((e)=>({\n                    success: false,\n                    message: String(e)\n                })),\n            _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"character\", recordId).then((r)=>{\n                console.log(`[removeRecordEffectsOnDelete] Character log removal result:`, r);\n                return r;\n            }).catch((e)=>({\n                    success: false,\n                    message: String(e)\n                })),\n            _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"player\", recordId).then((r)=>{\n                console.log(`[removeRecordEffectsOnDelete] Player log removal result:`, r);\n                return r;\n            }).catch((e)=>({\n                    success: false,\n                    message: String(e)\n                })),\n            _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"items\", recordId).then((r)=>{\n                console.log(`[removeRecordEffectsOnDelete] Items log removal result:`, r);\n                return r;\n            }).catch((e)=>({\n                    success: false,\n                    message: String(e)\n                }))\n        ]);\n        console.log(`[removeRecordEffectsOnDelete] All removal results:`, removals);\n        const failed = removals.filter((r)=>!r.success);\n        if (failed.length > 0) {\n            console.error(\"[removeRecordEffectsOnDelete] Some log removals failed:\", failed);\n        } else {\n            console.log(`[removeRecordEffectsOnDelete] ✅ All log entries removed successfully for record: ${recordId}`);\n        }\n        console.log(`[removeRecordEffectsOnDelete] ✅ Cleared effects, removed links, deleted created items, and removed log entries for record ${recordId}`);\n    } catch (error) {\n        console.error(\"Error removing record effects:\", error);\n    }\n}\n/**\r\n * Remove player points that were awarded by a specific financial record\r\n * This is used when rolling back a record that incorrectly awarded points\r\n */ async function removePlayerPointsFromRecord(recordId) {\n    try {\n        console.log(`[removePlayerPointsFromRecord] Removing points for record: ${recordId}`);\n        // Get the record to find what points were awarded\n        const records = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getFinancialRecords();\n        const record = records.find((r)=>r.id === recordId);\n        if (!record || !record.rewards?.points) {\n            console.log(`[removePlayerPointsFromRecord] Record ${recordId} has no points to remove`);\n            return;\n        }\n        // Get the main player\n        const mainPlayerId = (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__.getMainPlayerId)();\n        const players = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getPlayers();\n        const mainPlayer = players.find((p)=>p.id === mainPlayerId);\n        if (!mainPlayer) {\n            console.log(`[removePlayerPointsFromRecord] Main player not found, skipping points removal`);\n            return;\n        }\n        // Check if any points were actually awarded\n        const pointsToRemove = record.rewards.points;\n        const hasPoints = (pointsToRemove.xp || 0) > 0 || (pointsToRemove.rp || 0) > 0 || (pointsToRemove.fp || 0) > 0 || (pointsToRemove.hp || 0) > 0;\n        if (!hasPoints) {\n            console.log(`[removePlayerPointsFromRecord] No points to remove from record ${recordId}`);\n            return;\n        }\n        // Remove the points from the player\n        await (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__.removePointsFromPlayer)(mainPlayerId, {\n            xp: pointsToRemove.xp || 0,\n            rp: pointsToRemove.rp || 0,\n            fp: pointsToRemove.fp || 0,\n            hp: pointsToRemove.hp || 0\n        });\n        console.log(`[removePlayerPointsFromRecord] ✅ Removed points from player: ${JSON.stringify(pointsToRemove)}`);\n    } catch (error) {\n        console.error(`[removePlayerPointsFromRecord] ❌ Failed to remove player points for record ${recordId}:`, error);\n    }\n}\n/**\r\n * Remove jungle coins that were awarded by a specific financial record\r\n * This is used when rolling back a record that incorrectly awarded jungle coins\r\n */ async function removeJungleCoinsFromRecord(recordId) {\n    try {\n        console.log(`[removeJungleCoinsFromRecord] Removing jungle coins for record: ${recordId}`);\n        // Get the record to find what jungle coins were awarded\n        const records = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getFinancialRecords();\n        const record = records.find((r)=>r.id === recordId);\n        if (!record || !record.jungleCoins || record.jungleCoins <= 0) {\n            console.log(`[removeJungleCoinsFromRecord] Record ${recordId} has no jungle coins to remove`);\n            return;\n        }\n        // Get the main character\n        const mainCharacterId = (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__.getMainCharacterId)();\n        const characters = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getCharacters();\n        const mainCharacter = characters.find((c)=>c.id === mainCharacterId);\n        if (!mainCharacter) {\n            console.log(`[removeJungleCoinsFromRecord] Main character not found, skipping jungle coins removal`);\n            return;\n        }\n        // Remove the jungle coins from the character\n        await (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__.removeJungleCoinsFromCharacter)(mainCharacterId, record.jungleCoins);\n        console.log(`[removeJungleCoinsFromRecord] ✅ Removed ${record.jungleCoins} jungle coins from character`);\n    } catch (error) {\n        console.error(`[removeJungleCoinsFromRecord] ❌ Failed to remove jungle coins for record ${recordId}:`, error);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./workflows/entities-workflows/financial.workflow.ts\n");

/***/ }),

/***/ "(rsc)/./workflows/entities-workflows/item.workflow.ts":
/*!*******************************************************!*\
  !*** ./workflows/entities-workflows/item.workflow.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logItemCreationForItem: () => (/* binding */ logItemCreationForItem),\n/* harmony export */   onItemUpsert: () => (/* binding */ onItemUpsert),\n/* harmony export */   processItemCreationEffects: () => (/* binding */ processItemCreationEffects),\n/* harmony export */   removeItemEffectsOnDelete: () => (/* binding */ removeItemEffectsOnDelete),\n/* harmony export */   updateAllItemLogEntries: () => (/* binding */ updateAllItemLogEntries),\n/* harmony export */   updateItemLogEntryForItem: () => (/* binding */ updateItemLogEntryForItem)\n/* harmony export */ });\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../entities-logging */ \"(rsc)/./workflows/entities-logging.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(rsc)/./data-store/effects-registry.ts\");\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/client-api */ \"(rsc)/./lib/client-api.ts\");\n// workflows/entities-workflows/item.workflow.ts\n// Item-specific workflow with MOVED, SOLD, COLLECTED events\n\n\n\nconst STATE_FIELDS = [\n    \"status\",\n    \"stock\",\n    \"quantitySold\",\n    \"isCollected\"\n];\nconst DESCRIPTIVE_FIELDS = [\n    \"name\",\n    \"description\",\n    \"price\",\n    \"unitCost\",\n    \"additionalCost\",\n    \"value\"\n];\nasync function onItemUpsert(item, previousItem) {\n    // New item creation\n    if (!previousItem) {\n        const effectKey = `item:${item.id}:created`;\n        if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(effectKey)) return;\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"item\", item.id, \"CREATED\", {\n            name: item.name,\n            type: item.type,\n            station: item.station\n        });\n        // Log item creation with source tracking\n        const sourceType = item.sourceTaskId ? \"task\" : item.sourceRecordId ? \"record\" : \"direct\";\n        const sourceId = item.sourceTaskId || item.sourceRecordId || undefined;\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendItemCreationLog)(item, sourceType, sourceId);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(effectKey);\n        return;\n    }\n    // Stock changes - MOVED event\n    const stockChanged = JSON.stringify(previousItem.stock) !== JSON.stringify(item.stock);\n    if (stockChanged) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"item\", item.id, \"MOVED\", {\n            name: item.name,\n            oldStock: previousItem.stock,\n            newStock: item.stock\n        });\n    }\n    // Quantity sold changes - SOLD event\n    if (previousItem.quantitySold !== item.quantitySold && item.quantitySold > previousItem.quantitySold) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"item\", item.id, \"SOLD\", {\n            name: item.name,\n            quantitySold: item.quantitySold,\n            oldQuantitySold: previousItem.quantitySold\n        });\n    }\n    // Collection status - COLLECTED event\n    if (!previousItem.isCollected && item.isCollected) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"item\", item.id, \"COLLECTED\", {\n            name: item.name,\n            collectedAt: new Date().toISOString()\n        });\n    }\n    // Descriptive changes - update in-place\n    for (const field of DESCRIPTIVE_FIELDS){\n        if (previousItem[field] !== item[field]) {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"item\", item.id, field, previousItem[field], item[field]);\n        }\n    }\n}\n/**\r\n * Remove item effects when item is deleted\r\n * Items can have entries in items log and related links\r\n */ async function removeItemEffectsOnDelete(itemId) {\n    try {\n        console.log(`[removeItemEffectsOnDelete] Starting cleanup for item: ${itemId}`);\n        // 1. Remove all Links related to this item\n        const itemLinks = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getLinksFor({\n            type: \"item\",\n            id: itemId\n        });\n        console.log(`[removeItemEffectsOnDelete] Found ${itemLinks.length} links to remove`);\n        for (const link of itemLinks){\n            try {\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLink(link.id);\n                console.log(`[removeItemEffectsOnDelete] ✅ Removed link: ${link.linkType}`);\n            } catch (error) {\n                console.error(`[removeItemEffectsOnDelete] ❌ Failed to remove link ${link.id}:`, error);\n            }\n        }\n        // 2. Clear all effects for this item\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffect)(`item:${itemId}:created`);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"item\", itemId, \"financialLogged:\");\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"item\", itemId, \"pointsLogged:\");\n        // 3. Remove log entries from items log only (Items don't have financial/player effects)\n        console.log(`[removeItemEffectsOnDelete] Starting log entry removal for item: ${itemId}`);\n        const result = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"items\", itemId);\n        if (result.success) {\n            console.log(`[removeItemEffectsOnDelete] ✅ Item log entries removed successfully for item: ${itemId}`);\n        } else {\n            console.error(`[removeItemEffectsOnDelete] Failed to remove item log entries: ${result.message}`);\n        }\n        console.log(`[removeItemEffectsOnDelete] ✅ Cleared effects, removed links, and removed log entries for item ${itemId}`);\n    } catch (error) {\n        console.error(\"Error removing item effects:\", error);\n    }\n}\n/**\r\n * Process item creation effects when item is created\r\n * Handles side effects when item is created directly (not from task/record)\r\n */ async function processItemCreationEffects(item) {\n    console.log(`[processItemCreationEffects] Processing item creation effects for: ${item.name} (${item.id})`);\n    // Log item creation once (with idempotency)\n    const itemCreated = await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(`item:${item.id}:itemCreated`);\n    if (!itemCreated) {\n        await logItemCreationForItem(item);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(`item:${item.id}:itemCreated`);\n    }\n// Items created from Item Modal have NO financial effects\n// Items are just inventory/assets - financial effects come from Tasks/Records\n// This is different from Tasks/Records which have cost/revenue properties\n}\n/**\r\n * Log item creation when item is created directly (not from task/record)\r\n */ async function logItemCreationForItem(item) {\n    try {\n        console.log(`[logItemCreationForItem] Logging direct item creation: ${item.name} (${item.id})`);\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendItemCreationLog)(item, \"direct\");\n        console.log(`[logItemCreationForItem] ✅ Direct item creation logged successfully for ${item.name}`);\n    } catch (error) {\n        console.error(\"Error logging direct item creation:\", error);\n    }\n}\n/**\r\n * Update item log entry when item properties change\r\n * This function updates existing item log entries with new item data\r\n */ async function updateItemLogEntryForItem(item, dispatchEvents = true) {\n    try {\n        const updates = {\n            itemName: item.name,\n            itemType: item.type,\n            collection: item.collection,\n            status: item.status,\n            quantity: item.stock?.reduce((sum, stock)=>sum + stock.quantity, 0) || 0,\n            unitCost: item.unitCost || 0,\n            price: item.price || 0,\n            station: item.station,\n            year: item.year,\n            description: `Item created directly: ${item.type} (${item.stock?.reduce((sum, stock)=>sum + stock.quantity, 0) || 0}x)`\n        };\n        // Update the most recent log entry for this item\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"item\", item.id, \"itemName\", \"\", item.name);\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"item\", item.id, \"itemType\", \"\", item.type);\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"item\", item.id, \"status\", \"\", item.status);\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"item\", item.id, \"quantity\", \"\", item.stock?.reduce((sum, stock)=>sum + stock.quantity, 0) || 0);\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"item\", item.id, \"unitCost\", \"\", item.unitCost || 0);\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"item\", item.id, \"price\", \"\", item.price || 0);\n        console.log(`[updateItemLogEntryForItem] ✅ Item log entry updated successfully for ${item.name}`);\n        // Dispatch event to notify frontend of items update\n        if (dispatchEvents && \"undefined\" !== \"undefined\") {}\n    } catch (error) {\n        console.error(\"Error updating item log entry:\", error);\n    }\n}\n/**\r\n * Update all log entries when item properties change\r\n * This function updates existing log entries across all log types with new item data\r\n */ async function updateAllItemLogEntries(item, dispatchEvents = true) {\n    try {\n        console.log(`[updateAllItemLogEntries] Updating all log entries for item: ${item.name} (${item.id})`);\n        // Update item log entries\n        await updateItemLogEntryForItem(item, false);\n        // Dispatch event to notify frontend of items update\n        if (dispatchEvents && \"undefined\" !== \"undefined\") {}\n        console.log(`[updateAllItemLogEntries] ✅ All log entries updated successfully for ${item.name}`);\n    } catch (error) {\n        console.error(\"Error updating all item log entries:\", error);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./workflows/entities-workflows/item.workflow.ts\n");

/***/ }),

/***/ "(rsc)/./workflows/entities-workflows/player.workflow.ts":
/*!*********************************************************!*\
  !*** ./workflows/entities-workflows/player.workflow.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logPlayerEffect: () => (/* binding */ logPlayerEffect),\n/* harmony export */   logPlayerEffectFromRecord: () => (/* binding */ logPlayerEffectFromRecord),\n/* harmony export */   logPlayerUpdateFromTask: () => (/* binding */ logPlayerUpdateFromTask),\n/* harmony export */   onPlayerUpsert: () => (/* binding */ onPlayerUpsert),\n/* harmony export */   removePlayerEffectsOnDelete: () => (/* binding */ removePlayerEffectsOnDelete),\n/* harmony export */   updatePlayerPointsFromTask: () => (/* binding */ updatePlayerPointsFromTask)\n/* harmony export */ });\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../entities-logging */ \"(rsc)/./workflows/entities-logging.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(rsc)/./data-store/effects-registry.ts\");\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/client-api */ \"(rsc)/./lib/client-api.ts\");\n// workflows/entities-workflows/player.workflow.ts\n// Player-specific workflow with LEVEL_UP, POINTS_CHANGED events\n\n\n\n\nconst STATE_FIELDS = [\n    \"level\",\n    \"totalPoints\",\n    \"points\",\n    \"isActive\"\n];\nconst DESCRIPTIVE_FIELDS = [\n    \"name\",\n    \"email\"\n];\nasync function onPlayerUpsert(player, previousPlayer) {\n    // New player creation\n    if (!previousPlayer) {\n        const effectKey = `player:${player.id}:created`;\n        if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(effectKey)) return;\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"player\", player.id, \"CREATED\", {\n            name: player.name,\n            level: player.level\n        });\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(effectKey);\n        return;\n    }\n    // Level up - LEVEL_UP event\n    if (previousPlayer.level < player.level) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"player\", player.id, \"LEVEL_UP\", {\n            name: player.name,\n            oldLevel: previousPlayer.level,\n            newLevel: player.level\n        });\n    }\n    // Points changes - POINTS_CHANGED event\n    const pointsChanged = JSON.stringify(previousPlayer.totalPoints) !== JSON.stringify(player.totalPoints) || JSON.stringify(previousPlayer.points) !== JSON.stringify(player.points);\n    if (pointsChanged) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"player\", player.id, \"POINTS_CHANGED\", {\n            name: player.name,\n            totalPoints: player.totalPoints,\n            points: player.points\n        });\n    }\n    // General updates - UPDATED event\n    const hasSignificantChanges = previousPlayer.isActive !== player.isActive;\n    if (hasSignificantChanges) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"player\", player.id, \"UPDATED\", {\n            name: player.name,\n            isActive: player.isActive\n        });\n    }\n    // Descriptive changes - update in-place\n    for (const field of DESCRIPTIVE_FIELDS){\n        if (previousPlayer[field] !== player[field]) {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"player\", player.id, field, previousPlayer[field], player[field]);\n        }\n    }\n}\n/**\r\n * Remove player effects when player is deleted\r\n * Players can have entries in player log and related links\r\n */ async function removePlayerEffectsOnDelete(playerId) {\n    try {\n        console.log(`[removePlayerEffectsOnDelete] Starting cleanup for player: ${playerId}`);\n        // 1. Remove all Links related to this player\n        const playerLinks = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getLinksFor({\n            type: \"player\",\n            id: playerId\n        });\n        console.log(`[removePlayerEffectsOnDelete] Found ${playerLinks.length} links to remove`);\n        for (const link of playerLinks){\n            try {\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLink(link.id);\n                console.log(`[removePlayerEffectsOnDelete] ✅ Removed link: ${link.linkType}`);\n            } catch (error) {\n                console.error(`[removePlayerEffectsOnDelete] ❌ Failed to remove link ${link.id}:`, error);\n            }\n        }\n        // 2. Clear all effects for this player\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffect)(`player:${playerId}:created`);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"player\", playerId, \"\");\n        // 3. Remove log entries from player log\n        console.log(`[removePlayerEffectsOnDelete] Starting log entry removal for player: ${playerId}`);\n        const result = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"player\", playerId);\n        if (result.success) {\n            console.log(`[removePlayerEffectsOnDelete] ✅ Player log entries removed successfully for player: ${playerId}`);\n        } else {\n            console.error(`[removePlayerEffectsOnDelete] Failed to remove player log entries: ${result.message}`);\n        }\n        console.log(`[removePlayerEffectsOnDelete] ✅ Cleared effects, removed links, and removed log entries for player ${playerId}`);\n    } catch (error) {\n        console.error(\"Error removing player effects:\", error);\n    }\n}\n/**\r\n * Log player effect from task completion\r\n * This logs the points awarded to the player from completing a task\r\n */ async function logPlayerEffect(task) {\n    try {\n        console.log(`[logPlayerEffect] Logging player effect for task: ${task.name} (${task.id})`);\n        // Only log if there are points to award\n        const hasPoints = task.rewards?.points && ((task.rewards.points.xp || 0) > 0 || (task.rewards.points.rp || 0) > 0 || (task.rewards.points.fp || 0) > 0 || (task.rewards.points.hp || 0) > 0);\n        if (!hasPoints) {\n            console.log(\"[logPlayerEffect] No points to log, skipping\");\n            return;\n        }\n        // Get main player ID (V0.1 constant)\n        const mainPlayerId = \"PLAYER_ONE_ID\";\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendPlayerPointsLog)(mainPlayerId, {\n            xp: task.rewards.points.xp || 0,\n            rp: task.rewards.points.rp || 0,\n            fp: task.rewards.points.fp || 0,\n            hp: task.rewards.points.hp || 0\n        }, task.id, \"task\");\n        console.log(`[logPlayerEffect] ✅ Player effect logged successfully for ${task.name}`);\n    } catch (error) {\n        console.error(\"Error logging player effect:\", error);\n    }\n}\n/**\r\n * Log player effect from financial record\r\n * This logs the points awarded to the player from a financial record\r\n */ async function logPlayerEffectFromRecord(record) {\n    try {\n        console.log(`[logPlayerEffectFromRecord] Logging player effect for record: ${record.name} (${record.id})`);\n        // Only log if there are points to award\n        const hasPoints = record.rewards?.points && ((record.rewards.points.xp || 0) > 0 || (record.rewards.points.rp || 0) > 0 || (record.rewards.points.fp || 0) > 0 || (record.rewards.points.hp || 0) > 0);\n        if (!hasPoints) {\n            console.log(\"[logPlayerEffectFromRecord] No points to log, skipping\");\n            return;\n        }\n        // Get main player ID (V0.1 constant)\n        const mainPlayerId = \"PLAYER_ONE_ID\";\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendPlayerPointsLog)(mainPlayerId, {\n            xp: record.rewards?.points?.xp || 0,\n            rp: record.rewards?.points?.rp || 0,\n            fp: record.rewards?.points?.fp || 0,\n            hp: record.rewards?.points?.hp || 0\n        }, record.id, \"financial\");\n        console.log(`[logPlayerEffectFromRecord] ✅ Player effect logged successfully for ${record.name}`);\n    } catch (error) {\n        console.error(\"Error logging player effect from record:\", error);\n    }\n}\n/**\r\n * Log player update from task changes\r\n * This logs when task rewards change and player points need to be updated\r\n */ async function logPlayerUpdateFromTask(task, oldTask) {\n    try {\n        console.log(`[logPlayerUpdateFromTask] Logging player update for task: ${task.name} (${task.id})`);\n        const oldRewards = oldTask.rewards?.points || {\n            xp: 0,\n            rp: 0,\n            fp: 0,\n            hp: 0\n        };\n        const newRewards = task.rewards?.points || {\n            xp: 0,\n            rp: 0,\n            fp: 0,\n            hp: 0\n        };\n        // Check if rewards actually changed\n        const rewardsChanged = JSON.stringify(oldRewards) !== JSON.stringify(newRewards);\n        if (!rewardsChanged) {\n            console.log(\"[logPlayerUpdateFromTask] No reward changes to log, skipping\");\n            return;\n        }\n        // Get main player ID (V0.1 constant)\n        const mainPlayerId = \"PLAYER_ONE_ID\";\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendPlayerPointsUpdateLog)(mainPlayerId, {\n            xp: oldRewards.xp || 0,\n            rp: oldRewards.rp || 0,\n            fp: oldRewards.fp || 0,\n            hp: oldRewards.hp || 0\n        }, {\n            xp: newRewards.xp || 0,\n            rp: newRewards.rp || 0,\n            fp: newRewards.fp || 0,\n            hp: newRewards.hp || 0\n        }, task.id);\n        console.log(`[logPlayerUpdateFromTask] ✅ Player update logged successfully for ${task.name}`);\n    } catch (error) {\n        console.error(\"Error logging player update from task:\", error);\n    }\n}\n/**\r\n * Update player points from task changes\r\n * This updates the player's points when task rewards change\r\n */ async function updatePlayerPointsFromTask(task, oldTask) {\n    try {\n        console.log(`[updatePlayerPointsFromTask] Updating player points for task: ${task.name} (${task.id})`);\n        const oldRewards = oldTask.rewards?.points || {\n            xp: 0,\n            rp: 0,\n            fp: 0,\n            hp: 0\n        };\n        const newRewards = task.rewards?.points || {\n            xp: 0,\n            rp: 0,\n            fp: 0,\n            hp: 0\n        };\n        // Calculate point delta\n        const delta = {\n            xp: (newRewards.xp || 0) - (oldRewards.xp || 0),\n            rp: (newRewards.rp || 0) - (oldRewards.rp || 0),\n            fp: (newRewards.fp || 0) - (oldRewards.fp || 0),\n            hp: (newRewards.hp || 0) - (oldRewards.hp || 0)\n        };\n        // Check if there are any changes\n        const hasChanges = delta.xp !== 0 || delta.rp !== 0 || delta.fp !== 0 || delta.hp !== 0;\n        if (!hasChanges) {\n            console.log(\"[updatePlayerPointsFromTask] No point changes to apply, skipping\");\n            return;\n        }\n        // Get main player\n        const mainPlayerId = \"PLAYER_ONE_ID\";\n        const players = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getPlayers();\n        const mainPlayer = players.find((p)=>p.id === mainPlayerId);\n        if (!mainPlayer) {\n            console.log(\"[updatePlayerPointsFromTask] Main player not found, skipping\");\n            return;\n        }\n        // Apply delta to player points\n        const updatedPlayer = {\n            ...mainPlayer,\n            points: {\n                xp: Math.max(0, (mainPlayer.points?.xp || 0) + delta.xp),\n                rp: Math.max(0, (mainPlayer.points?.rp || 0) + delta.rp),\n                fp: Math.max(0, (mainPlayer.points?.fp || 0) + delta.fp),\n                hp: Math.max(0, (mainPlayer.points?.hp || 0) + delta.hp)\n            },\n            totalPoints: {\n                xp: Math.max(0, (mainPlayer.totalPoints?.xp || 0) + delta.xp),\n                rp: Math.max(0, (mainPlayer.totalPoints?.rp || 0) + delta.rp),\n                fp: Math.max(0, (mainPlayer.totalPoints?.fp || 0) + delta.fp),\n                hp: Math.max(0, (mainPlayer.totalPoints?.hp || 0) + delta.hp)\n            },\n            updatedAt: new Date()\n        };\n        // Store the updated player\n        console.log(`[updatePlayerPointsFromTask] Applying point delta:`, delta);\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.upsertPlayer(updatedPlayer);\n        console.log(`[updatePlayerPointsFromTask] ✅ Player points updated successfully`);\n    } catch (error) {\n        console.error(\"Error updating player points from task:\", error);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./workflows/entities-workflows/player.workflow.ts\n");

/***/ }),

/***/ "(rsc)/./workflows/entities-workflows/sale.workflow.ts":
/*!*******************************************************!*\
  !*** ./workflows/entities-workflows/sale.workflow.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onSaleUpsert: () => (/* binding */ onSaleUpsert),\n/* harmony export */   removeSaleEffectsOnDelete: () => (/* binding */ removeSaleEffectsOnDelete)\n/* harmony export */ });\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../entities-logging */ \"(rsc)/./workflows/entities-logging.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(rsc)/./data-store/effects-registry.ts\");\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/client-api */ \"(rsc)/./lib/client-api.ts\");\n/* harmony import */ var _points_rewards_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../points-rewards-utils */ \"(rsc)/./workflows/points-rewards-utils.ts\");\n/* harmony import */ var _sale_line_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../sale-line-utils */ \"(rsc)/./workflows/sale-line-utils.ts\");\n/* harmony import */ var _update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../update-propagation-utils */ \"(rsc)/./workflows/update-propagation-utils.ts\");\n// workflows/entities-workflows/sale.workflow.ts\n// Sale-specific workflow with CHARGED, CANCELLED, COLLECTED events\n\n\n\n\n\n\nconst STATE_FIELDS = [\n    \"status\",\n    \"isNotPaid\",\n    \"isNotCharged\",\n    \"isCollected\",\n    \"postedAt\",\n    \"doneAt\",\n    \"cancelledAt\"\n];\nconst DESCRIPTIVE_FIELDS = [\n    \"counterpartyName\",\n    \"totals\"\n];\nasync function onSaleUpsert(sale, previousSale) {\n    // New sale creation\n    if (!previousSale) {\n        const effectKey = `sale:${sale.id}:created`;\n        if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(effectKey)) return;\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"sale\", sale.id, \"CREATED\", {\n            type: sale.type,\n            status: sale.status,\n            counterpartyName: sale.counterpartyName,\n            totalRevenue: sale.totals.totalRevenue\n        });\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(effectKey);\n        // Points awarding - on sale creation with revenue\n        if (sale.totals.totalRevenue > 0) {\n            const pointsEffectKey = `sale:${sale.id}:pointsAwarded`;\n            if (!await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(pointsEffectKey)) {\n                console.log(`[onSaleUpsert] Awarding points from sale revenue: ${sale.counterpartyName}`);\n                const points = (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_3__.calculatePointsFromRevenue)(sale.totals.totalRevenue);\n                await (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_3__.awardPointsToPlayer)((0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_3__.getMainPlayerId)(), points, sale.id, \"sale\");\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(pointsEffectKey);\n                console.log(`[onSaleUpsert] ✅ Points awarded and effect marked for sale: ${sale.counterpartyName}`);\n            }\n        }\n        return;\n    }\n    // Status changes\n    if (previousSale.status !== sale.status) {\n        if (sale.status === \"CHARGED\") {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"sale\", sale.id, \"CHARGED\", {\n                counterpartyName: sale.counterpartyName,\n                totalRevenue: sale.totals.totalRevenue,\n                chargedAt: new Date().toISOString()\n            });\n            // Process sale lines when sale is charged\n            const linesProcessedKey = `sale:${sale.id}:linesProcessed`;\n            if (!await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(linesProcessedKey)) {\n                console.log(`[onSaleUpsert] Processing sale lines for charged sale: ${sale.counterpartyName}`);\n                await (0,_sale_line_utils__WEBPACK_IMPORTED_MODULE_4__.processSaleLines)(sale);\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(linesProcessedKey);\n                console.log(`[onSaleUpsert] ✅ Sale lines processed and effect marked: ${sale.counterpartyName}`);\n            }\n        } else if (sale.status === \"CANCELLED\") {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"sale\", sale.id, \"CANCELLED\", {\n                counterpartyName: sale.counterpartyName,\n                cancelledAt: sale.cancelledAt || new Date().toISOString()\n            });\n        }\n    }\n    // Collection status - COLLECTED event\n    if (!previousSale.isCollected && sale.isCollected) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"sale\", sale.id, \"COLLECTED\", {\n            counterpartyName: sale.counterpartyName,\n            collectedAt: new Date().toISOString()\n        });\n    }\n    // COMPREHENSIVE UPDATE PROPAGATION - when sale properties change\n    if (previousSale) {\n        // Propagate to Financial Records\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.hasRevenueChanged)(sale, previousSale)) {\n            console.log(`[onSaleUpsert] Propagating revenue changes to financial records: ${sale.counterpartyName}`);\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.updateFinancialRecordsFromSale)(sale, previousSale);\n        }\n        // Propagate to Items (stock updates)\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.hasLinesChanged)(sale, previousSale)) {\n            console.log(`[onSaleUpsert] Propagating line changes to items: ${sale.counterpartyName}`);\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.updateItemsFromSale)(sale, previousSale);\n        }\n        // Propagate to Player (points delta from revenue)\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.hasRevenueChanged)(sale, previousSale)) {\n            console.log(`[onSaleUpsert] Propagating revenue changes to player points: ${sale.counterpartyName}`);\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.updatePlayerPointsFromSource)(\"sale\", sale, previousSale);\n        }\n    }\n    // Descriptive changes - update in-place\n    for (const field of DESCRIPTIVE_FIELDS){\n        if (previousSale[field] !== sale[field]) {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"sale\", sale.id, field, previousSale[field], sale[field]);\n        }\n    }\n}\n/**\r\n * Remove sale effects when sale is deleted\r\n * Sales can have entries in multiple logs: sales, financials, character, items\r\n */ async function removeSaleEffectsOnDelete(saleId) {\n    try {\n        console.log(`[removeSaleEffectsOnDelete] Starting cleanup for sale: ${saleId}`);\n        // 1. Remove player points that were awarded by this sale (if points were badly given)\n        await removePlayerPointsFromSale(saleId);\n        // 2. Remove all Links related to this sale\n        const saleLinks = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getLinksFor({\n            type: \"sale\",\n            id: saleId\n        });\n        console.log(`[removeSaleEffectsOnDelete] Found ${saleLinks.length} links to remove`);\n        for (const link of saleLinks){\n            try {\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLink(link.id);\n                console.log(`[removeSaleEffectsOnDelete] ✅ Removed link: ${link.linkType}`);\n            } catch (error) {\n                console.error(`[removeSaleEffectsOnDelete] ❌ Failed to remove link ${link.id}:`, error);\n            }\n        }\n        // 3. Clear effects registry\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"sale\", saleId, \"sale:\");\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"sale\", saleId, \"pointsAwarded:\");\n        // 4. Remove log entries from all relevant logs\n        console.log(`[removeSaleEffectsOnDelete] Starting log entry removal for sale: ${saleId}`);\n        const removals = await Promise.all([\n            _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"sales\", saleId).then((r)=>{\n                console.log(`[removeSaleEffectsOnDelete] Sales log removal result:`, r);\n                return r;\n            }).catch((e)=>({\n                    success: false,\n                    message: String(e)\n                })),\n            _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"financials\", saleId).then((r)=>{\n                console.log(`[removeSaleEffectsOnDelete] Financials log removal result:`, r);\n                return r;\n            }).catch((e)=>({\n                    success: false,\n                    message: String(e)\n                })),\n            _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"character\", saleId).then((r)=>{\n                console.log(`[removeSaleEffectsOnDelete] Character log removal result:`, r);\n                return r;\n            }).catch((e)=>({\n                    success: false,\n                    message: String(e)\n                })),\n            _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"items\", saleId).then((r)=>{\n                console.log(`[removeSaleEffectsOnDelete] Items log removal result:`, r);\n                return r;\n            }).catch((e)=>({\n                    success: false,\n                    message: String(e)\n                }))\n        ]);\n        console.log(`[removeSaleEffectsOnDelete] All removal results:`, removals);\n        const failed = removals.filter((r)=>!r.success);\n        if (failed.length > 0) {\n            console.error(\"[removeSaleEffectsOnDelete] Some log removals failed:\", failed);\n        } else {\n            console.log(`[removeSaleEffectsOnDelete] ✅ All log entries removed successfully for sale: ${saleId}`);\n        }\n        console.log(`[removeSaleEffectsOnDelete] ✅ Cleared effects, removed links, and removed log entries for sale ${saleId}`);\n    } catch (error) {\n        console.error(\"Error removing sale effects:\", error);\n    }\n}\n/**\r\n * Remove player points that were awarded by a specific sale\r\n * This is used when rolling back a sale that incorrectly awarded points\r\n */ async function removePlayerPointsFromSale(saleId) {\n    try {\n        console.log(`[removePlayerPointsFromSale] Removing points for sale: ${saleId}`);\n        // Get the sale to find what points were awarded\n        const sales = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getSales();\n        const sale = sales.find((s)=>s.id === saleId);\n        if (!sale || sale.totals.totalRevenue <= 0) {\n            console.log(`[removePlayerPointsFromSale] Sale ${saleId} has no revenue to remove points from`);\n            return;\n        }\n        // Get the main player\n        const mainPlayerId = (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_3__.getMainPlayerId)();\n        const players = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getPlayers();\n        const mainPlayer = players.find((p)=>p.id === mainPlayerId);\n        if (!mainPlayer) {\n            console.log(`[removePlayerPointsFromSale] Main player not found, skipping points removal`);\n            return;\n        }\n        // Calculate points to remove based on sale revenue (1 Point = $100)\n        const pointsToRemove = (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_3__.calculatePointsFromRevenue)(sale.totals.totalRevenue);\n        // Check if any points were actually awarded\n        const hasPoints = (pointsToRemove.xp || 0) > 0 || (pointsToRemove.rp || 0) > 0 || (pointsToRemove.fp || 0) > 0 || (pointsToRemove.hp || 0) > 0;\n        if (!hasPoints) {\n            console.log(`[removePlayerPointsFromSale] No points to remove from sale ${saleId} (revenue: ${sale.totals.totalRevenue})`);\n            return;\n        }\n        // Remove the points from the player\n        await (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_3__.removePointsFromPlayer)(mainPlayerId, pointsToRemove);\n        console.log(`[removePlayerPointsFromSale] ✅ Removed points from player: ${JSON.stringify(pointsToRemove)} (sale revenue: ${sale.totals.totalRevenue})`);\n    } catch (error) {\n        console.error(`[removePlayerPointsFromSale] ❌ Failed to remove player points for sale ${saleId}:`, error);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./workflows/entities-workflows/sale.workflow.ts\n");

/***/ }),

/***/ "(rsc)/./workflows/entities-workflows/site.workflow.ts":
/*!*******************************************************!*\
  !*** ./workflows/entities-workflows/site.workflow.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onSiteUpsert: () => (/* binding */ onSiteUpsert),\n/* harmony export */   removeSiteEffectsOnDelete: () => (/* binding */ removeSiteEffectsOnDelete)\n/* harmony export */ });\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../entities-logging */ \"(rsc)/./workflows/entities-logging.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(rsc)/./data-store/effects-registry.ts\");\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/client-api */ \"(rsc)/./lib/client-api.ts\");\n// workflows/entities-workflows/site.workflow.ts\n// Site-specific workflow with ACTIVATED, DEACTIVATED events\n\n\n\nconst STATE_FIELDS = [\n    \"isActive\",\n    \"status\"\n];\nconst DESCRIPTIVE_FIELDS = [\n    \"name\",\n    \"description\",\n    \"metadata\"\n];\nasync function onSiteUpsert(site, previousSite) {\n    // New site creation\n    if (!previousSite) {\n        const effectKey = `site:${site.id}:created`;\n        if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(effectKey)) return;\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"site\", site.id, \"CREATED\", {\n            name: site.name,\n            type: site.metadata.type,\n            isActive: site.isActive\n        });\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(effectKey);\n        return;\n    }\n    // Activation status changes\n    if (previousSite.isActive !== site.isActive) {\n        if (site.isActive) {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"site\", site.id, \"ACTIVATED\", {\n                name: site.name,\n                activatedAt: new Date().toISOString()\n            });\n        } else {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"site\", site.id, \"DEACTIVATED\", {\n                name: site.name,\n                deactivatedAt: new Date().toISOString()\n            });\n        }\n    }\n    // Status changes - UPDATED event\n    if (previousSite.status !== site.status) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"site\", site.id, \"UPDATED\", {\n            name: site.name,\n            oldStatus: previousSite.status,\n            newStatus: site.status\n        });\n    }\n    // Descriptive changes - update in-place\n    for (const field of DESCRIPTIVE_FIELDS){\n        if (previousSite[field] !== site[field]) {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"site\", site.id, field, previousSite[field], site[field]);\n        }\n    }\n}\n/**\r\n * Remove site effects when site is deleted\r\n * Sites can have entries in sites log and related links\r\n */ async function removeSiteEffectsOnDelete(siteId) {\n    try {\n        console.log(`[removeSiteEffectsOnDelete] Starting cleanup for site: ${siteId}`);\n        // 1. Remove all Links related to this site\n        const siteLinks = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getLinksFor({\n            type: \"site\",\n            id: siteId\n        });\n        console.log(`[removeSiteEffectsOnDelete] Found ${siteLinks.length} links to remove`);\n        for (const link of siteLinks){\n            try {\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLink(link.id);\n                console.log(`[removeSiteEffectsOnDelete] ✅ Removed link: ${link.linkType}`);\n            } catch (error) {\n                console.error(`[removeSiteEffectsOnDelete] ❌ Failed to remove link ${link.id}:`, error);\n            }\n        }\n        // 2. Clear all effects for this site\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffect)(`site:${siteId}:created`);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"site\", siteId, \"\");\n        // 3. Remove log entries from sites log\n        console.log(`[removeSiteEffectsOnDelete] Starting log entry removal for site: ${siteId}`);\n        const result = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"sites\", siteId);\n        if (result.success) {\n            console.log(`[removeSiteEffectsOnDelete] ✅ Site log entries removed successfully for site: ${siteId}`);\n        } else if (result.message === \"No matching entries found\") {\n            console.log(`[removeSiteEffectsOnDelete] ⏭️ No log entries found for site: ${siteId} (this is normal)`);\n        } else {\n            console.error(`[removeSiteEffectsOnDelete] Failed to remove site log entries: ${result.message}`);\n        }\n        console.log(`[removeSiteEffectsOnDelete] ✅ Cleared effects, removed links, and removed log entries for site ${siteId}`);\n    } catch (error) {\n        console.error(\"Error removing site effects:\", error);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./workflows/entities-workflows/site.workflow.ts\n");

/***/ }),

/***/ "(rsc)/./workflows/entities-workflows/task.workflow.ts":
/*!*******************************************************!*\
  !*** ./workflows/entities-workflows/task.workflow.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onTaskUpsert: () => (/* binding */ onTaskUpsert),\n/* harmony export */   removeTaskLogEntriesOnDelete: () => (/* binding */ removeTaskLogEntriesOnDelete),\n/* harmony export */   uncompleteTask: () => (/* binding */ uncompleteTask)\n/* harmony export */ });\n/* harmony import */ var _types_enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/enums */ \"(rsc)/./types/enums.ts\");\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../entities-logging */ \"(rsc)/./workflows/entities-logging.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(rsc)/./data-store/effects-registry.ts\");\n/* harmony import */ var _data_store_datastore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/data-store/datastore */ \"(rsc)/./data-store/datastore.ts\");\n/* harmony import */ var _links_link_registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/links/link-registry */ \"(rsc)/./links/link-registry.ts\");\n/* harmony import */ var _item_creation_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../item-creation-utils */ \"(rsc)/./workflows/item-creation-utils.ts\");\n/* harmony import */ var _points_rewards_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../points-rewards-utils */ \"(rsc)/./workflows/points-rewards-utils.ts\");\n/* harmony import */ var _financial_record_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../financial-record-utils */ \"(rsc)/./workflows/financial-record-utils.ts\");\n/* harmony import */ var _update_propagation_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../update-propagation-utils */ \"(rsc)/./workflows/update-propagation-utils.ts\");\n// workflows/entities-workflows/task.workflow.ts\n// Task-specific workflow with state vs descriptive field detection\n\n\n\n\n\n\n\n\n\nconst STATE_FIELDS = [\n    \"status\",\n    \"progress\",\n    \"doneAt\",\n    \"collectedAt\",\n    \"siteId\",\n    \"targetSiteId\"\n];\nconst DESCRIPTIVE_FIELDS = [\n    \"name\",\n    \"description\",\n    \"cost\",\n    \"revenue\",\n    \"rewards\",\n    \"priority\"\n];\nasync function onTaskUpsert(task, previousTask) {\n    // New task creation\n    if (!previousTask) {\n        const effectKey = `task:${task.id}:created`;\n        if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.hasEffect)(effectKey)) return;\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_1__.appendEntityLog)(\"task\", task.id, \"CREATED\", {\n            name: task.name,\n            status: task.status,\n            station: task.station\n        });\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.markEffect)(effectKey);\n        return;\n    }\n    // State changes - append new log\n    if (previousTask.status !== task.status) {\n        console.log(`[onTaskUpsert] Task status changed: ${previousTask.status} → ${task.status}`);\n        // Log status change with transition context\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_1__.appendEntityLog)(\"task\", task.id, \"STATUS_CHANGED\", {\n            oldStatus: previousTask.status,\n            newStatus: task.status,\n            name: task.name,\n            transition: `${previousTask.status} → ${task.status}`,\n            changedAt: new Date().toISOString()\n        });\n        // Handle uncompletion (Done → Other status)\n        if (previousTask.status === \"Done\" && task.status !== \"Done\" && task.status !== \"Collected\") {\n            console.log(`[onTaskUpsert] Task uncompleted: ${task.name} (${previousTask.status} → ${task.status})`);\n            // Uncomplete the task and remove effects\n            await uncompleteTask(task.id);\n        }\n    }\n    if (!previousTask.doneAt && task.doneAt) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_1__.appendEntityLog)(\"task\", task.id, \"DONE\", {\n            name: task.name,\n            doneAt: task.doneAt\n        });\n    }\n    if (!previousTask.collectedAt && task.collectedAt) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_1__.appendEntityLog)(\"task\", task.id, \"COLLECTED\", {\n            name: task.name,\n            collectedAt: task.collectedAt\n        });\n    }\n    // Site changes - MOVED event\n    if (previousTask.siteId !== task.siteId || previousTask.targetSiteId !== task.targetSiteId) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_1__.appendEntityLog)(\"task\", task.id, \"MOVED\", {\n            name: task.name,\n            oldSiteId: previousTask.siteId,\n            newSiteId: task.siteId,\n            oldTargetSiteId: previousTask.targetSiteId,\n            newTargetSiteId: task.targetSiteId\n        });\n    }\n    // Item creation from emissary fields - when task is completed\n    if (task.outputItemType && task.outputQuantity && task.status === \"Done\") {\n        const effectKey = `task:${task.id}:itemCreated`;\n        if (!await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.hasEffect)(effectKey)) {\n            console.log(`[onTaskUpsert] Creating item from task emissary fields: ${task.name}`);\n            const createdItem = await (0,_item_creation_utils__WEBPACK_IMPORTED_MODULE_5__.createItemFromTask)(task);\n            if (createdItem) {\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.markEffect)(effectKey);\n                console.log(`[onTaskUpsert] ✅ Item created and effect marked: ${createdItem.name}`);\n            }\n        }\n    }\n    // Points awarding - when task is completed with rewards\n    if (task.status === \"Done\" && task.rewards?.points) {\n        const effectKey = `task:${task.id}:pointsAwarded`;\n        if (!await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.hasEffect)(effectKey)) {\n            console.log(`[onTaskUpsert] Awarding points from task completion: ${task.name}`);\n            await (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_6__.awardPointsToPlayer)((0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_6__.getMainPlayerId)(), task.rewards.points, task.id, \"task\");\n            await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.markEffect)(effectKey);\n            console.log(`[onTaskUpsert] ✅ Points awarded and effect marked for task: ${task.name}`);\n        }\n    }\n    // Financial record creation from task - when task has cost or revenue\n    if (task.cost || task.revenue) {\n        const effectKey = `task:${task.id}:financialCreated`;\n        if (!await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.hasEffect)(effectKey)) {\n            console.log(`[onTaskUpsert] Creating financial record from task: ${task.name}`);\n            const createdFinancial = await (0,_financial_record_utils__WEBPACK_IMPORTED_MODULE_7__.createFinancialRecordFromTask)(task);\n            if (createdFinancial) {\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.markEffect)(effectKey);\n                console.log(`[onTaskUpsert] ✅ Financial record created and effect marked: ${createdFinancial.name}`);\n            }\n        }\n    }\n    // COMPREHENSIVE UPDATE PROPAGATION - when task properties change\n    if (previousTask) {\n        // Propagate to Financial Records\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_8__.hasFinancialPropsChanged)(task, previousTask)) {\n            console.log(`[onTaskUpsert] Propagating financial changes from task: ${task.name}`);\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_8__.updateFinancialRecordsFromTask)(task, previousTask);\n        }\n        // Propagate to Items\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_8__.hasOutputPropsChanged)(task, previousTask)) {\n            console.log(`[onTaskUpsert] Propagating output changes from task: ${task.name}`);\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_8__.updateItemsCreatedByTask)(task, previousTask);\n        }\n        // Propagate to Player (points delta)\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_8__.hasRewardsChanged)(task, previousTask)) {\n            console.log(`[onTaskUpsert] Propagating points changes from task: ${task.name}`);\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_8__.updatePlayerPointsFromSource)(\"task\", task, previousTask);\n        }\n    }\n    // Descriptive changes - update in-place\n    for (const field of DESCRIPTIVE_FIELDS){\n        if (previousTask[field] !== task[field]) {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_1__.updateEntityLogField)(\"task\", task.id, field, previousTask[field], task[field]);\n        }\n    }\n}\n/**\r\n * Remove task effects when task is deleted\r\n * Tasks can have entries in multiple logs: tasks, financials, character, player, items\r\n */ async function removeTaskLogEntriesOnDelete(taskId) {\n    try {\n        console.log(`[removeTaskLogEntriesOnDelete] Starting cleanup for task: ${taskId}`);\n        // 1. Remove items created by this task\n        await (0,_item_creation_utils__WEBPACK_IMPORTED_MODULE_5__.removeItemsCreatedByTask)(taskId);\n        // 2. Remove financial records created by this task\n        await (0,_financial_record_utils__WEBPACK_IMPORTED_MODULE_7__.removeFinancialRecordsCreatedByTask)(taskId);\n        // 3. Remove player points that were awarded by this task (if points were badly given)\n        await removePlayerPointsFromTask(taskId);\n        // 3. Remove all Links related to this task\n        const taskLinks = await (0,_links_link_registry__WEBPACK_IMPORTED_MODULE_4__.getLinksFor)({\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n            id: taskId\n        });\n        console.log(`[removeTaskLogEntriesOnDelete] Found ${taskLinks.length} links to remove`);\n        for (const link of taskLinks){\n            try {\n                await (0,_links_link_registry__WEBPACK_IMPORTED_MODULE_4__.removeLink)(link.id);\n                console.log(`[removeTaskLogEntriesOnDelete] ✅ Removed link: ${link.linkType}`);\n            } catch (error) {\n                console.error(`[removeTaskLogEntriesOnDelete] ❌ Failed to remove link ${link.id}:`, error);\n            }\n        }\n        // 4. Clear effects registry\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.clearEffect)(`task:${taskId}:created`);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.clearEffect)(`task:${taskId}:itemCreated`);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.clearEffect)(`task:${taskId}:financialCreated`);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.clearEffect)(`task:${taskId}:pointsAwarded`);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.clearEffectsByPrefix)(\"task\", taskId, \"pointsLogged:\");\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.clearEffectsByPrefix)(\"task\", taskId, \"financialLogged:\");\n        // 5. Remove log entries from all relevant logs\n        // Note: Log removal is handled client-side via API calls\n        // Server-side log removal would require implementing removeLogEntry in entities-logging.ts\n        console.log(`[removeTaskLogEntriesOnDelete] Log entry removal handled client-side for task: ${taskId}`);\n        console.log(`[removeTaskLogEntriesOnDelete] ✅ Cleared effects, removed links for task ${taskId}`);\n    } catch (error) {\n        console.error(\"Error removing task effects:\", error);\n    }\n}\n/**\r\n * Remove player points that were awarded by a specific task\r\n * This is used when rolling back a task that incorrectly awarded points\r\n */ async function removePlayerPointsFromTask(taskId) {\n    try {\n        console.log(`[removePlayerPointsFromTask] Removing points for task: ${taskId}`);\n        // Get the task to find what points were awarded\n        const tasks = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_3__.getAllTasks)();\n        const task = tasks.find((t)=>t.id === taskId);\n        if (!task || !task.rewards?.points) {\n            console.log(`[removePlayerPointsFromTask] Task ${taskId} has no points to remove`);\n            return;\n        }\n        // Get the main player\n        const mainPlayerId = (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_6__.getMainPlayerId)();\n        const players = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_3__.getAllPlayers)();\n        const mainPlayer = players.find((p)=>p.id === mainPlayerId);\n        if (!mainPlayer) {\n            console.log(`[removePlayerPointsFromTask] Main player not found, skipping points removal`);\n            return;\n        }\n        // Check if any points were actually awarded\n        const pointsToRemove = task.rewards.points;\n        const hasPoints = (pointsToRemove.xp || 0) > 0 || (pointsToRemove.rp || 0) > 0 || (pointsToRemove.fp || 0) > 0 || (pointsToRemove.hp || 0) > 0;\n        if (!hasPoints) {\n            console.log(`[removePlayerPointsFromTask] No points to remove from task ${taskId}`);\n            return;\n        }\n        // Remove the points from the player\n        await (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_6__.removePointsFromPlayer)(mainPlayerId, pointsToRemove);\n        console.log(`[removePlayerPointsFromTask] ✅ Removed points from player: ${JSON.stringify(pointsToRemove)}`);\n    } catch (error) {\n        console.error(`[removePlayerPointsFromTask] ❌ Failed to remove player points for task ${taskId}:`, error);\n    }\n}\n/**\r\n * Uncomplete a task and remove effects\r\n * This function handles when a task status changes back from Done\r\n * Reverses all side effects that were applied during completion\r\n */ async function uncompleteTask(taskId) {\n    try {\n        console.log(`[uncompleteTask] Uncompleting task: ${taskId}`);\n        // Get the task\n        const tasks = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_3__.getAllTasks)();\n        const task = tasks.find((t)=>t.id === taskId);\n        if (!task) {\n            console.log(`[uncompleteTask] Task ${taskId} not found`);\n            return;\n        }\n        // Check if task was previously completed (has doneAt)\n        if (!task.doneAt) {\n            console.log(`[uncompleteTask] Task ${taskId} was not completed, nothing to uncomplete`);\n            return;\n        }\n        console.log(`[uncompleteTask] Reversing completion for task: ${task.name}`);\n        // 1. Remove items created by this task\n        await (0,_item_creation_utils__WEBPACK_IMPORTED_MODULE_5__.removeItemsCreatedByTask)(taskId);\n        console.log(`[uncompleteTask] ✅ Removed items created by task`);\n        // 2. Remove points awarded by this task\n        await removePlayerPointsFromTask(taskId);\n        console.log(`[uncompleteTask] ✅ Removed points awarded by task`);\n        // 3. Clear effects registry entries\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.clearEffect)(`task:${taskId}:itemCreated`);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.clearEffect)(`task:${taskId}:pointsAwarded`);\n        console.log(`[uncompleteTask] ✅ Cleared effects registry entries`);\n        // 4. Log UNCOMPLETED event\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_1__.appendEntityLog)(\"task\", taskId, \"UNCOMPLETED\", {\n            name: task.name,\n            previousStatus: \"Done\",\n            uncompletedAt: new Date().toISOString()\n        });\n        console.log(`[uncompleteTask] ✅ Logged UNCOMPLETED event`);\n        console.log(`[uncompleteTask] ✅ Successfully uncompleted task: ${task.name}`);\n    } catch (error) {\n        console.error(`[uncompleteTask] ❌ Failed to uncomplete task ${taskId}:`, error);\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./workflows/entities-workflows/task.workflow.ts\n");

/***/ }),

/***/ "(rsc)/./workflows/financial-record-utils.ts":
/*!*********************************************!*\
  !*** ./workflows/financial-record-utils.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFinancialRecordFromSale: () => (/* binding */ createFinancialRecordFromSale),\n/* harmony export */   createFinancialRecordFromTask: () => (/* binding */ createFinancialRecordFromTask),\n/* harmony export */   processFinancialRecordCreationWithLinks: () => (/* binding */ processFinancialRecordCreationWithLinks),\n/* harmony export */   removeFinancialRecordsCreatedByTask: () => (/* binding */ removeFinancialRecordsCreatedByTask),\n/* harmony export */   updateFinancialRecordFromTask: () => (/* binding */ updateFinancialRecordFromTask)\n/* harmony export */ });\n/* harmony import */ var _types_enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/enums */ \"(rsc)/./types/enums.ts\");\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/client-api */ \"(rsc)/./lib/client-api.ts\");\n/* harmony import */ var _links_links_workflows__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/links/links-workflows */ \"(rsc)/./links/links-workflows.ts\");\n/* harmony import */ var _links_link_registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/links/link-registry */ \"(rsc)/./links/link-registry.ts\");\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./entities-logging */ \"(rsc)/./workflows/entities-logging.ts\");\n// workflows/financial-record-utils.ts\n// Financial record creation and management utilities\n\n\n\n\n\n/**\r\n * Create a financial record from a task (when task has cost or revenue)\r\n * This implements the emissary pattern: Task DNA → FinancialRecord entity\r\n */ async function createFinancialRecordFromTask(task) {\n    try {\n        console.log(`[createFinancialRecordFromTask] Starting financial record creation for task: ${task.name} (${task.id})`);\n        // Check if task has cost or revenue\n        if (!task.cost && !task.revenue) {\n            console.log(`[createFinancialRecordFromTask] Task ${task.name} has no cost or revenue, skipping financial record creation`);\n            return null;\n        }\n        // IDEMPOTENCY CHECK: Look for existing financial record created by this task\n        const allFinancials = await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.getFinancialRecords();\n        const existingFinrec = allFinancials.find((fr)=>fr.sourceTaskId === task.id);\n        if (existingFinrec) {\n            console.log(`[createFinancialRecordFromTask] Financial record already exists for task ${task.id}, skipping creation`);\n            return existingFinrec;\n        }\n        const currentDate = new Date();\n        const newFinrec = {\n            id: `finrec-${task.id}-${Date.now()}`,\n            name: task.name,\n            description: `Financial record from task: ${task.name}`,\n            year: currentDate.getFullYear(),\n            month: currentDate.getMonth() + 1,\n            station: task.station,\n            type: \"company\",\n            siteId: task.siteId,\n            targetSiteId: task.targetSiteId,\n            sourceTaskId: task.id,\n            cost: task.cost || 0,\n            revenue: task.revenue || 0,\n            jungleCoins: 0,\n            isNotPaid: task.isNotPaid,\n            isNotCharged: task.isNotCharged,\n            rewards: task.rewards,\n            netCashflow: (task.revenue || 0) - (task.cost || 0),\n            jungleCoinsValue: 0,\n            isCollected: false,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            links: []\n        };\n        // Store the financial record\n        console.log(`[createFinancialRecordFromTask] Creating new financial record:`, newFinrec);\n        const createdFinrec = await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.upsertFinancialRecord(newFinrec);\n        // Create TASK_FINREC link with metadata\n        const linkMetadata = {\n            cost: task.cost || 0,\n            revenue: task.revenue || 0,\n            isNotPaid: task.isNotPaid || false,\n            isNotCharged: task.isNotCharged || false,\n            rewards: task.rewards,\n            netCashflow: newFinrec.netCashflow,\n            createdFrom: \"task\"\n        };\n        const link = (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_2__.makeLink)(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.TASK_FINREC, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n            id: task.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL,\n            id: createdFinrec.id\n        }, linkMetadata);\n        await (0,_links_link_registry__WEBPACK_IMPORTED_MODULE_3__.createLink)(link);\n        console.log(`[createFinancialRecordFromTask] ✅ Financial record created and TASK_FINREC link established: ${createdFinrec.name}`);\n        return createdFinrec;\n    } catch (error) {\n        console.error(`[createFinancialRecordFromTask] ❌ Failed to create financial record from task ${task.id}:`, error);\n        throw error;\n    }\n}\n/**\r\n * Update an existing financial record when task properties change\r\n * This ensures financial records stay in sync with their source tasks\r\n */ async function updateFinancialRecordFromTask(task, previousTask) {\n    try {\n        console.log(`[updateFinancialRecordFromTask] Updating financial record for task: ${task.name} (${task.id})`);\n        // Find the existing financial record created by this task\n        const allFinancials = await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.getFinancialRecords();\n        const existingFinrec = allFinancials.find((fr)=>fr.sourceTaskId === task.id);\n        if (!existingFinrec) {\n            console.log(`[updateFinancialRecordFromTask] No financial record found for task ${task.id}, creating new one`);\n            await createFinancialRecordFromTask(task);\n            return;\n        }\n        // Check if any financial properties changed\n        const financialPropsChanged = previousTask.cost !== task.cost || previousTask.revenue !== task.revenue || previousTask.isNotPaid !== task.isNotPaid || previousTask.isNotCharged !== task.isNotCharged || previousTask.name !== task.name || previousTask.station !== task.station || previousTask.siteId !== task.siteId || previousTask.targetSiteId !== task.targetSiteId;\n        if (!financialPropsChanged) {\n            console.log(`[updateFinancialRecordFromTask] No financial properties changed for task ${task.id}, skipping update`);\n            return;\n        }\n        // Update the financial record with new task data\n        const updatedFinrec = {\n            ...existingFinrec,\n            name: task.name,\n            description: `Financial record from task: ${task.name}`,\n            cost: task.cost || 0,\n            revenue: task.revenue || 0,\n            station: task.station,\n            siteId: task.siteId,\n            targetSiteId: task.targetSiteId,\n            isNotPaid: task.isNotPaid,\n            isNotCharged: task.isNotCharged,\n            rewards: task.rewards,\n            netCashflow: (task.revenue || 0) - (task.cost || 0),\n            updatedAt: new Date()\n        };\n        // Store the updated financial record\n        console.log(`[updateFinancialRecordFromTask] Updating financial record:`, updatedFinrec);\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.upsertFinancialRecord(updatedFinrec);\n        // Log the update\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_4__.appendEntityLog)(\"financial\", existingFinrec.id, \"UPDATED\", {\n            name: task.name,\n            updatedFrom: \"task\",\n            changes: {\n                cost: {\n                    from: previousTask.cost || 0,\n                    to: task.cost || 0\n                },\n                revenue: {\n                    from: previousTask.revenue || 0,\n                    to: task.revenue || 0\n                },\n                isNotPaid: {\n                    from: previousTask.isNotPaid || false,\n                    to: task.isNotPaid || false\n                },\n                isNotCharged: {\n                    from: previousTask.isNotCharged || false,\n                    to: task.isNotCharged || false\n                }\n            },\n            updatedAt: new Date().toISOString()\n        });\n        console.log(`[updateFinancialRecordFromTask] ✅ Financial record updated successfully for task: ${task.name}`);\n    } catch (error) {\n        console.error(`[updateFinancialRecordFromTask] ❌ Failed to update financial record for task ${task.id}:`, error);\n        throw error;\n    }\n}\n/**\r\n * Remove financial records created by a specific task\r\n * This is used when a task is deleted to clean up associated financial records\r\n */ async function removeFinancialRecordsCreatedByTask(taskId) {\n    try {\n        console.log(`[removeFinancialRecordsCreatedByTask] Removing financial records created by task: ${taskId}`);\n        // Find financial records created by this task\n        const allFinancials = await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.getFinancialRecords();\n        const taskFinancials = allFinancials.filter((fr)=>fr.sourceTaskId === taskId);\n        if (taskFinancials.length === 0) {\n            console.log(`[removeFinancialRecordsCreatedByTask] No financial records found for task ${taskId}`);\n            return;\n        }\n        console.log(`[removeFinancialRecordsCreatedByTask] Found ${taskFinancials.length} financial record(s) to remove`);\n        // Remove each financial record\n        for (const financial of taskFinancials){\n            try {\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.deleteFinancialRecord(financial.id);\n                console.log(`[removeFinancialRecordsCreatedByTask] ✅ Removed financial record: ${financial.name}`);\n            } catch (error) {\n                console.error(`[removeFinancialRecordsCreatedByTask] ❌ Failed to remove financial record ${financial.id}:`, error);\n            }\n        }\n        console.log(`[removeFinancialRecordsCreatedByTask] ✅ Removed ${taskFinancials.length} financial record(s) for task ${taskId}`);\n    } catch (error) {\n        console.error(`[removeFinancialRecordsCreatedByTask] ❌ Failed to remove financial records for task ${taskId}:`, error);\n        throw error;\n    }\n}\n/**\r\n * Create a financial record from a sale (when sale has revenue)\r\n * This implements the emissary pattern: Sale DNA → FinancialRecord entity\r\n */ async function createFinancialRecordFromSale(sale) {\n    try {\n        console.log(`[createFinancialRecordFromSale] Creating financial record from sale: ${sale.counterpartyName}`);\n        // Check if sale has revenue\n        if (sale.totals.totalRevenue <= 0) {\n            console.log(`[createFinancialRecordFromSale] Sale ${sale.id} has no revenue, skipping financial record creation`);\n            return null;\n        }\n        // IDEMPOTENCY CHECK: Look for existing financial record created by this sale\n        const allFinancials = await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.getFinancialRecords();\n        const existingFinrec = allFinancials.find((fr)=>fr.sourceSaleId === sale.id);\n        if (existingFinrec) {\n            console.log(`[createFinancialRecordFromSale] Financial record already exists for sale ${sale.id}, skipping creation`);\n            return existingFinrec;\n        }\n        const currentDate = new Date();\n        const newFinrec = {\n            id: `finrec-${sale.id}-${Date.now()}`,\n            name: `Sale: ${sale.counterpartyName}`,\n            description: `Financial record from sale: ${sale.counterpartyName}`,\n            year: currentDate.getFullYear(),\n            month: currentDate.getMonth() + 1,\n            station: \"Sales\",\n            type: \"company\",\n            siteId: sale.siteId,\n            targetSiteId: undefined,\n            sourceSaleId: sale.id,\n            cost: 0,\n            revenue: sale.totals.totalRevenue,\n            jungleCoins: 0,\n            isNotPaid: sale.isNotPaid || false,\n            isNotCharged: sale.isNotCharged || false,\n            rewards: {\n                points: {\n                    xp: 0,\n                    rp: 0,\n                    fp: 0,\n                    hp: 0\n                }\n            },\n            netCashflow: sale.totals.totalRevenue,\n            jungleCoinsValue: 0,\n            isCollected: false,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            links: []\n        };\n        // Store the financial record\n        console.log(`[createFinancialRecordFromSale] Creating financial record:`, newFinrec);\n        const createdFinrec = await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.upsertFinancialRecord(newFinrec);\n        // Create SALE_FINREC link\n        const linkMetadata = {\n            revenue: sale.totals.totalRevenue,\n            isNotPaid: sale.isNotPaid || false,\n            isNotCharged: sale.isNotCharged || false,\n            netCashflow: newFinrec.netCashflow,\n            createdFrom: \"sale\"\n        };\n        const link = (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_2__.makeLink)(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.SALE_FINREC, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE,\n            id: sale.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL,\n            id: createdFinrec.id\n        }, linkMetadata);\n        await (0,_links_link_registry__WEBPACK_IMPORTED_MODULE_3__.createLink)(link);\n        console.log(`[createFinancialRecordFromSale] ✅ Financial record created and SALE_FINREC link established: ${createdFinrec.name}`);\n        return createdFinrec;\n    } catch (error) {\n        console.error(`[createFinancialRecordFromSale] ❌ Failed to create financial record from sale ${sale.id}:`, error);\n        throw error;\n    }\n}\n/**\r\n * Enhanced financial record creation - pure business logic, no link creation\r\n */ async function processFinancialRecordCreationWithLinks(record) {\n    console.log(`[processFinancialRecordCreationWithLinks] Processing financial record creation: ${record.name} (${record.id})`);\n    return record;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./workflows/financial-record-utils.ts\n");

/***/ }),

/***/ "(rsc)/./workflows/item-creation-utils.ts":
/*!******************************************!*\
  !*** ./workflows/item-creation-utils.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createItemFromRecord: () => (/* binding */ createItemFromRecord),\n/* harmony export */   createItemFromTask: () => (/* binding */ createItemFromTask),\n/* harmony export */   getDefaultItemStatus: () => (/* binding */ getDefaultItemStatus),\n/* harmony export */   processItemCreationWithLinks: () => (/* binding */ processItemCreationWithLinks),\n/* harmony export */   removeItemsCreatedByRecord: () => (/* binding */ removeItemsCreatedByRecord),\n/* harmony export */   removeItemsCreatedByTask: () => (/* binding */ removeItemsCreatedByTask)\n/* harmony export */ });\n/* harmony import */ var _types_enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/enums */ \"(rsc)/./types/enums.ts\");\n/* harmony import */ var _data_store_datastore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/datastore */ \"(rsc)/./data-store/datastore.ts\");\n/* harmony import */ var _data_store_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/data-store/repositories/item.repo */ \"(rsc)/./data-store/repositories/item.repo.ts\");\n// workflows/item-creation-utils.ts\n// Item Creation System - DNA/RNA Molecular Pattern Implementation\n// Creates items from Tasks and Financial Records using emissary fields\n\n\n\n/**\r\n * Determines the default item status based on item type and sale status\r\n * All newly created items start as CREATED, regardless of type\r\n * Their status will change based on business logic later\r\n */ function getDefaultItemStatus(itemType, isSold = false) {\n    if (isSold) {\n        return _types_enums__WEBPACK_IMPORTED_MODULE_0__.ItemStatus.SOLD;\n    }\n    // All newly created items start as CREATED, regardless of type\n    // Their status will change based on business logic later\n    return _types_enums__WEBPACK_IMPORTED_MODULE_0__.ItemStatus.CREATED;\n}\n/**\r\n * Creates an Item entity from a Task's emissary fields\r\n * IDEMPOTENT: Checks if item already exists before creating\r\n * Uses atomic operations to prevent race conditions\r\n */ async function createItemFromTask(task) {\n    try {\n        console.log(`[createItemFromTask] Starting item creation for task: ${task.name} (${task.id})`);\n        console.log(`[createItemFromTask] outputItemType: ${task.outputItemType}`);\n        console.log(`[createItemFromTask] outputQuantity: ${task.outputQuantity}`);\n        if (!task.outputItemType) {\n            console.error(\"Cannot create item: outputItemType is required\");\n            return null;\n        }\n        // IDEMPOTENCY CHECK: Look for existing item created by this task\n        console.log(`[createItemFromTask] Checking for existing items...`);\n        const allItems = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllItems)();\n        console.log(`[createItemFromTask] Found ${allItems.length} total items`);\n        const existingItems = allItems.filter((item)=>item.sourceTaskId === task.id && item.type === task.outputItemType);\n        console.log(`[createItemFromTask] Found ${existingItems.length} existing items for this task`);\n        if (existingItems.length > 0) {\n            console.log(`[createItemFromTask] Item already exists, skipping creation`);\n            return existingItems[0]; // Return existing item\n        }\n        const newItem = {\n            id: `item-${task.id}-${Date.now()}`,\n            name: task.outputItemName || `${task.outputItemType} from ${task.name}`,\n            description: `Created from task: ${task.name}`,\n            type: task.outputItemType,\n            collection: task.outputItemCollection || undefined,\n            status: getDefaultItemStatus(task.outputItemType || \"\", task.isSold || false),\n            station: task.station,\n            unitCost: task.outputUnitCost || 0,\n            additionalCost: 0,\n            price: task.outputItemPrice || 0,\n            value: 0,\n            quantitySold: 0,\n            sourceTaskId: task.id,\n            ownerCharacterId: task.customerCharacterId || null,\n            isCollected: false,\n            year: new Date().getFullYear(),\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            links: [],\n            stock: [\n                {\n                    siteId: task.targetSiteId || task.siteId || \"home-storage\",\n                    quantity: task.outputQuantity || 1\n                }\n            ]\n        };\n        // Store the item in DataStore\n        console.log(`[createItemFromTask] Creating new item:`, newItem);\n        const createdItem = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.upsertItem)(newItem);\n        console.log(`[createItemFromTask] ✅ Item created successfully`);\n        return createdItem;\n    } catch (error) {\n        console.error(\"Error creating item from task:\", error);\n        return null;\n    }\n}\n/**\r\n * Creates an Item entity from a Financial Record's emissary fields\r\n * IDEMPOTENT: Checks if item already exists before creating\r\n * Uses atomic operations to prevent race conditions\r\n */ async function createItemFromRecord(record) {\n    try {\n        console.log(`[createItemFromRecord] Starting item creation for record: ${record.name} (${record.id})`);\n        console.log(`[createItemFromRecord] outputItemType: ${record.outputItemType}`);\n        console.log(`[createItemFromRecord] outputQuantity: ${record.outputQuantity}`);\n        if (!record.outputItemType) {\n            console.error(\"Cannot create item: outputItemType is required\");\n            return null;\n        }\n        // IDEMPOTENCY CHECK: Look for existing item created by this record\n        console.log(`[createItemFromRecord] Checking for existing items...`);\n        const allItems = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllItems)();\n        console.log(`[createItemFromRecord] Found ${allItems.length} total items`);\n        const existingItems = allItems.filter((item)=>item.sourceRecordId === record.id && item.type === record.outputItemType);\n        console.log(`[createItemFromRecord] Found ${existingItems.length} existing items for this record`);\n        if (existingItems.length > 0) {\n            console.log(`[createItemFromRecord] Item already exists, skipping creation`);\n            return existingItems[0]; // Return existing item\n        }\n        const newItem = {\n            id: `item-${record.id}-${Date.now()}`,\n            name: record.outputItemName || `${record.outputItemType} from ${record.name}`,\n            description: `Created from record: ${record.name}`,\n            type: record.outputItemType,\n            collection: record.outputItemCollection || undefined,\n            status: getDefaultItemStatus(record.outputItemType || \"\", record.isSold || false),\n            station: record.station,\n            unitCost: record.outputUnitCost || 0,\n            additionalCost: 0,\n            price: record.outputItemPrice || 0,\n            value: 0,\n            quantitySold: 0,\n            sourceRecordId: record.id,\n            isCollected: false,\n            year: record.year,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            links: [],\n            stock: [\n                {\n                    siteId: record.siteId || \"home-storage\",\n                    quantity: record.outputQuantity || 1\n                }\n            ]\n        };\n        // Store the item in DataStore\n        console.log(`[createItemFromRecord] Creating new item:`, newItem);\n        const createdItem = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.upsertItem)(newItem);\n        console.log(`[createItemFromRecord] ✅ Item created successfully`);\n        return createdItem;\n    } catch (error) {\n        console.error(\"Error creating item from record:\", error);\n        return null;\n    }\n}\n/**\r\n * Removes all items created by a specific task\r\n * Used when task is uncompleted or deleted\r\n */ async function removeItemsCreatedByTask(taskId) {\n    try {\n        console.log(`[removeItemsCreatedByTask] Removing items created by task: ${taskId}`);\n        const items = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllItems)();\n        const itemsToRemove = items.filter((item)=>item.sourceTaskId === taskId);\n        console.log(`[removeItemsCreatedByTask] Found ${itemsToRemove.length} items to remove`);\n        // Remove each item created by this task\n        for (const item of itemsToRemove){\n            try {\n                await (0,_data_store_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__.deleteItem)(item.id);\n                console.log(`[removeItemsCreatedByTask] ✅ Removed item: ${item.name} (${item.id})`);\n            } catch (error) {\n                console.error(`[removeItemsCreatedByTask] ❌ Failed to remove item ${item.id}:`, error);\n            }\n        }\n        // Dispatch event to update UI\n        if (false) {}\n        console.log(`[removeItemsCreatedByTask] ✅ Completed removal of ${itemsToRemove.length} items`);\n    } catch (error) {\n        console.error(\"Error removing items created by task:\", error);\n    }\n}\n/**\r\n * Removes all items created by a specific financial record\r\n * Used when financial record is deleted\r\n */ async function removeItemsCreatedByRecord(recordId) {\n    try {\n        console.log(`[removeItemsCreatedByRecord] Removing items created by record: ${recordId}`);\n        const items = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllItems)();\n        const itemsToRemove = items.filter((item)=>item.sourceRecordId === recordId);\n        console.log(`[removeItemsCreatedByRecord] Found ${itemsToRemove.length} items to remove`);\n        // Remove each item created by this record\n        for (const item of itemsToRemove){\n            try {\n                await (0,_data_store_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__.deleteItem)(item.id);\n                console.log(`[removeItemsCreatedByRecord] ✅ Removed item: ${item.name} (${item.id})`);\n            } catch (error) {\n                console.error(`[removeItemsCreatedByRecord] ❌ Failed to remove item ${item.id}:`, error);\n            }\n        }\n        // Dispatch event to update UI\n        if (false) {}\n        console.log(`[removeItemsCreatedByRecord] ✅ Completed removal of ${itemsToRemove.length} items`);\n    } catch (error) {\n        console.error(\"Error removing items created by record:\", error);\n    }\n}\n/**\r\n * Enhanced item creation - pure business logic, no link creation\r\n */ async function processItemCreationWithLinks(item) {\n    console.log(`[processItemCreationWithLinks] Processing item creation: ${item.name} (${item.id})`);\n    return item;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./workflows/item-creation-utils.ts\n");

/***/ }),

/***/ "(rsc)/./workflows/points-rewards-utils.ts":
/*!*******************************************!*\
  !*** ./workflows/points-rewards-utils.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   awardJungleCoinsToCharacter: () => (/* binding */ awardJungleCoinsToCharacter),\n/* harmony export */   awardPointsToPlayer: () => (/* binding */ awardPointsToPlayer),\n/* harmony export */   calculatePointsFromRevenue: () => (/* binding */ calculatePointsFromRevenue),\n/* harmony export */   getMainCharacterId: () => (/* binding */ getMainCharacterId),\n/* harmony export */   getMainPlayerId: () => (/* binding */ getMainPlayerId),\n/* harmony export */   removeJungleCoinsFromCharacter: () => (/* binding */ removeJungleCoinsFromCharacter),\n/* harmony export */   removePointsFromPlayer: () => (/* binding */ removePointsFromPlayer)\n/* harmony export */ });\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/client-api */ \"(rsc)/./lib/client-api.ts\");\n/* harmony import */ var _links_links_workflows__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/links/links-workflows */ \"(rsc)/./links/links-workflows.ts\");\n/* harmony import */ var _links_link_registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/links/link-registry */ \"(rsc)/./links/link-registry.ts\");\n/* harmony import */ var _types_enums__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/types/enums */ \"(rsc)/./types/enums.ts\");\n// thegame/workflows/points-rewards-utils.ts\n\n\n\n\n/**\r\n * Awards points to a player with idempotency and proper tracking\r\n * @param playerId - ID of the player to award points to\r\n * @param points - Points to award (XP, RP, FP, HP)\r\n * @param sourceId - ID of the entity that triggered the award\r\n * @param sourceType - Type of entity (task, financial, sale)\r\n */ async function awardPointsToPlayer(playerId, points, sourceId, sourceType) {\n    try {\n        console.log(`[awardPointsToPlayer] Awarding points to player ${playerId} from ${sourceType} ${sourceId}`);\n        // Get the player\n        const players = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getPlayers();\n        const player = players.find((p)=>p.id === playerId);\n        if (!player) {\n            console.log(`[awardPointsToPlayer] Player ${playerId} not found, skipping`);\n            return;\n        }\n        // Check if any points to award\n        const hasPoints = (points.xp || 0) > 0 || (points.rp || 0) > 0 || (points.fp || 0) > 0 || (points.hp || 0) > 0;\n        if (!hasPoints) {\n            console.log(`[awardPointsToPlayer] No points to award, skipping`);\n            return;\n        }\n        // Update player points\n        const updatedPlayer = {\n            ...player,\n            points: {\n                xp: (player.points?.xp || 0) + (points.xp || 0),\n                rp: (player.points?.rp || 0) + (points.rp || 0),\n                fp: (player.points?.fp || 0) + (points.fp || 0),\n                hp: (player.points?.hp || 0) + (points.hp || 0)\n            },\n            totalPoints: {\n                xp: (player.totalPoints?.xp || 0) + (points.xp || 0),\n                rp: (player.totalPoints?.rp || 0) + (points.rp || 0),\n                fp: (player.totalPoints?.fp || 0) + (points.fp || 0),\n                hp: (player.totalPoints?.hp || 0) + (points.hp || 0)\n            },\n            updatedAt: new Date()\n        };\n        // Save updated player\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertPlayer(updatedPlayer);\n        console.log(`[awardPointsToPlayer] ✅ Points awarded successfully:`, points);\n        // Create appropriate link based on source type - use forward links (SOURCE → PLAYER)\n        let linkType;\n        let sourceEntityType;\n        switch(sourceType){\n            case \"task\":\n                linkType = _types_enums__WEBPACK_IMPORTED_MODULE_3__.LinkType.TASK_PLAYER;\n                sourceEntityType = _types_enums__WEBPACK_IMPORTED_MODULE_3__.EntityType.TASK;\n                break;\n            case \"financial\":\n                linkType = _types_enums__WEBPACK_IMPORTED_MODULE_3__.LinkType.FINREC_PLAYER;\n                sourceEntityType = _types_enums__WEBPACK_IMPORTED_MODULE_3__.EntityType.FINANCIAL;\n                break;\n            case \"sale\":\n                linkType = _types_enums__WEBPACK_IMPORTED_MODULE_3__.LinkType.SALE_PLAYER;\n                sourceEntityType = _types_enums__WEBPACK_IMPORTED_MODULE_3__.EntityType.SALE;\n                break;\n            default:\n                console.warn(`[awardPointsToPlayer] Unknown source type: ${sourceType}`);\n                return;\n        }\n        // Create link with points metadata (forward link: SOURCE → PLAYER)\n        const link = (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_1__.makeLink)(linkType, {\n            type: sourceEntityType,\n            id: sourceId\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_3__.EntityType.PLAYER,\n            id: playerId\n        }, {\n            points: points,\n            sourceType: sourceType,\n            awardedAt: new Date().toISOString()\n        });\n        await (0,_links_link_registry__WEBPACK_IMPORTED_MODULE_2__.createLink)(link);\n        console.log(`[awardPointsToPlayer] ✅ Link created: ${linkType}`);\n    } catch (error) {\n        console.error(`[awardPointsToPlayer] ❌ Failed to award points:`, error);\n        throw error;\n    }\n}\n/**\r\n * Removes points from a player (rollback function)\r\n * @param playerId - ID of the player to remove points from\r\n * @param points - Points to remove (XP, RP, FP, HP)\r\n */ async function removePointsFromPlayer(playerId, points) {\n    try {\n        console.log(`[removePointsFromPlayer] Removing points from player ${playerId}`);\n        // Get the player\n        const players = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getPlayers();\n        const player = players.find((p)=>p.id === playerId);\n        if (!player) {\n            console.log(`[removePointsFromPlayer] Player ${playerId} not found, skipping`);\n            return;\n        }\n        // Check if any points to remove\n        const hasPoints = (points.xp || 0) > 0 || (points.rp || 0) > 0 || (points.fp || 0) > 0 || (points.hp || 0) > 0;\n        if (!hasPoints) {\n            console.log(`[removePointsFromPlayer] No points to remove, skipping`);\n            return;\n        }\n        // Update player points (ensure they don't go negative)\n        const updatedPlayer = {\n            ...player,\n            points: {\n                xp: Math.max(0, (player.points?.xp || 0) - (points.xp || 0)),\n                rp: Math.max(0, (player.points?.rp || 0) - (points.rp || 0)),\n                fp: Math.max(0, (player.points?.fp || 0) - (points.fp || 0)),\n                hp: Math.max(0, (player.points?.hp || 0) - (points.hp || 0))\n            },\n            // Note: totalPoints are NOT reduced (they track lifetime earnings)\n            updatedAt: new Date()\n        };\n        // Save updated player\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertPlayer(updatedPlayer);\n        console.log(`[removePointsFromPlayer] ✅ Points removed successfully:`, points);\n    } catch (error) {\n        console.error(`[removePointsFromPlayer] ❌ Failed to remove points:`, error);\n        throw error;\n    }\n}\n/**\r\n * Awards jungle coins to a character\r\n * @param characterId - ID of the character to award jungle coins to\r\n * @param amount - Amount of jungle coins to award\r\n * @param sourceId - ID of the entity that triggered the award\r\n * @param sourceType - Type of entity (task, financial, sale)\r\n */ async function awardJungleCoinsToCharacter(characterId, amount, sourceId, sourceType) {\n    try {\n        console.log(`[awardJungleCoinsToCharacter] Awarding ${amount} J$ to character ${characterId} from ${sourceType} ${sourceId}`);\n        if (amount <= 0) {\n            console.log(`[awardJungleCoinsToCharacter] No jungle coins to award, skipping`);\n            return;\n        }\n        // Get the character\n        const characters = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getCharacters();\n        const character = characters.find((c)=>c.id === characterId);\n        if (!character) {\n            console.log(`[awardJungleCoinsToCharacter] Character ${characterId} not found, skipping`);\n            return;\n        }\n        // Update character jungle coins\n        const updatedCharacter = {\n            ...character,\n            jungleCoins: (character.jungleCoins || 0) + amount,\n            updatedAt: new Date()\n        };\n        // Save updated character\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertCharacter(updatedCharacter);\n        console.log(`[awardJungleCoinsToCharacter] ✅ Jungle coins awarded successfully: ${amount} J$`);\n        // NOTE: J$ (Jungle Coins) are CURRENCY that belongs to FINANCIALS\n        // They can be borrowed as AMBASSADOR by Player and Character, but don't belong to them\n        // No link creation needed here - J$ are handled by the Financial system\n        console.log(`[awardJungleCoinsToCharacter] ✅ Jungle coins awarded to character (J$ handled by Financial system)`);\n    } catch (error) {\n        console.error(`[awardJungleCoinsToCharacter] ❌ Failed to award jungle coins:`, error);\n        throw error;\n    }\n}\n/**\r\n * Removes jungle coins from a character (rollback function)\r\n * @param characterId - ID of the character to remove jungle coins from\r\n * @param amount - Amount of jungle coins to remove\r\n */ async function removeJungleCoinsFromCharacter(characterId, amount) {\n    try {\n        console.log(`[removeJungleCoinsFromCharacter] Removing ${amount} J$ from character ${characterId}`);\n        if (amount <= 0) {\n            console.log(`[removeJungleCoinsFromCharacter] No jungle coins to remove, skipping`);\n            return;\n        }\n        // Get the character\n        const characters = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getCharacters();\n        const character = characters.find((c)=>c.id === characterId);\n        if (!character) {\n            console.log(`[removeJungleCoinsFromCharacter] Character ${characterId} not found, skipping`);\n            return;\n        }\n        // Update character jungle coins (ensure they don't go negative)\n        const updatedCharacter = {\n            ...character,\n            jungleCoins: Math.max(0, (character.jungleCoins || 0) - amount),\n            updatedAt: new Date()\n        };\n        // Save updated character\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertCharacter(updatedCharacter);\n        console.log(`[removeJungleCoinsFromCharacter] ✅ Jungle coins removed successfully: ${amount} J$`);\n    } catch (error) {\n        console.error(`[removeJungleCoinsFromCharacter] ❌ Failed to remove jungle coins:`, error);\n        throw error;\n    }\n}\n/**\r\n * Calculates points from sale revenue (1 Point = $100)\r\n * @param revenue - Revenue amount in dollars\r\n * @returns Points to award (distributed across all types)\r\n */ function calculatePointsFromRevenue(revenue) {\n    const pointsAwarded = Math.floor(revenue / 100);\n    if (pointsAwarded <= 0) {\n        return {\n            xp: 0,\n            rp: 0,\n            fp: 0,\n            hp: 0\n        };\n    }\n    // Distribute points across all types equally\n    const pointsPerType = Math.floor(pointsAwarded / 4);\n    const remainder = pointsAwarded % 4;\n    return {\n        xp: pointsPerType + (remainder > 0 ? 1 : 0),\n        rp: pointsPerType + (remainder > 1 ? 1 : 0),\n        fp: pointsPerType + (remainder > 2 ? 1 : 0),\n        hp: pointsPerType\n    };\n}\n/**\r\n * Gets the main player ID (V0.1 constant)\r\n * TODO: V0.2 - Use character.playerId field\r\n */ function getMainPlayerId() {\n    return \"PLAYER_ONE_ID\"; // V0.1 constant\n}\n/**\r\n * Gets the main character ID (V0.1 constant)\r\n * TODO: V0.2 - Use proper character selection\r\n */ function getMainCharacterId() {\n    return \"CHARACTER_ONE_ID\"; // V0.1 constant\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./workflows/points-rewards-utils.ts\n");

/***/ }),

/***/ "(rsc)/./workflows/sale-line-utils.ts":
/*!**************************************!*\
  !*** ./workflows/sale-line-utils.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processBundleSaleLine: () => (/* binding */ processBundleSaleLine),\n/* harmony export */   processItemSaleLine: () => (/* binding */ processItemSaleLine),\n/* harmony export */   processSaleLines: () => (/* binding */ processSaleLines),\n/* harmony export */   processServiceLine: () => (/* binding */ processServiceLine)\n/* harmony export */ });\n/* harmony import */ var _types_enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/enums */ \"(rsc)/./types/enums.ts\");\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/client-api */ \"(rsc)/./lib/client-api.ts\");\n/* harmony import */ var _links_links_workflows__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/links/links-workflows */ \"(rsc)/./links/links-workflows.ts\");\n/* harmony import */ var _links_link_registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/links/link-registry */ \"(rsc)/./links/link-registry.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(rsc)/./data-store/effects-registry.ts\");\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./entities-logging */ \"(rsc)/./workflows/entities-logging.ts\");\n/* harmony import */ var _financial_record_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./financial-record-utils */ \"(rsc)/./workflows/financial-record-utils.ts\");\n// workflows/sale-line-utils.ts\n// Sale line processing utilities\n\n\n\n\n\n\n\n/**\r\n * Process all sale lines in a sale\r\n * Main dispatcher that processes each line based on its kind\r\n */ async function processSaleLines(sale) {\n    try {\n        console.log(`[processSaleLines] Processing ${sale.lines.length} lines for sale: ${sale.counterpartyName}`);\n        // Process each line based on its kind\n        for (const line of sale.lines){\n            console.log(`[processSaleLines] Processing line: ${line.kind}, lineId: ${line.lineId}`);\n            switch(line.kind){\n                case \"item\":\n                    await processItemSaleLine(line, sale);\n                    break;\n                case \"bundle\":\n                    await processBundleSaleLine(line, sale);\n                    break;\n                case \"service\":\n                    await processServiceLine(line, sale);\n                    break;\n                default:\n                    console.warn(`[processSaleLines] Unknown line kind: ${line.kind}`);\n            }\n        }\n        // Create financial record from sale if it has revenue\n        if (sale.totals.totalRevenue > 0) {\n            await (0,_financial_record_utils__WEBPACK_IMPORTED_MODULE_6__.createFinancialRecordFromSale)(sale);\n        }\n        console.log(`[processSaleLines] ✅ Processed all lines for sale: ${sale.counterpartyName}`);\n    } catch (error) {\n        console.error(`[processSaleLines] ❌ Failed to process sale lines for sale ${sale.id}:`, error);\n        throw error;\n    }\n}\n/**\r\n * Process item sale line - reduce item stock at specific site\r\n */ async function processItemSaleLine(line, sale) {\n    try {\n        console.log(`[processItemSaleLine] Processing item sale: ${line.itemId}, quantity: ${line.quantity}`);\n        // Idempotency check\n        const stockDecrementedKey = `sale:${sale.id}:stockDecremented:${line.lineId}`;\n        const hasBeenDecremented = await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.hasEffect)(stockDecrementedKey);\n        if (hasBeenDecremented) {\n            console.log(`[processItemSaleLine] Stock already decremented for line ${line.lineId}, skipping`);\n            return;\n        }\n        // Get the item\n        const items = await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.getItems();\n        const item = items.find((i)=>i.id === line.itemId);\n        if (!item) {\n            console.error(`[processItemSaleLine] Item not found: ${line.itemId}`);\n            return;\n        }\n        // Check if we have enough stock at the sale site\n        // Calculate total available quantity from stock array\n        const totalAvailableQuantity = item.stock.reduce((sum, stockPoint)=>sum + stockPoint.quantity, 0);\n        if (item.quantitySold + line.quantity > totalAvailableQuantity) {\n            console.error(`[processItemSaleLine] Insufficient stock for item ${item.name}. Available: ${totalAvailableQuantity - item.quantitySold}, Required: ${line.quantity}`);\n            return;\n        }\n        // Update item stock\n        const updatedItem = {\n            ...item,\n            quantitySold: item.quantitySold + line.quantity,\n            updatedAt: new Date()\n        };\n        // Mark item as SOLD if all stock is sold\n        if (updatedItem.quantitySold >= totalAvailableQuantity) {\n            updatedItem.status = \"SOLD\";\n        }\n        // Save the updated item\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.upsertItem(updatedItem);\n        // Create SALE_ITEM link\n        const linkMetadata = {\n            quantity: line.quantity,\n            unitPrice: line.unitPrice,\n            total: line.quantity * line.unitPrice,\n            soldAt: sale.saleDate.toISOString(),\n            siteId: sale.siteId\n        };\n        const link = (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_2__.makeLink)(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.SALE_ITEM, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE,\n            id: sale.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM,\n            id: line.itemId\n        }, linkMetadata);\n        await (0,_links_link_registry__WEBPACK_IMPORTED_MODULE_3__.createLink)(link);\n        // Mark effect as complete\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.markEffect)(`sale:${sale.id}:${stockDecrementedKey}`);\n        // Log the effect\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_5__.appendEntityLog)(\"item\", line.itemId, \"SOLD\", {\n            name: item.name,\n            quantity: line.quantity,\n            unitPrice: line.unitPrice,\n            total: line.quantity * line.unitPrice,\n            saleId: sale.id,\n            soldAt: sale.saleDate.toISOString()\n        });\n        console.log(`[processItemSaleLine] ✅ Processed item sale: ${item.name} x${line.quantity}`);\n    } catch (error) {\n        console.error(`[processItemSaleLine] ❌ Failed to process item sale line ${line.lineId}:`, error);\n        throw error;\n    }\n}\n/**\r\n * Process bundle sale line - reduce bundle stock\r\n * TODO: Implement bundle processing logic\r\n */ async function processBundleSaleLine(line, sale) {\n    try {\n        console.log(`[processBundleSaleLine] Processing bundle sale: ${line.itemType}, quantity: ${line.quantity}`);\n        // Idempotency check\n        const bundleProcessedKey = `sale:${sale.id}:bundleProcessed:${line.lineId}`;\n        const hasBeenProcessed = await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.hasEffect)(bundleProcessedKey);\n        if (hasBeenProcessed) {\n            console.log(`[processBundleSaleLine] Bundle already processed for line ${line.lineId}, skipping`);\n            return;\n        }\n        // TODO: Implement bundle processing logic\n        // This would involve:\n        // 1. Finding bundle items of the specified type\n        // 2. Reducing their stock\n        // 3. Creating SALE_ITEM links\n        // 4. Handling itemsPerBundle logic\n        console.log(`[processBundleSaleLine] Bundle processing not yet implemented for ${line.itemType}`);\n        // Mark effect as complete (even though not implemented)\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.markEffect)(`sale:${sale.id}:${bundleProcessedKey}`);\n    } catch (error) {\n        console.error(`[processBundleSaleLine] ❌ Failed to process bundle sale line ${line.lineId}:`, error);\n        throw error;\n    }\n}\n/**\r\n * Process service sale line - create task from service\r\n */ async function processServiceLine(line, sale) {\n    try {\n        console.log(`[processServiceLine] Processing service sale: ${line.description}`);\n        // Idempotency check\n        const taskCreatedKey = `sale:${sale.id}:taskCreated:${line.lineId}`;\n        const hasBeenCreated = await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.hasEffect)(taskCreatedKey);\n        if (hasBeenCreated || !line.createTask) {\n            console.log(`[processServiceLine] Task already created or not requested for line ${line.lineId}, skipping`);\n            return;\n        }\n        // Create task from service line\n        const serviceTask = {\n            id: line.taskId || `task-${sale.id}-${line.lineId}`,\n            name: line.description || \"Service Task\",\n            description: `Service from sale: ${sale.counterpartyName}`,\n            type: line.taskType || \"TASK\",\n            status: \"Created\",\n            priority: \"Normal\",\n            station: line.station,\n            progress: 0,\n            order: Date.now(),\n            cost: line.taskCost || 0,\n            revenue: 0,\n            rewards: line.taskRewards ? {\n                points: line.taskRewards\n            } : {\n                points: {\n                    xp: 0,\n                    rp: 0,\n                    fp: 0,\n                    hp: 0\n                }\n            },\n            isCollected: false,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            links: [],\n            // Ambassador Fields - inherit from sale\n            siteId: sale.siteId,\n            targetSiteId: line.taskTargetSiteId || undefined,\n            sourceSaleId: sale.id,\n            // Additional fields from service line\n            parentId: line.taskParentId || undefined,\n            dueDate: line.taskDueDate || undefined,\n            // Emissary fields for item creation\n            outputItemType: line.outputItemType || undefined,\n            outputItemSubType: line.outputItemSubType || undefined,\n            outputQuantity: line.outputItemQuantity || undefined,\n            outputItemName: line.outputItemName || undefined,\n            outputUnitCost: line.outputUnitCost || undefined,\n            outputItemCollection: line.outputItemCollection || undefined,\n            outputItemPrice: line.outputItemPrice || undefined,\n            isNewItem: line.isNewOutputItem || false,\n            isSold: line.isSold || false,\n            outputItemStatus: \"Created\"\n        };\n        // Save the task\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.upsertTask(serviceTask);\n        // Create SALE_TASK link\n        const linkMetadata = {\n            serviceDescription: line.description,\n            revenue: line.revenue,\n            station: line.station,\n            taskType: line.taskType,\n            createdFrom: \"service_sale\"\n        };\n        const link = (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_2__.makeLink)(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.SALE_TASK, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE,\n            id: sale.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n            id: serviceTask.id\n        }, linkMetadata);\n        await (0,_links_link_registry__WEBPACK_IMPORTED_MODULE_3__.createLink)(link);\n        // Mark effect as complete\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.markEffect)(`sale:${sale.id}:${taskCreatedKey}`);\n        // Log the task creation\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_5__.appendEntityLog)(\"task\", serviceTask.id, \"CREATED\", {\n            name: serviceTask.name,\n            createdFrom: \"service_sale\",\n            saleId: sale.id,\n            serviceDescription: line.description,\n            station: line.station\n        });\n        console.log(`[processServiceLine] ✅ Created task from service: ${serviceTask.name}`);\n    } catch (error) {\n        console.error(`[processServiceLine] ❌ Failed to process service sale line ${line.lineId}:`, error);\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./workflows/sale-line-utils.ts\n");

/***/ }),

/***/ "(rsc)/./workflows/update-propagation-utils.ts":
/*!***********************************************!*\
  !*** ./workflows/update-propagation-utils.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasFinancialPropsChanged: () => (/* binding */ hasFinancialPropsChanged),\n/* harmony export */   hasJungleCoinsChanged: () => (/* binding */ hasJungleCoinsChanged),\n/* harmony export */   hasLinesChanged: () => (/* binding */ hasLinesChanged),\n/* harmony export */   hasOutputPropsChanged: () => (/* binding */ hasOutputPropsChanged),\n/* harmony export */   hasRevenueChanged: () => (/* binding */ hasRevenueChanged),\n/* harmony export */   hasRewardsChanged: () => (/* binding */ hasRewardsChanged),\n/* harmony export */   updateCharacterJungleCoinsFromRecord: () => (/* binding */ updateCharacterJungleCoinsFromRecord),\n/* harmony export */   updateFinancialRecordsFromSale: () => (/* binding */ updateFinancialRecordsFromSale),\n/* harmony export */   updateFinancialRecordsFromTask: () => (/* binding */ updateFinancialRecordsFromTask),\n/* harmony export */   updateItemsCreatedByRecord: () => (/* binding */ updateItemsCreatedByRecord),\n/* harmony export */   updateItemsCreatedByTask: () => (/* binding */ updateItemsCreatedByTask),\n/* harmony export */   updateItemsFromSale: () => (/* binding */ updateItemsFromSale),\n/* harmony export */   updatePlayerPointsFromSource: () => (/* binding */ updatePlayerPointsFromSource),\n/* harmony export */   updateTasksFromFinancialRecord: () => (/* binding */ updateTasksFromFinancialRecord)\n/* harmony export */ });\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/client-api */ \"(rsc)/./lib/client-api.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(rsc)/./data-store/effects-registry.ts\");\n// workflows/update-propagation-utils.ts\n// Comprehensive update propagation across ALL entity relationships\n\n\n// ============================================================================\n// TASK → FINANCIAL RECORD PROPAGATION\n// ============================================================================\nasync function updateFinancialRecordsFromTask(task, previousTask) {\n    try {\n        console.log(`[updateFinancialRecordsFromTask] Updating financial records for task: ${task.name}`);\n        // Find financial records created from this task\n        const allFinancials = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getFinancialRecords();\n        const relatedRecords = allFinancials.filter((record)=>record.sourceTaskId === task.id);\n        for (const record of relatedRecords){\n            const updateKey = `updateFinancialFromTask:${task.id}:${record.id}:${task.updatedAt?.getTime()}`;\n            if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(updateKey)) {\n                console.log(`[updateFinancialRecordsFromTask] ⏭️ Already updated record: ${record.id}`);\n                continue;\n            }\n            // Check if financial properties changed\n            const financialPropsChanged = task.cost !== previousTask.cost || task.revenue !== previousTask.revenue || task.isNotPaid !== previousTask.isNotPaid || task.isNotCharged !== previousTask.isNotCharged || task.name !== previousTask.name || task.station !== previousTask.station;\n            if (financialPropsChanged) {\n                const updatedRecord = {\n                    ...record,\n                    cost: task.cost,\n                    revenue: task.revenue,\n                    isNotPaid: task.isNotPaid,\n                    isNotCharged: task.isNotCharged,\n                    name: task.name,\n                    station: task.station,\n                    updatedAt: new Date()\n                };\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertFinancialRecord(updatedRecord);\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(updateKey);\n                console.log(`[updateFinancialRecordsFromTask] ✅ Updated financial record: ${record.id}`);\n            }\n        }\n    } catch (error) {\n        console.error(`[updateFinancialRecordsFromTask] Error updating financial records:`, error);\n    }\n}\n// ============================================================================\n// FINANCIAL RECORD → TASK PROPAGATION\n// ============================================================================\nasync function updateTasksFromFinancialRecord(record, previousRecord) {\n    try {\n        console.log(`[updateTasksFromFinancialRecord] Updating tasks for financial record: ${record.name}`);\n        // Find tasks that created this financial record\n        const allTasks = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getTasks();\n        const relatedTasks = allTasks.filter((task)=>task.id === record.sourceTaskId);\n        for (const task of relatedTasks){\n            const updateKey = `updateTaskFromFinancial:${record.id}:${task.id}:${record.updatedAt?.getTime()}`;\n            if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(updateKey)) {\n                console.log(`[updateTasksFromFinancialRecord] ⏭️ Already updated task: ${task.id}`);\n                continue;\n            }\n            // Check if financial properties changed\n            const financialPropsChanged = record.cost !== previousRecord.cost || record.revenue !== previousRecord.revenue || record.isNotPaid !== previousRecord.isNotPaid || record.isNotCharged !== previousRecord.isNotCharged || record.name !== previousRecord.name || record.station !== previousRecord.station;\n            if (financialPropsChanged) {\n                const updatedTask = {\n                    ...task,\n                    cost: record.cost,\n                    revenue: record.revenue,\n                    isNotPaid: record.isNotPaid,\n                    isNotCharged: record.isNotCharged,\n                    name: record.name,\n                    station: record.station,\n                    updatedAt: new Date()\n                };\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertTask(updatedTask);\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(updateKey);\n                console.log(`[updateTasksFromFinancialRecord] ✅ Updated task: ${task.id}`);\n            }\n        }\n    } catch (error) {\n        console.error(`[updateTasksFromFinancialRecord] Error updating tasks:`, error);\n    }\n}\n// ============================================================================\n// TASK → ITEM PROPAGATION (Enhanced)\n// ============================================================================\nasync function updateItemsCreatedByTask(task, previousTask) {\n    try {\n        console.log(`[updateItemsCreatedByTask] Updating items for task: ${task.name}`);\n        // Find items created from this task\n        const allItems = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getItems();\n        const relatedItems = allItems.filter((item)=>item.sourceTaskId === task.id);\n        for (const item of relatedItems){\n            const updateKey = `updateItemFromTask:${task.id}:${item.id}:${task.updatedAt?.getTime()}`;\n            if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(updateKey)) {\n                console.log(`[updateItemsCreatedByTask] ⏭️ Already updated item: ${item.id}`);\n                continue;\n            }\n            // Check if output properties changed\n            const outputPropsChanged = task.outputQuantity !== previousTask.outputQuantity || task.outputItemName !== previousTask.outputItemName || task.outputUnitCost !== previousTask.outputUnitCost || task.outputItemPrice !== previousTask.outputItemPrice || task.station !== previousTask.station;\n            if (outputPropsChanged) {\n                const updatedItem = {\n                    ...item,\n                    name: task.outputItemName || item.name,\n                    unitCost: task.outputUnitCost || item.unitCost,\n                    price: task.outputItemPrice || item.price,\n                    station: task.station || item.station,\n                    updatedAt: new Date()\n                };\n                // Update stock quantity if it changed\n                if (task.outputQuantity !== previousTask.outputQuantity) {\n                    const quantityDiff = (task.outputQuantity || 0) - (previousTask.outputQuantity || 0);\n                    if (quantityDiff !== 0) {\n                        // Update the first stock point (or create one if none exists)\n                        if (updatedItem.stock && updatedItem.stock.length > 0) {\n                            updatedItem.stock[0].quantity += quantityDiff;\n                        } else {\n                            updatedItem.stock = [\n                                {\n                                    siteId: task.siteId || \"default\",\n                                    quantity: quantityDiff\n                                }\n                            ];\n                        }\n                    }\n                }\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertItem(updatedItem);\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(updateKey);\n                console.log(`[updateItemsCreatedByTask] ✅ Updated item: ${item.id}`);\n            }\n        }\n    } catch (error) {\n        console.error(`[updateItemsCreatedByTask] Error updating items:`, error);\n    }\n}\n// ============================================================================\n// FINANCIAL RECORD → ITEM PROPAGATION (Enhanced)\n// ============================================================================\nasync function updateItemsCreatedByRecord(record, previousRecord) {\n    try {\n        console.log(`[updateItemsCreatedByRecord] Updating items for financial record: ${record.name}`);\n        // Find items created from this financial record\n        const allItems = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getItems();\n        const relatedItems = allItems.filter((item)=>item.sourceRecordId === record.id);\n        for (const item of relatedItems){\n            const updateKey = `updateItemFromRecord:${record.id}:${item.id}:${record.updatedAt?.getTime()}`;\n            if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(updateKey)) {\n                console.log(`[updateItemsCreatedByRecord] ⏭️ Already updated item: ${item.id}`);\n                continue;\n            }\n            // Check if output properties changed\n            const outputPropsChanged = record.outputQuantity !== previousRecord.outputQuantity || record.outputItemName !== previousRecord.outputItemName || record.outputUnitCost !== previousRecord.outputUnitCost || record.outputItemPrice !== previousRecord.outputItemPrice || record.station !== previousRecord.station;\n            if (outputPropsChanged) {\n                const updatedItem = {\n                    ...item,\n                    name: record.outputItemName || item.name,\n                    unitCost: record.outputUnitCost || item.unitCost,\n                    price: record.outputItemPrice || item.price,\n                    station: record.station || item.station,\n                    updatedAt: new Date()\n                };\n                // Update stock quantity if it changed\n                if (record.outputQuantity !== previousRecord.outputQuantity) {\n                    const quantityDiff = (record.outputQuantity || 0) - (previousRecord.outputQuantity || 0);\n                    if (quantityDiff !== 0) {\n                        // Update the first stock point (or create one if none exists)\n                        if (updatedItem.stock && updatedItem.stock.length > 0) {\n                            updatedItem.stock[0].quantity += quantityDiff;\n                        } else {\n                            updatedItem.stock = [\n                                {\n                                    siteId: record.siteId || \"default\",\n                                    quantity: quantityDiff\n                                }\n                            ];\n                        }\n                    }\n                }\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertItem(updatedItem);\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(updateKey);\n                console.log(`[updateItemsCreatedByRecord] ✅ Updated item: ${item.id}`);\n            }\n        }\n    } catch (error) {\n        console.error(`[updateItemsCreatedByRecord] Error updating items:`, error);\n    }\n}\n// ============================================================================\n// SALE → FINANCIAL RECORD PROPAGATION\n// ============================================================================\nasync function updateFinancialRecordsFromSale(sale, previousSale) {\n    try {\n        console.log(`[updateFinancialRecordsFromSale] Updating financial records for sale: ${sale.name}`);\n        // Find financial records created from this sale\n        const allFinancials = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getFinancialRecords();\n        const relatedRecords = allFinancials.filter((record)=>record.sourceSaleId === sale.id);\n        for (const record of relatedRecords){\n            const updateKey = `updateFinancialFromSale:${sale.id}:${record.id}:${sale.updatedAt?.getTime()}`;\n            if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(updateKey)) {\n                console.log(`[updateFinancialRecordsFromSale] ⏭️ Already updated record: ${record.id}`);\n                continue;\n            }\n            // Check if revenue properties changed\n            const revenuePropsChanged = sale.totals?.totalRevenue !== previousSale.totals?.totalRevenue || sale.isNotPaid !== previousSale.isNotPaid || sale.status !== previousSale.status;\n            if (revenuePropsChanged) {\n                const updatedRecord = {\n                    ...record,\n                    revenue: sale.totals?.totalRevenue || 0,\n                    isNotPaid: sale.isNotPaid,\n                    isNotCharged: sale.status !== \"CHARGED\",\n                    updatedAt: new Date()\n                };\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertFinancialRecord(updatedRecord);\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(updateKey);\n                console.log(`[updateFinancialRecordsFromSale] ✅ Updated financial record: ${record.id}`);\n            }\n        }\n    } catch (error) {\n        console.error(`[updateFinancialRecordsFromSale] Error updating financial records:`, error);\n    }\n}\n// ============================================================================\n// SALE → ITEM PROPAGATION (Stock Updates)\n// ============================================================================\nasync function updateItemsFromSale(sale, previousSale) {\n    try {\n        console.log(`[updateItemsFromSale] Updating items for sale: ${sale.name}`);\n        // Check if sale lines changed\n        const linesChanged = sale.lines?.length !== previousSale.lines?.length || JSON.stringify(sale.lines) !== JSON.stringify(previousSale.lines);\n        if (!linesChanged) {\n            console.log(`[updateItemsFromSale] No line changes detected`);\n            return;\n        }\n        // Process each sale line\n        for (const line of sale.lines || []){\n            if (line.kind === \"item\" && \"itemId\" in line && line.itemId) {\n                const updateKey = `updateItemFromSale:${sale.id}:${line.itemId}:${sale.updatedAt?.getTime()}`;\n                if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(updateKey)) {\n                    console.log(`[updateItemsFromSale] ⏭️ Already updated item: ${line.itemId}`);\n                    continue;\n                }\n                // Get the item\n                const item = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getItemById(line.itemId);\n                if (!item) {\n                    console.warn(`[updateItemsFromSale] Item not found: ${line.itemId}`);\n                    continue;\n                }\n                // Update quantity sold\n                const updatedItem = {\n                    ...item,\n                    quantitySold: (item.quantitySold || 0) + (line.quantity || 0),\n                    updatedAt: new Date()\n                };\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertItem(updatedItem);\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(updateKey);\n                console.log(`[updateItemsFromSale] ✅ Updated item: ${line.itemId}`);\n            }\n        }\n    } catch (error) {\n        console.error(`[updateItemsFromSale] Error updating items:`, error);\n    }\n}\n// ============================================================================\n// TASK/FINANCIAL/SALE → PLAYER PROPAGATION (Points Delta)\n// ============================================================================\nasync function updatePlayerPointsFromSource(sourceType, newSource, oldSource) {\n    try {\n        console.log(`[updatePlayerPointsFromSource] Updating player points from ${sourceType}: ${newSource.name}`);\n        // Calculate points delta\n        let pointsDelta = {\n            xp: 0,\n            rp: 0,\n            fp: 0,\n            hp: 0\n        };\n        if (sourceType === \"task\" || sourceType === \"financial\") {\n            const newPoints = newSource.rewards?.points || {\n                xp: 0,\n                rp: 0,\n                fp: 0,\n                hp: 0\n            };\n            const oldPoints = oldSource.rewards?.points || {\n                xp: 0,\n                rp: 0,\n                fp: 0,\n                hp: 0\n            };\n            pointsDelta = {\n                xp: (newPoints.xp || 0) - (oldPoints.xp || 0),\n                rp: (newPoints.rp || 0) - (oldPoints.rp || 0),\n                fp: (newPoints.fp || 0) - (oldPoints.fp || 0),\n                hp: (newPoints.hp || 0) - (oldPoints.hp || 0)\n            };\n        } else if (sourceType === \"sale\") {\n            // Calculate points from revenue (simplified)\n            const newRevenue = newSource.totals?.totalRevenue || 0;\n            const oldRevenue = oldSource.totals?.totalRevenue || 0;\n            const revenueDelta = newRevenue - oldRevenue;\n            // Convert revenue to points (simplified calculation)\n            pointsDelta = {\n                xp: Math.floor(revenueDelta * 0.1),\n                rp: Math.floor(revenueDelta * 0.05),\n                fp: Math.floor(revenueDelta * 0.03),\n                hp: Math.floor(revenueDelta * 0.02)\n            };\n        }\n        // Skip if no points change\n        if (pointsDelta.xp === 0 && pointsDelta.rp === 0 && pointsDelta.fp === 0 && pointsDelta.hp === 0) {\n            console.log(`[updatePlayerPointsFromSource] No points change detected`);\n            return;\n        }\n        // Find the player (assuming single player for now)\n        const players = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getPlayers();\n        const player = players[0]; // Simplified - in real system, find by source relationship\n        if (!player) {\n            console.warn(`[updatePlayerPointsFromSource] No player found`);\n            return;\n        }\n        const updateKey = `updatePlayerPoints:${sourceType}:${newSource.id}:${player.id}:${newSource.updatedAt?.getTime()}`;\n        if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(updateKey)) {\n            console.log(`[updatePlayerPointsFromSource] ⏭️ Already updated player: ${player.id}`);\n            return;\n        }\n        // Update player points\n        const updatedPlayer = {\n            ...player,\n            points: {\n                xp: (player.points?.xp || 0) + pointsDelta.xp,\n                rp: (player.points?.rp || 0) + pointsDelta.rp,\n                fp: (player.points?.fp || 0) + pointsDelta.fp,\n                hp: (player.points?.hp || 0) + pointsDelta.hp\n            },\n            updatedAt: new Date()\n        };\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertPlayer(updatedPlayer);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(updateKey);\n        console.log(`[updatePlayerPointsFromSource] ✅ Updated player points: ${player.id}`);\n    } catch (error) {\n        console.error(`[updatePlayerPointsFromSource] Error updating player points:`, error);\n    }\n}\n// ============================================================================\n// FINANCIAL → CHARACTER PROPAGATION (Jungle Coins Delta)\n// ============================================================================\nasync function updateCharacterJungleCoinsFromRecord(record, previousRecord) {\n    try {\n        console.log(`[updateCharacterJungleCoinsFromRecord] Updating character jungle coins for record: ${record.name}`);\n        // Calculate jungle coins delta\n        const newJungleCoins = record.jungleCoins || 0;\n        const oldJungleCoins = previousRecord.jungleCoins || 0;\n        const jungleCoinsDelta = newJungleCoins - oldJungleCoins;\n        if (jungleCoinsDelta === 0) {\n            console.log(`[updateCharacterJungleCoinsFromRecord] No jungle coins change detected`);\n            return;\n        }\n        // Find characters related to this financial record\n        const allCharacters = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getCharacters();\n        const relatedCharacters = allCharacters.filter((char)=>char.id === record.customerCharacterId);\n        for (const character of relatedCharacters){\n            const updateKey = `updateCharacterJungleCoins:${record.id}:${character.id}:${record.updatedAt?.getTime()}`;\n            if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(updateKey)) {\n                console.log(`[updateCharacterJungleCoinsFromRecord] ⏭️ Already updated character: ${character.id}`);\n                continue;\n            }\n            // Update character jungle coins\n            const updatedCharacter = {\n                ...character,\n                jungleCoins: (character.jungleCoins || 0) + jungleCoinsDelta,\n                updatedAt: new Date()\n            };\n            await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertCharacter(updatedCharacter);\n            await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(updateKey);\n            console.log(`[updateCharacterJungleCoinsFromRecord] ✅ Updated character jungle coins: ${character.id}`);\n        }\n    } catch (error) {\n        console.error(`[updateCharacterJungleCoinsFromRecord] Error updating character jungle coins:`, error);\n    }\n}\n// ============================================================================\n// PROPERTY CHANGE DETECTION HELPERS\n// ============================================================================\nfunction hasFinancialPropsChanged(newEntity, oldEntity) {\n    return newEntity.cost !== oldEntity.cost || newEntity.revenue !== oldEntity.revenue || newEntity.isNotPaid !== oldEntity.isNotPaid || newEntity.isNotCharged !== oldEntity.isNotCharged || newEntity.name !== oldEntity.name || newEntity.station !== oldEntity.station;\n}\nfunction hasOutputPropsChanged(newEntity, oldEntity) {\n    return newEntity.outputQuantity !== oldEntity.outputQuantity || newEntity.outputItemName !== oldEntity.outputItemName || newEntity.outputUnitCost !== oldEntity.outputUnitCost || newEntity.outputItemPrice !== oldEntity.outputItemPrice || newEntity.station !== oldEntity.station;\n}\nfunction hasRewardsChanged(newEntity, oldEntity) {\n    const newRewards = newEntity.rewards?.points || {\n        xp: 0,\n        rp: 0,\n        fp: 0,\n        hp: 0\n    };\n    const oldRewards = oldEntity.rewards?.points || {\n        xp: 0,\n        rp: 0,\n        fp: 0,\n        hp: 0\n    };\n    return newRewards.xp !== oldRewards.xp || newRewards.rp !== oldRewards.rp || newRewards.fp !== oldRewards.fp || newRewards.hp !== oldRewards.hp;\n}\nfunction hasJungleCoinsChanged(newEntity, oldEntity) {\n    return (newEntity.jungleCoins || 0) !== (oldEntity.jungleCoins || 0);\n}\nfunction hasRevenueChanged(newEntity, oldEntity) {\n    return (newEntity.totals?.totalRevenue || 0) !== (oldEntity.totals?.totalRevenue || 0);\n}\nfunction hasLinesChanged(newEntity, oldEntity) {\n    return JSON.stringify(newEntity.lines) !== JSON.stringify(oldEntity.lines);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./workflows/update-propagation-utils.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@upstash","vendor-chunks/@vercel","vendor-chunks/uncrypto","vendor-chunks/uuid","vendor-chunks/jose"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsales%2Froute&page=%2Fapi%2Fsales%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsales%2Froute.ts&appDir=C%3A%5CUsers%5CUsuario%5CAKILES%5CGAME%20WEB%20APP%5CSPLIT%5Cthegame%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUsuario%5CAKILES%5CGAME%20WEB%20APP%5CSPLIT%5Cthegame&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();