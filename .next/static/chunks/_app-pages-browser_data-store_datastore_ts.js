/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_data-store_datastore_ts"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHFDQUFxQyxxQkFBTSxpRkFBaUYscUJBQU0sa0VBQWtFLHFCQUFNLFdBQVcsbUJBQU8sQ0FBQyw0R0FBNEI7O0FBRXpQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanM/ZWEzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfZ2xvYmFsX3Byb2Nlc3MsIF9nbG9iYWxfcHJvY2VzczE7XG5tb2R1bGUuZXhwb3J0cyA9ICgoX2dsb2JhbF9wcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MuZW52KSAmJiB0eXBlb2YgKChfZ2xvYmFsX3Byb2Nlc3MxID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MxLmVudikgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwucHJvY2VzcyA6IHJlcXVpcmUoXCJuZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={675:function(e,r){\"use strict\";r.byteLength=byteLength;r.toByteArray=toByteArray;r.fromByteArray=fromByteArray;var t=[];var f=[];var n=typeof Uint8Array!==\"undefined\"?Uint8Array:Array;var i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(var o=0,u=i.length;o<u;++o){t[o]=i[o];f[i.charCodeAt(o)]=o}f[\"-\".charCodeAt(0)]=62;f[\"_\".charCodeAt(0)]=63;function getLens(e){var r=e.length;if(r%4>0){throw new Error(\"Invalid string. Length must be a multiple of 4\")}var t=e.indexOf(\"=\");if(t===-1)t=r;var f=t===r?0:4-t%4;return[t,f]}function byteLength(e){var r=getLens(e);var t=r[0];var f=r[1];return(t+f)*3/4-f}function _byteLength(e,r,t){return(r+t)*3/4-t}function toByteArray(e){var r;var t=getLens(e);var i=t[0];var o=t[1];var u=new n(_byteLength(e,i,o));var a=0;var s=o>0?i-4:i;var h;for(h=0;h<s;h+=4){r=f[e.charCodeAt(h)]<<18|f[e.charCodeAt(h+1)]<<12|f[e.charCodeAt(h+2)]<<6|f[e.charCodeAt(h+3)];u[a++]=r>>16&255;u[a++]=r>>8&255;u[a++]=r&255}if(o===2){r=f[e.charCodeAt(h)]<<2|f[e.charCodeAt(h+1)]>>4;u[a++]=r&255}if(o===1){r=f[e.charCodeAt(h)]<<10|f[e.charCodeAt(h+1)]<<4|f[e.charCodeAt(h+2)]>>2;u[a++]=r>>8&255;u[a++]=r&255}return u}function tripletToBase64(e){return t[e>>18&63]+t[e>>12&63]+t[e>>6&63]+t[e&63]}function encodeChunk(e,r,t){var f;var n=[];for(var i=r;i<t;i+=3){f=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255);n.push(tripletToBase64(f))}return n.join(\"\")}function fromByteArray(e){var r;var f=e.length;var n=f%3;var i=[];var o=16383;for(var u=0,a=f-n;u<a;u+=o){i.push(encodeChunk(e,u,u+o>a?a:u+o))}if(n===1){r=e[f-1];i.push(t[r>>2]+t[r<<4&63]+\"==\")}else if(n===2){r=(e[f-2]<<8)+e[f-1];i.push(t[r>>10]+t[r>>4&63]+t[r<<2&63]+\"=\")}return i.join(\"\")}},72:function(e,r,t){\"use strict\";\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */var f=t(675);var n=t(783);var i=typeof Symbol===\"function\"&&typeof Symbol.for===\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;r.Buffer=Buffer;r.SlowBuffer=SlowBuffer;r.INSPECT_MAX_BYTES=50;var o=2147483647;r.kMaxLength=o;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!==\"undefined\"&&typeof console.error===\"function\"){console.error(\"This browser lacks typed array (Uint8Array) support which is required by \"+\"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\")}function typedArraySupport(){try{var e=new Uint8Array(1);var r={foo:function(){return 42}};Object.setPrototypeOf(r,Uint8Array.prototype);Object.setPrototypeOf(e,r);return e.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,\"parent\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer}});Object.defineProperty(Buffer.prototype,\"offset\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset}});function createBuffer(e){if(e>o){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}var r=new Uint8Array(e);Object.setPrototypeOf(r,Buffer.prototype);return r}function Buffer(e,r,t){if(typeof e===\"number\"){if(typeof r===\"string\"){throw new TypeError('The \"string\" argument must be of type string. Received type number')}return allocUnsafe(e)}return from(e,r,t)}Buffer.poolSize=8192;function from(e,r,t){if(typeof e===\"string\"){return fromString(e,r)}if(ArrayBuffer.isView(e)){return fromArrayLike(e)}if(e==null){throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer)){return fromArrayBuffer(e,r,t)}if(typeof SharedArrayBuffer!==\"undefined\"&&(isInstance(e,SharedArrayBuffer)||e&&isInstance(e.buffer,SharedArrayBuffer))){return fromArrayBuffer(e,r,t)}if(typeof e===\"number\"){throw new TypeError('The \"value\" argument must not be of type number. Received type number')}var f=e.valueOf&&e.valueOf();if(f!=null&&f!==e){return Buffer.from(f,r,t)}var n=fromObject(e);if(n)return n;if(typeof Symbol!==\"undefined\"&&Symbol.toPrimitive!=null&&typeof e[Symbol.toPrimitive]===\"function\"){return Buffer.from(e[Symbol.toPrimitive](\"string\"),r,t)}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}Buffer.from=function(e,r,t){return from(e,r,t)};Object.setPrototypeOf(Buffer.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer,Uint8Array);function assertSize(e){if(typeof e!==\"number\"){throw new TypeError('\"size\" argument must be of type number')}else if(e<0){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}}function alloc(e,r,t){assertSize(e);if(e<=0){return createBuffer(e)}if(r!==undefined){return typeof t===\"string\"?createBuffer(e).fill(r,t):createBuffer(e).fill(r)}return createBuffer(e)}Buffer.alloc=function(e,r,t){return alloc(e,r,t)};function allocUnsafe(e){assertSize(e);return createBuffer(e<0?0:checked(e)|0)}Buffer.allocUnsafe=function(e){return allocUnsafe(e)};Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)};function fromString(e,r){if(typeof r!==\"string\"||r===\"\"){r=\"utf8\"}if(!Buffer.isEncoding(r)){throw new TypeError(\"Unknown encoding: \"+r)}var t=byteLength(e,r)|0;var f=createBuffer(t);var n=f.write(e,r);if(n!==t){f=f.slice(0,n)}return f}function fromArrayLike(e){var r=e.length<0?0:checked(e.length)|0;var t=createBuffer(r);for(var f=0;f<r;f+=1){t[f]=e[f]&255}return t}function fromArrayBuffer(e,r,t){if(r<0||e.byteLength<r){throw new RangeError('\"offset\" is outside of buffer bounds')}if(e.byteLength<r+(t||0)){throw new RangeError('\"length\" is outside of buffer bounds')}var f;if(r===undefined&&t===undefined){f=new Uint8Array(e)}else if(t===undefined){f=new Uint8Array(e,r)}else{f=new Uint8Array(e,r,t)}Object.setPrototypeOf(f,Buffer.prototype);return f}function fromObject(e){if(Buffer.isBuffer(e)){var r=checked(e.length)|0;var t=createBuffer(r);if(t.length===0){return t}e.copy(t,0,0,r);return t}if(e.length!==undefined){if(typeof e.length!==\"number\"||numberIsNaN(e.length)){return createBuffer(0)}return fromArrayLike(e)}if(e.type===\"Buffer\"&&Array.isArray(e.data)){return fromArrayLike(e.data)}}function checked(e){if(e>=o){throw new RangeError(\"Attempt to allocate Buffer larger than maximum \"+\"size: 0x\"+o.toString(16)+\" bytes\")}return e|0}function SlowBuffer(e){if(+e!=e){e=0}return Buffer.alloc(+e)}Buffer.isBuffer=function isBuffer(e){return e!=null&&e._isBuffer===true&&e!==Buffer.prototype};Buffer.compare=function compare(e,r){if(isInstance(e,Uint8Array))e=Buffer.from(e,e.offset,e.byteLength);if(isInstance(r,Uint8Array))r=Buffer.from(r,r.offset,r.byteLength);if(!Buffer.isBuffer(e)||!Buffer.isBuffer(r)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array')}if(e===r)return 0;var t=e.length;var f=r.length;for(var n=0,i=Math.min(t,f);n<i;++n){if(e[n]!==r[n]){t=e[n];f=r[n];break}}if(t<f)return-1;if(f<t)return 1;return 0};Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return true;default:return false}};Buffer.concat=function concat(e,r){if(!Array.isArray(e)){throw new TypeError('\"list\" argument must be an Array of Buffers')}if(e.length===0){return Buffer.alloc(0)}var t;if(r===undefined){r=0;for(t=0;t<e.length;++t){r+=e[t].length}}var f=Buffer.allocUnsafe(r);var n=0;for(t=0;t<e.length;++t){var i=e[t];if(isInstance(i,Uint8Array)){i=Buffer.from(i)}if(!Buffer.isBuffer(i)){throw new TypeError('\"list\" argument must be an Array of Buffers')}i.copy(f,n);n+=i.length}return f};function byteLength(e,r){if(Buffer.isBuffer(e)){return e.length}if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer)){return e.byteLength}if(typeof e!==\"string\"){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\"Received type \"+typeof e)}var t=e.length;var f=arguments.length>2&&arguments[2]===true;if(!f&&t===0)return 0;var n=false;for(;;){switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return utf8ToBytes(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return base64ToBytes(e).length;default:if(n){return f?-1:utf8ToBytes(e).length}r=(\"\"+r).toLowerCase();n=true}}}Buffer.byteLength=byteLength;function slowToString(e,r,t){var f=false;if(r===undefined||r<0){r=0}if(r>this.length){return\"\"}if(t===undefined||t>this.length){t=this.length}if(t<=0){return\"\"}t>>>=0;r>>>=0;if(t<=r){return\"\"}if(!e)e=\"utf8\";while(true){switch(e){case\"hex\":return hexSlice(this,r,t);case\"utf8\":case\"utf-8\":return utf8Slice(this,r,t);case\"ascii\":return asciiSlice(this,r,t);case\"latin1\":case\"binary\":return latin1Slice(this,r,t);case\"base64\":return base64Slice(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return utf16leSlice(this,r,t);default:if(f)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase();f=true}}}Buffer.prototype._isBuffer=true;function swap(e,r,t){var f=e[r];e[r]=e[t];e[t]=f}Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!==0){throw new RangeError(\"Buffer size must be a multiple of 16-bits\")}for(var r=0;r<e;r+=2){swap(this,r,r+1)}return this};Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!==0){throw new RangeError(\"Buffer size must be a multiple of 32-bits\")}for(var r=0;r<e;r+=4){swap(this,r,r+3);swap(this,r+1,r+2)}return this};Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!==0){throw new RangeError(\"Buffer size must be a multiple of 64-bits\")}for(var r=0;r<e;r+=8){swap(this,r,r+7);swap(this,r+1,r+6);swap(this,r+2,r+5);swap(this,r+3,r+4)}return this};Buffer.prototype.toString=function toString(){var e=this.length;if(e===0)return\"\";if(arguments.length===0)return utf8Slice(this,0,e);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(this===e)return true;return Buffer.compare(this,e)===0};Buffer.prototype.inspect=function inspect(){var e=\"\";var t=r.INSPECT_MAX_BYTES;e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim();if(this.length>t)e+=\" ... \";return\"<Buffer \"+e+\">\"};if(i){Buffer.prototype[i]=Buffer.prototype.inspect}Buffer.prototype.compare=function compare(e,r,t,f,n){if(isInstance(e,Uint8Array)){e=Buffer.from(e,e.offset,e.byteLength)}if(!Buffer.isBuffer(e)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+\"Received type \"+typeof e)}if(r===undefined){r=0}if(t===undefined){t=e?e.length:0}if(f===undefined){f=0}if(n===undefined){n=this.length}if(r<0||t>e.length||f<0||n>this.length){throw new RangeError(\"out of range index\")}if(f>=n&&r>=t){return 0}if(f>=n){return-1}if(r>=t){return 1}r>>>=0;t>>>=0;f>>>=0;n>>>=0;if(this===e)return 0;var i=n-f;var o=t-r;var u=Math.min(i,o);var a=this.slice(f,n);var s=e.slice(r,t);for(var h=0;h<u;++h){if(a[h]!==s[h]){i=a[h];o=s[h];break}}if(i<o)return-1;if(o<i)return 1;return 0};function bidirectionalIndexOf(e,r,t,f,n){if(e.length===0)return-1;if(typeof t===\"string\"){f=t;t=0}else if(t>2147483647){t=2147483647}else if(t<-2147483648){t=-2147483648}t=+t;if(numberIsNaN(t)){t=n?0:e.length-1}if(t<0)t=e.length+t;if(t>=e.length){if(n)return-1;else t=e.length-1}else if(t<0){if(n)t=0;else return-1}if(typeof r===\"string\"){r=Buffer.from(r,f)}if(Buffer.isBuffer(r)){if(r.length===0){return-1}return arrayIndexOf(e,r,t,f,n)}else if(typeof r===\"number\"){r=r&255;if(typeof Uint8Array.prototype.indexOf===\"function\"){if(n){return Uint8Array.prototype.indexOf.call(e,r,t)}else{return Uint8Array.prototype.lastIndexOf.call(e,r,t)}}return arrayIndexOf(e,[r],t,f,n)}throw new TypeError(\"val must be string, number or Buffer\")}function arrayIndexOf(e,r,t,f,n){var i=1;var o=e.length;var u=r.length;if(f!==undefined){f=String(f).toLowerCase();if(f===\"ucs2\"||f===\"ucs-2\"||f===\"utf16le\"||f===\"utf-16le\"){if(e.length<2||r.length<2){return-1}i=2;o/=2;u/=2;t/=2}}function read(e,r){if(i===1){return e[r]}else{return e.readUInt16BE(r*i)}}var a;if(n){var s=-1;for(a=t;a<o;a++){if(read(e,a)===read(r,s===-1?0:a-s)){if(s===-1)s=a;if(a-s+1===u)return s*i}else{if(s!==-1)a-=a-s;s=-1}}}else{if(t+u>o)t=o-u;for(a=t;a>=0;a--){var h=true;for(var c=0;c<u;c++){if(read(e,a+c)!==read(r,c)){h=false;break}}if(h)return a}}return-1}Buffer.prototype.includes=function includes(e,r,t){return this.indexOf(e,r,t)!==-1};Buffer.prototype.indexOf=function indexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,false)};function hexWrite(e,r,t,f){t=Number(t)||0;var n=e.length-t;if(!f){f=n}else{f=Number(f);if(f>n){f=n}}var i=r.length;if(f>i/2){f=i/2}for(var o=0;o<f;++o){var u=parseInt(r.substr(o*2,2),16);if(numberIsNaN(u))return o;e[t+o]=u}return o}function utf8Write(e,r,t,f){return blitBuffer(utf8ToBytes(r,e.length-t),e,t,f)}function asciiWrite(e,r,t,f){return blitBuffer(asciiToBytes(r),e,t,f)}function latin1Write(e,r,t,f){return asciiWrite(e,r,t,f)}function base64Write(e,r,t,f){return blitBuffer(base64ToBytes(r),e,t,f)}function ucs2Write(e,r,t,f){return blitBuffer(utf16leToBytes(r,e.length-t),e,t,f)}Buffer.prototype.write=function write(e,r,t,f){if(r===undefined){f=\"utf8\";t=this.length;r=0}else if(t===undefined&&typeof r===\"string\"){f=r;t=this.length;r=0}else if(isFinite(r)){r=r>>>0;if(isFinite(t)){t=t>>>0;if(f===undefined)f=\"utf8\"}else{f=t;t=undefined}}else{throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\")}var n=this.length-r;if(t===undefined||t>n)t=n;if(e.length>0&&(t<0||r<0)||r>this.length){throw new RangeError(\"Attempt to write outside buffer bounds\")}if(!f)f=\"utf8\";var i=false;for(;;){switch(f){case\"hex\":return hexWrite(this,e,r,t);case\"utf8\":case\"utf-8\":return utf8Write(this,e,r,t);case\"ascii\":return asciiWrite(this,e,r,t);case\"latin1\":case\"binary\":return latin1Write(this,e,r,t);case\"base64\":return base64Write(this,e,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return ucs2Write(this,e,r,t);default:if(i)throw new TypeError(\"Unknown encoding: \"+f);f=(\"\"+f).toLowerCase();i=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(e,r,t){if(r===0&&t===e.length){return f.fromByteArray(e)}else{return f.fromByteArray(e.slice(r,t))}}function utf8Slice(e,r,t){t=Math.min(e.length,t);var f=[];var n=r;while(n<t){var i=e[n];var o=null;var u=i>239?4:i>223?3:i>191?2:1;if(n+u<=t){var a,s,h,c;switch(u){case 1:if(i<128){o=i}break;case 2:a=e[n+1];if((a&192)===128){c=(i&31)<<6|a&63;if(c>127){o=c}}break;case 3:a=e[n+1];s=e[n+2];if((a&192)===128&&(s&192)===128){c=(i&15)<<12|(a&63)<<6|s&63;if(c>2047&&(c<55296||c>57343)){o=c}}break;case 4:a=e[n+1];s=e[n+2];h=e[n+3];if((a&192)===128&&(s&192)===128&&(h&192)===128){c=(i&15)<<18|(a&63)<<12|(s&63)<<6|h&63;if(c>65535&&c<1114112){o=c}}}}if(o===null){o=65533;u=1}else if(o>65535){o-=65536;f.push(o>>>10&1023|55296);o=56320|o&1023}f.push(o);n+=u}return decodeCodePointsArray(f)}var u=4096;function decodeCodePointsArray(e){var r=e.length;if(r<=u){return String.fromCharCode.apply(String,e)}var t=\"\";var f=0;while(f<r){t+=String.fromCharCode.apply(String,e.slice(f,f+=u))}return t}function asciiSlice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n]&127)}return f}function latin1Slice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n])}return f}function hexSlice(e,r,t){var f=e.length;if(!r||r<0)r=0;if(!t||t<0||t>f)t=f;var n=\"\";for(var i=r;i<t;++i){n+=s[e[i]]}return n}function utf16leSlice(e,r,t){var f=e.slice(r,t);var n=\"\";for(var i=0;i<f.length;i+=2){n+=String.fromCharCode(f[i]+f[i+1]*256)}return n}Buffer.prototype.slice=function slice(e,r){var t=this.length;e=~~e;r=r===undefined?t:~~r;if(e<0){e+=t;if(e<0)e=0}else if(e>t){e=t}if(r<0){r+=t;if(r<0)r=0}else if(r>t){r=t}if(r<e)r=e;var f=this.subarray(e,r);Object.setPrototypeOf(f,Buffer.prototype);return f};function checkOffset(e,r,t){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}Buffer.prototype.readUIntLE=function readUIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}return f};Buffer.prototype.readUIntBE=function readUIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t){checkOffset(e,r,this.length)}var f=this[e+--r];var n=1;while(r>0&&(n*=256)){f+=this[e+--r]*n}return f};Buffer.prototype.readUInt8=function readUInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);return this[e]};Buffer.prototype.readUInt16LE=function readUInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]|this[e+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]<<8|this[e+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};Buffer.prototype.readIntLE=function readIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}n*=128;if(f>=n)f-=Math.pow(2,8*r);return f};Buffer.prototype.readIntBE=function readIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=r;var n=1;var i=this[e+--f];while(f>0&&(n*=256)){i+=this[e+--f]*n}n*=128;if(i>=n)i-=Math.pow(2,8*r);return i};Buffer.prototype.readInt8=function readInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);if(!(this[e]&128))return this[e];return(255-this[e]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e]|this[e+1]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt16BE=function readInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e+1]|this[e]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt32LE=function readInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};Buffer.prototype.readFloatLE=function readFloatLE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,false,52,8)};function checkInt(e,r,t,f,n,i){if(!Buffer.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>n||r<i)throw new RangeError('\"value\" argument is out of bounds');if(t+f>e.length)throw new RangeError(\"Index out of range\")}Buffer.prototype.writeUIntLE=function writeUIntLE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=1;var o=0;this[r]=e&255;while(++o<t&&(i*=256)){this[r+o]=e/i&255}return r+t};Buffer.prototype.writeUIntBE=function writeUIntBE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=t-1;var o=1;this[r+i]=e&255;while(--i>=0&&(o*=256)){this[r+i]=e/o&255}return r+t};Buffer.prototype.writeUInt8=function writeUInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,255,0);this[r]=e&255;return r+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r+3]=e>>>24;this[r+2]=e>>>16;this[r+1]=e>>>8;this[r]=e&255;return r+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};Buffer.prototype.writeIntLE=function writeIntLE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=0;var o=1;var u=0;this[r]=e&255;while(++i<t&&(o*=256)){if(e<0&&u===0&&this[r+i-1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeIntBE=function writeIntBE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=t-1;var o=1;var u=0;this[r+i]=e&255;while(--i>=0&&(o*=256)){if(e<0&&u===0&&this[r+i+1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeInt8=function writeInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,127,-128);if(e<0)e=255+e+1;this[r]=e&255;return r+1};Buffer.prototype.writeInt16LE=function writeInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeInt16BE=function writeInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeInt32LE=function writeInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);this[r]=e&255;this[r+1]=e>>>8;this[r+2]=e>>>16;this[r+3]=e>>>24;return r+4};Buffer.prototype.writeInt32BE=function writeInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);if(e<0)e=4294967295+e+1;this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};function checkIEEE754(e,r,t,f,n,i){if(t+f>e.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function writeFloat(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,4,34028234663852886e22,-34028234663852886e22)}n.write(e,r,t,f,23,4);return t+4}Buffer.prototype.writeFloatLE=function writeFloatLE(e,r,t){return writeFloat(this,e,r,true,t)};Buffer.prototype.writeFloatBE=function writeFloatBE(e,r,t){return writeFloat(this,e,r,false,t)};function writeDouble(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,8,17976931348623157e292,-17976931348623157e292)}n.write(e,r,t,f,52,8);return t+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,r,t){return writeDouble(this,e,r,true,t)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,r,t){return writeDouble(this,e,r,false,t)};Buffer.prototype.copy=function copy(e,r,t,f){if(!Buffer.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(!t)t=0;if(!f&&f!==0)f=this.length;if(r>=e.length)r=e.length;if(!r)r=0;if(f>0&&f<t)f=t;if(f===t)return 0;if(e.length===0||this.length===0)return 0;if(r<0){throw new RangeError(\"targetStart out of bounds\")}if(t<0||t>=this.length)throw new RangeError(\"Index out of range\");if(f<0)throw new RangeError(\"sourceEnd out of bounds\");if(f>this.length)f=this.length;if(e.length-r<f-t){f=e.length-r+t}var n=f-t;if(this===e&&typeof Uint8Array.prototype.copyWithin===\"function\"){this.copyWithin(r,t,f)}else if(this===e&&t<r&&r<f){for(var i=n-1;i>=0;--i){e[i+r]=this[i+t]}}else{Uint8Array.prototype.set.call(e,this.subarray(t,f),r)}return n};Buffer.prototype.fill=function fill(e,r,t,f){if(typeof e===\"string\"){if(typeof r===\"string\"){f=r;r=0;t=this.length}else if(typeof t===\"string\"){f=t;t=this.length}if(f!==undefined&&typeof f!==\"string\"){throw new TypeError(\"encoding must be a string\")}if(typeof f===\"string\"&&!Buffer.isEncoding(f)){throw new TypeError(\"Unknown encoding: \"+f)}if(e.length===1){var n=e.charCodeAt(0);if(f===\"utf8\"&&n<128||f===\"latin1\"){e=n}}}else if(typeof e===\"number\"){e=e&255}else if(typeof e===\"boolean\"){e=Number(e)}if(r<0||this.length<r||this.length<t){throw new RangeError(\"Out of range index\")}if(t<=r){return this}r=r>>>0;t=t===undefined?this.length:t>>>0;if(!e)e=0;var i;if(typeof e===\"number\"){for(i=r;i<t;++i){this[i]=e}}else{var o=Buffer.isBuffer(e)?e:Buffer.from(e,f);var u=o.length;if(u===0){throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"')}for(i=0;i<t-r;++i){this[i+r]=o[i%u]}}return this};var a=/[^+/0-9A-Za-z-_]/g;function base64clean(e){e=e.split(\"=\")[0];e=e.trim().replace(a,\"\");if(e.length<2)return\"\";while(e.length%4!==0){e=e+\"=\"}return e}function utf8ToBytes(e,r){r=r||Infinity;var t;var f=e.length;var n=null;var i=[];for(var o=0;o<f;++o){t=e.charCodeAt(o);if(t>55295&&t<57344){if(!n){if(t>56319){if((r-=3)>-1)i.push(239,191,189);continue}else if(o+1===f){if((r-=3)>-1)i.push(239,191,189);continue}n=t;continue}if(t<56320){if((r-=3)>-1)i.push(239,191,189);n=t;continue}t=(n-55296<<10|t-56320)+65536}else if(n){if((r-=3)>-1)i.push(239,191,189)}n=null;if(t<128){if((r-=1)<0)break;i.push(t)}else if(t<2048){if((r-=2)<0)break;i.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;i.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else{throw new Error(\"Invalid code point\")}}return i}function asciiToBytes(e){var r=[];for(var t=0;t<e.length;++t){r.push(e.charCodeAt(t)&255)}return r}function utf16leToBytes(e,r){var t,f,n;var i=[];for(var o=0;o<e.length;++o){if((r-=2)<0)break;t=e.charCodeAt(o);f=t>>8;n=t%256;i.push(n);i.push(f)}return i}function base64ToBytes(e){return f.toByteArray(base64clean(e))}function blitBuffer(e,r,t,f){for(var n=0;n<f;++n){if(n+t>=r.length||n>=e.length)break;r[n+t]=e[n]}return n}function isInstance(e,r){return e instanceof r||e!=null&&e.constructor!=null&&e.constructor.name!=null&&e.constructor.name===r.name}function numberIsNaN(e){return e!==e}var s=function(){var e=\"0123456789abcdef\";var r=new Array(256);for(var t=0;t<16;++t){var f=t*16;for(var n=0;n<16;++n){r[f+n]=e[t]+e[n]}}return r}()},783:function(e,r){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nr.read=function(e,r,t,f,n){var i,o;var u=n*8-f-1;var a=(1<<u)-1;var s=a>>1;var h=-7;var c=t?n-1:0;var l=t?-1:1;var p=e[r+c];c+=l;i=p&(1<<-h)-1;p>>=-h;h+=u;for(;h>0;i=i*256+e[r+c],c+=l,h-=8){}o=i&(1<<-h)-1;i>>=-h;h+=f;for(;h>0;o=o*256+e[r+c],c+=l,h-=8){}if(i===0){i=1-s}else if(i===a){return o?NaN:(p?-1:1)*Infinity}else{o=o+Math.pow(2,f);i=i-s}return(p?-1:1)*o*Math.pow(2,i-f)};r.write=function(e,r,t,f,n,i){var o,u,a;var s=i*8-n-1;var h=(1<<s)-1;var c=h>>1;var l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0;var p=f?0:i-1;var y=f?1:-1;var g=r<0||r===0&&1/r<0?1:0;r=Math.abs(r);if(isNaN(r)||r===Infinity){u=isNaN(r)?1:0;o=h}else{o=Math.floor(Math.log(r)/Math.LN2);if(r*(a=Math.pow(2,-o))<1){o--;a*=2}if(o+c>=1){r+=l/a}else{r+=l*Math.pow(2,1-c)}if(r*a>=2){o++;a/=2}if(o+c>=h){u=0;o=h}else if(o+c>=1){u=(r*a-1)*Math.pow(2,n);o=o+c}else{u=r*Math.pow(2,c-1)*Math.pow(2,n);o=0}}for(;n>=8;e[t+p]=u&255,p+=y,u/=256,n-=8){}o=o<<n|u;s+=n;for(;s>0;e[t+p]=o&255,p+=y,o/=256,s-=8){}e[t+p-y]|=g*128}}};var r={};function __nccwpck_require__(t){var f=r[t];if(f!==undefined){return f.exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(72);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzcy9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLE9BQU8sZ0JBQWdCLG1CQUFtQixNQUFNLE1BQU0sNEJBQTRCLG1EQUFtRCwrQkFBK0IscURBQXFELFlBQVksSUFBSSxtQ0FBbUMsYUFBYSxLQUFLLG9CQUFvQixTQUFTLG1CQUFtQixJQUFJLHFDQUFxQyxlQUFlLEtBQUssdUJBQXVCLFNBQVMsdUJBQXVCLElBQUksdUJBQXVCLG1CQUFtQix1QkFBdUIsMkNBQTJDLGFBQWEsdUJBQXVCLElBQUksY0FBYyxTQUFTLElBQUksd0JBQXdCLFNBQVMsMEJBQTBCLDRCQUE0QixxQkFBcUIsdUJBQXVCLGdEQUFnRCxlQUFlLHVCQUF1QixJQUFJLFlBQVksU0FBUyxJQUFJLHNCQUFzQixTQUFTLHdCQUF3QixTQUFTLFlBQVksTUFBTSxTQUFTLDJCQUEyQixXQUFXLE9BQU8sUUFBUSxhQUFhLGNBQWMsS0FBSyxLQUFLLGFBQWEsY0FBYyxzQkFBc0IsTUFBTSxPQUFPLGtDQUFrQyxPQUFPLGVBQWUsU0FBUyxJQUFJLEtBQUssYUFBYSxNQUFNLFlBQVksS0FBSyxXQUFXLE9BQU8sUUFBUSxtQkFBbUIsdUJBQXVCLG9DQUFvQyx1QkFBdUIsWUFBWSxtQkFBbUIsS0FBSyxxQkFBcUIsc0JBQXNCLHFCQUFxQix5QkFBeUIsbUJBQW1CLFdBQVcsYUFBYSw4QkFBOEIsaUNBQWlDLGtCQUFrQixlQUFlLFNBQVMsVUFBVSxhQUFhLGNBQWMsaUJBQWlCLFVBQVUsbUJBQW1CLFlBQVksV0FBVyxzQkFBc0IsMEJBQTBCLFlBQVksdUJBQXVCLDJCQUEyQix3QkFBd0IsVUFBVSxzQkFBc0IscURBQXFELGlCQUFpQixXQUFXLG9CQUFvQixtREFBbUQsbUJBQW1CLFlBQVksU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcz9hMmQ2Il0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe3ZhciBlPXsyMjk6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5leHBvcnRzPXt9O3ZhciByO3ZhciBuO2Z1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfWZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9KGZ1bmN0aW9uKCl7dHJ5e2lmKHR5cGVvZiBzZXRUaW1lb3V0PT09XCJmdW5jdGlvblwiKXtyPXNldFRpbWVvdXR9ZWxzZXtyPWRlZmF1bHRTZXRUaW1vdXR9fWNhdGNoKGUpe3I9ZGVmYXVsdFNldFRpbW91dH10cnl7aWYodHlwZW9mIGNsZWFyVGltZW91dD09PVwiZnVuY3Rpb25cIil7bj1jbGVhclRpbWVvdXR9ZWxzZXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fWNhdGNoKGUpe249ZGVmYXVsdENsZWFyVGltZW91dH19KSgpO2Z1bmN0aW9uIHJ1blRpbWVvdXQoZSl7aWYocj09PXNldFRpbWVvdXQpe3JldHVybiBzZXRUaW1lb3V0KGUsMCl9aWYoKHI9PT1kZWZhdWx0U2V0VGltb3V0fHwhcikmJnNldFRpbWVvdXQpe3I9c2V0VGltZW91dDtyZXR1cm4gc2V0VGltZW91dChlLDApfXRyeXtyZXR1cm4gcihlLDApfWNhdGNoKHQpe3RyeXtyZXR1cm4gci5jYWxsKG51bGwsZSwwKX1jYXRjaCh0KXtyZXR1cm4gci5jYWxsKHRoaXMsZSwwKX19fWZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChlKXtpZihuPT09Y2xlYXJUaW1lb3V0KXtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfWlmKChuPT09ZGVmYXVsdENsZWFyVGltZW91dHx8IW4pJiZjbGVhclRpbWVvdXQpe249Y2xlYXJUaW1lb3V0O3JldHVybiBjbGVhclRpbWVvdXQoZSl9dHJ5e3JldHVybiBuKGUpfWNhdGNoKHQpe3RyeXtyZXR1cm4gbi5jYWxsKG51bGwsZSl9Y2F0Y2godCl7cmV0dXJuIG4uY2FsbCh0aGlzLGUpfX19dmFyIGk9W107dmFyIG89ZmFsc2U7dmFyIHU7dmFyIGE9LTE7ZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCl7aWYoIW98fCF1KXtyZXR1cm59bz1mYWxzZTtpZih1Lmxlbmd0aCl7aT11LmNvbmNhdChpKX1lbHNle2E9LTF9aWYoaS5sZW5ndGgpe2RyYWluUXVldWUoKX19ZnVuY3Rpb24gZHJhaW5RdWV1ZSgpe2lmKG8pe3JldHVybn12YXIgZT1ydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7bz10cnVlO3ZhciB0PWkubGVuZ3RoO3doaWxlKHQpe3U9aTtpPVtdO3doaWxlKCsrYTx0KXtpZih1KXt1W2FdLnJ1bigpfX1hPS0xO3Q9aS5sZW5ndGh9dT1udWxsO289ZmFsc2U7cnVuQ2xlYXJUaW1lb3V0KGUpfXQubmV4dFRpY2s9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSk7aWYoYXJndW1lbnRzLmxlbmd0aD4xKXtmb3IodmFyIHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKXt0W3ItMV09YXJndW1lbnRzW3JdfX1pLnB1c2gobmV3IEl0ZW0oZSx0KSk7aWYoaS5sZW5ndGg9PT0xJiYhbyl7cnVuVGltZW91dChkcmFpblF1ZXVlKX19O2Z1bmN0aW9uIEl0ZW0oZSx0KXt0aGlzLmZ1bj1lO3RoaXMuYXJyYXk9dH1JdGVtLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXt0aGlzLmZ1bi5hcHBseShudWxsLHRoaXMuYXJyYXkpfTt0LnRpdGxlPVwiYnJvd3NlclwiO3QuYnJvd3Nlcj10cnVlO3QuZW52PXt9O3QuYXJndj1bXTt0LnZlcnNpb249XCJcIjt0LnZlcnNpb25zPXt9O2Z1bmN0aW9uIG5vb3AoKXt9dC5vbj1ub29wO3QuYWRkTGlzdGVuZXI9bm9vcDt0Lm9uY2U9bm9vcDt0Lm9mZj1ub29wO3QucmVtb3ZlTGlzdGVuZXI9bm9vcDt0LnJlbW92ZUFsbExpc3RlbmVycz1ub29wO3QuZW1pdD1ub29wO3QucHJlcGVuZExpc3RlbmVyPW5vb3A7dC5wcmVwZW5kT25jZUxpc3RlbmVyPW5vb3A7dC5saXN0ZW5lcnM9ZnVuY3Rpb24oZSl7cmV0dXJuW119O3QuYmluZGluZz1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZFwiKX07dC5jd2Q9ZnVuY3Rpb24oKXtyZXR1cm5cIi9cIn07dC5jaGRpcj1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QudW1hc2s9ZnVuY3Rpb24oKXtyZXR1cm4gMH19fTt2YXIgdD17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHIpe3ZhciBuPXRbcl07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT10W3JdPXtleHBvcnRzOnt9fTt2YXIgbz10cnVlO3RyeXtlW3JdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO289ZmFsc2V9ZmluYWxseXtpZihvKWRlbGV0ZSB0W3JdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciByPV9fbmNjd3Bja19yZXF1aXJlX18oMjI5KTttb2R1bGUuZXhwb3J0cz1yfSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./data-store/datastore.ts":
/*!*********************************!*\
  !*** ./data-store/datastore.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAllCharacters: function() { return /* binding */ getAllCharacters; },\n/* harmony export */   getAllFinancials: function() { return /* binding */ getAllFinancials; },\n/* harmony export */   getAllItems: function() { return /* binding */ getAllItems; },\n/* harmony export */   getAllPlayers: function() { return /* binding */ getAllPlayers; },\n/* harmony export */   getAllSales: function() { return /* binding */ getAllSales; },\n/* harmony export */   getAllSettlements: function() { return /* binding */ getAllSettlements; },\n/* harmony export */   getAllSites: function() { return /* binding */ getAllSites; },\n/* harmony export */   getAllTasks: function() { return /* binding */ getAllTasks; },\n/* harmony export */   getCharacterById: function() { return /* binding */ getCharacterById; },\n/* harmony export */   getCompanyAssets: function() { return /* binding */ getCompanyAssets; },\n/* harmony export */   getConversionRates: function() { return /* binding */ getConversionRates; },\n/* harmony export */   getFinancialById: function() { return /* binding */ getFinancialById; },\n/* harmony export */   getItemById: function() { return /* binding */ getItemById; },\n/* harmony export */   getPersonalAssets: function() { return /* binding */ getPersonalAssets; },\n/* harmony export */   getPlayerById: function() { return /* binding */ getPlayerById; },\n/* harmony export */   getPointsConversionRates: function() { return /* binding */ getPointsConversionRates; },\n/* harmony export */   getSaleById: function() { return /* binding */ getSaleById; },\n/* harmony export */   getSettlementById: function() { return /* binding */ getSettlementById; },\n/* harmony export */   getSiteById: function() { return /* binding */ getSiteById; },\n/* harmony export */   getSitesByRadius: function() { return /* binding */ getSitesByRadius; },\n/* harmony export */   getSitesBySettlement: function() { return /* binding */ getSitesBySettlement; },\n/* harmony export */   getTaskById: function() { return /* binding */ getTaskById; },\n/* harmony export */   removeCharacter: function() { return /* binding */ removeCharacter; },\n/* harmony export */   removeFinancial: function() { return /* binding */ removeFinancial; },\n/* harmony export */   removeItem: function() { return /* binding */ removeItem; },\n/* harmony export */   removePlayer: function() { return /* binding */ removePlayer; },\n/* harmony export */   removeSale: function() { return /* binding */ removeSale; },\n/* harmony export */   removeSettlement: function() { return /* binding */ removeSettlement; },\n/* harmony export */   removeSite: function() { return /* binding */ removeSite; },\n/* harmony export */   removeTask: function() { return /* binding */ removeTask; },\n/* harmony export */   saveCompanyAssets: function() { return /* binding */ saveCompanyAssets; },\n/* harmony export */   saveConversionRates: function() { return /* binding */ saveConversionRates; },\n/* harmony export */   savePersonalAssets: function() { return /* binding */ savePersonalAssets; },\n/* harmony export */   savePointsConversionRates: function() { return /* binding */ savePointsConversionRates; },\n/* harmony export */   upsertCharacter: function() { return /* binding */ upsertCharacter; },\n/* harmony export */   upsertFinancial: function() { return /* binding */ upsertFinancial; },\n/* harmony export */   upsertItem: function() { return /* binding */ upsertItem; },\n/* harmony export */   upsertPlayer: function() { return /* binding */ upsertPlayer; },\n/* harmony export */   upsertSale: function() { return /* binding */ upsertSale; },\n/* harmony export */   upsertSettlement: function() { return /* binding */ upsertSettlement; },\n/* harmony export */   upsertSite: function() { return /* binding */ upsertSite; },\n/* harmony export */   upsertTask: function() { return /* binding */ upsertTask; }\n/* harmony export */ });\n/* harmony import */ var _types_enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/enums */ \"(app-pages-browser)/./types/enums.ts\");\n/* harmony import */ var _repositories_task_repo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./repositories/task.repo */ \"(app-pages-browser)/./data-store/repositories/task.repo.ts\");\n/* harmony import */ var _repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./repositories/item.repo */ \"(app-pages-browser)/./data-store/repositories/item.repo.ts\");\n/* harmony import */ var _repositories_financial_repo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./repositories/financial.repo */ \"(app-pages-browser)/./data-store/repositories/financial.repo.ts\");\n/* harmony import */ var _repositories_sale_repo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./repositories/sale.repo */ \"(app-pages-browser)/./data-store/repositories/sale.repo.ts\");\n/* harmony import */ var _repositories_character_repo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./repositories/character.repo */ \"(app-pages-browser)/./data-store/repositories/character.repo.ts\");\n/* harmony import */ var _repositories_player_repo__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./repositories/player.repo */ \"(app-pages-browser)/./data-store/repositories/player.repo.ts\");\n/* harmony import */ var _repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./repositories/site.repo */ \"(app-pages-browser)/./data-store/repositories/site.repo.ts\");\n/* harmony import */ var _kv__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./kv */ \"(app-pages-browser)/./data-store/kv.ts\");\n/* harmony import */ var _workflows_entities_workflows_task_workflow__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/workflows/entities-workflows/task.workflow */ \"(app-pages-browser)/./workflows/entities-workflows/task.workflow.ts\");\n/* harmony import */ var _workflows_entities_workflows_item_workflow__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/workflows/entities-workflows/item.workflow */ \"(app-pages-browser)/./workflows/entities-workflows/item.workflow.ts\");\n/* harmony import */ var _workflows_entities_workflows_financial_workflow__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @/workflows/entities-workflows/financial.workflow */ \"(app-pages-browser)/./workflows/entities-workflows/financial.workflow.ts\");\n/* harmony import */ var _workflows_entities_workflows_sale_workflow__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @/workflows/entities-workflows/sale.workflow */ \"(app-pages-browser)/./workflows/entities-workflows/sale.workflow.ts\");\n/* harmony import */ var _workflows_entities_workflows_character_workflow__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @/workflows/entities-workflows/character.workflow */ \"(app-pages-browser)/./workflows/entities-workflows/character.workflow.ts\");\n/* harmony import */ var _workflows_entities_workflows_player_workflow__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @/workflows/entities-workflows/player.workflow */ \"(app-pages-browser)/./workflows/entities-workflows/player.workflow.ts\");\n/* harmony import */ var _workflows_entities_workflows_site_workflow__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @/workflows/entities-workflows/site.workflow */ \"(app-pages-browser)/./workflows/entities-workflows/site.workflow.ts\");\n/* harmony import */ var _links_links_workflows__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @/links/links-workflows */ \"(app-pages-browser)/./links/links-workflows.ts\");\n// data-store/datastore.ts\n// Orchestration layer: repositories → workflows → links → logging\n\n\n\n\n\n\n\n\n\n// Import workflow functions individually to avoid TypeScript issues\n\n\n\n\n\n\n\n\n// TASKS\nasync function upsertTask(task) {\n    const previous = await (0,_repositories_task_repo__WEBPACK_IMPORTED_MODULE_1__.getTaskById)(task.id);\n    const saved = await (0,_repositories_task_repo__WEBPACK_IMPORTED_MODULE_1__.upsertTask)(task);\n    await (0,_workflows_entities_workflows_task_workflow__WEBPACK_IMPORTED_MODULE_9__.onTaskUpsert)(saved, previous || undefined);\n    await (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_16__.processLinkEntity)(saved, _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK);\n    return saved;\n}\nasync function getAllTasks() {\n    return await (0,_repositories_task_repo__WEBPACK_IMPORTED_MODULE_1__.getAllTasks)();\n}\nasync function getTaskById(id) {\n    return await (0,_repositories_task_repo__WEBPACK_IMPORTED_MODULE_1__.getTaskById)(id);\n}\nasync function removeTask(id) {\n    const existing = await (0,_repositories_task_repo__WEBPACK_IMPORTED_MODULE_1__.getTaskById)(id);\n    await (0,_repositories_task_repo__WEBPACK_IMPORTED_MODULE_1__.deleteTask)(id);\n    if (existing) {\n        // Call task deletion workflow for cleanup\n        const { removeTaskLogEntriesOnDelete } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/workflows/entities-workflows/task.workflow */ \"(app-pages-browser)/./workflows/entities-workflows/task.workflow.ts\"));\n        await removeTaskLogEntriesOnDelete(id);\n    }\n}\n// ITEMS\nasync function upsertItem(item) {\n    const previous = await (0,_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__.getItemById)(item.id);\n    const saved = await (0,_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__.upsertItem)(item);\n    await (0,_workflows_entities_workflows_item_workflow__WEBPACK_IMPORTED_MODULE_10__.onItemUpsert)(saved, previous || undefined);\n    await (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_16__.processLinkEntity)(saved, _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM);\n    return saved;\n}\nasync function getAllItems() {\n    return await (0,_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__.getAllItems)();\n}\nasync function getItemById(id) {\n    return await (0,_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__.getItemById)(id);\n}\nasync function removeItem(id) {\n    const existing = await (0,_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__.getItemById)(id);\n    await (0,_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__.deleteItem)(id);\n    if (existing) {\n        // Call item deletion workflow for cleanup\n        const { removeItemEffectsOnDelete } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/workflows/entities-workflows/item.workflow */ \"(app-pages-browser)/./workflows/entities-workflows/item.workflow.ts\"));\n        await removeItemEffectsOnDelete(id);\n    }\n}\n// FINANCIALS\nasync function upsertFinancial(financial) {\n    const previous = await (0,_repositories_financial_repo__WEBPACK_IMPORTED_MODULE_3__.getFinancialById)(financial.id);\n    const saved = await (0,_repositories_financial_repo__WEBPACK_IMPORTED_MODULE_3__.upsertFinancial)(financial);\n    await (0,_workflows_entities_workflows_financial_workflow__WEBPACK_IMPORTED_MODULE_11__.onFinancialUpsert)(saved, previous || undefined);\n    await (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_16__.processLinkEntity)(saved, _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL);\n    return saved;\n}\nasync function getAllFinancials() {\n    return await (0,_repositories_financial_repo__WEBPACK_IMPORTED_MODULE_3__.getAllFinancials)();\n}\nasync function getFinancialById(id) {\n    return await (0,_repositories_financial_repo__WEBPACK_IMPORTED_MODULE_3__.getFinancialById)(id);\n}\nasync function removeFinancial(id) {\n    const existing = await (0,_repositories_financial_repo__WEBPACK_IMPORTED_MODULE_3__.getFinancialById)(id);\n    await (0,_repositories_financial_repo__WEBPACK_IMPORTED_MODULE_3__.deleteFinancial)(id);\n    if (existing) {\n        // Call financial deletion workflow for cleanup\n        const { removeRecordEffectsOnDelete } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/workflows/entities-workflows/financial.workflow */ \"(app-pages-browser)/./workflows/entities-workflows/financial.workflow.ts\"));\n        await removeRecordEffectsOnDelete(id);\n    }\n}\n// SALES\nasync function upsertSale(sale) {\n    const previous = await (0,_repositories_sale_repo__WEBPACK_IMPORTED_MODULE_4__.getSaleById)(sale.id);\n    const saved = await (0,_repositories_sale_repo__WEBPACK_IMPORTED_MODULE_4__.upsertSale)(sale);\n    await (0,_workflows_entities_workflows_sale_workflow__WEBPACK_IMPORTED_MODULE_12__.onSaleUpsert)(saved, previous || undefined);\n    await (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_16__.processLinkEntity)(saved, _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE);\n    return saved;\n}\nasync function getAllSales() {\n    return await (0,_repositories_sale_repo__WEBPACK_IMPORTED_MODULE_4__.getAllSales)();\n}\nasync function getSaleById(id) {\n    return await (0,_repositories_sale_repo__WEBPACK_IMPORTED_MODULE_4__.getSaleById)(id);\n}\nasync function removeSale(id) {\n    const existing = await (0,_repositories_sale_repo__WEBPACK_IMPORTED_MODULE_4__.getSaleById)(id);\n    await (0,_repositories_sale_repo__WEBPACK_IMPORTED_MODULE_4__.deleteSale)(id);\n    if (existing) {\n        // Call sale deletion workflow for cleanup\n        const { removeSaleEffectsOnDelete } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/workflows/entities-workflows/sale.workflow */ \"(app-pages-browser)/./workflows/entities-workflows/sale.workflow.ts\"));\n        await removeSaleEffectsOnDelete(id);\n    }\n}\n// CHARACTERS\nasync function upsertCharacter(character) {\n    const previous = await (0,_repositories_character_repo__WEBPACK_IMPORTED_MODULE_5__.getCharacterById)(character.id);\n    const saved = await (0,_repositories_character_repo__WEBPACK_IMPORTED_MODULE_5__.upsertCharacter)(character);\n    await (0,_workflows_entities_workflows_character_workflow__WEBPACK_IMPORTED_MODULE_13__.onCharacterUpsert)(saved, previous || undefined);\n    await (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_16__.processLinkEntity)(saved, _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER);\n    return saved;\n}\nasync function getAllCharacters() {\n    return await (0,_repositories_character_repo__WEBPACK_IMPORTED_MODULE_5__.getAllCharacters)();\n}\nasync function getCharacterById(id) {\n    return await (0,_repositories_character_repo__WEBPACK_IMPORTED_MODULE_5__.getCharacterById)(id);\n}\nasync function removeCharacter(id) {\n    const existing = await (0,_repositories_character_repo__WEBPACK_IMPORTED_MODULE_5__.getCharacterById)(id);\n    await (0,_repositories_character_repo__WEBPACK_IMPORTED_MODULE_5__.deleteCharacter)(id);\n    if (existing) {\n        // Call character deletion workflow for cleanup\n        const { removeCharacterEffectsOnDelete } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/workflows/entities-workflows/character.workflow */ \"(app-pages-browser)/./workflows/entities-workflows/character.workflow.ts\"));\n        await removeCharacterEffectsOnDelete(id);\n    }\n}\n// PLAYERS\nasync function upsertPlayer(player) {\n    const previous = await (0,_repositories_player_repo__WEBPACK_IMPORTED_MODULE_6__.getPlayerById)(player.id);\n    const saved = await (0,_repositories_player_repo__WEBPACK_IMPORTED_MODULE_6__.upsertPlayer)(player);\n    await (0,_workflows_entities_workflows_player_workflow__WEBPACK_IMPORTED_MODULE_14__.onPlayerUpsert)(saved, previous || undefined);\n    await (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_16__.processLinkEntity)(saved, _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER);\n    return saved;\n}\nasync function getAllPlayers() {\n    return await (0,_repositories_player_repo__WEBPACK_IMPORTED_MODULE_6__.getAllPlayers)();\n}\nasync function getPlayerById(id) {\n    return await (0,_repositories_player_repo__WEBPACK_IMPORTED_MODULE_6__.getPlayerById)(id);\n}\nasync function removePlayer(id) {\n    const existing = await (0,_repositories_player_repo__WEBPACK_IMPORTED_MODULE_6__.getPlayerById)(id);\n    await (0,_repositories_player_repo__WEBPACK_IMPORTED_MODULE_6__.deletePlayer)(id);\n    if (existing) {\n        // Call player deletion workflow for cleanup\n        const { removePlayerEffectsOnDelete } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/workflows/entities-workflows/player.workflow */ \"(app-pages-browser)/./workflows/entities-workflows/player.workflow.ts\"));\n        await removePlayerEffectsOnDelete(id);\n    }\n}\n// SITES\nasync function upsertSite(site) {\n    const previous = await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.getSiteById)(site.id);\n    const saved = await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.upsertSite)(site);\n    await (0,_workflows_entities_workflows_site_workflow__WEBPACK_IMPORTED_MODULE_15__.onSiteUpsert)(saved, previous || undefined);\n    await (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_16__.processLinkEntity)(saved, _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE);\n    return saved;\n}\nasync function getAllSites() {\n    return await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.getAllSites)();\n}\nasync function getSiteById(id) {\n    return await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.getSiteById)(id);\n}\nasync function removeSite(id) {\n    const existing = await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.getSiteById)(id);\n    await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.deleteSite)(id);\n    if (existing) {\n        // Call site deletion workflow for cleanup\n        const { removeSiteEffectsOnDelete } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/workflows/entities-workflows/site.workflow */ \"(app-pages-browser)/./workflows/entities-workflows/site.workflow.ts\"));\n        await removeSiteEffectsOnDelete(id);\n    }\n}\n// ============================================================================\n// SETTLEMENT METHODS (Reference data for Sites)\n// ============================================================================\nasync function getAllSettlements() {\n    return await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.getAllSettlements)();\n}\nasync function getSettlementById(id) {\n    return await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.getSettlementById)(id);\n}\nasync function upsertSettlement(settlement) {\n    return await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.upsertSettlement)(settlement);\n}\nasync function removeSettlement(id) {\n    await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.removeSettlement)(id);\n}\n// ============================================================================\n// SITE QUERY METHODS\n// ============================================================================\nasync function getSitesBySettlement(settlementId) {\n    return await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.getSitesBySettlement)(settlementId);\n}\nasync function getSitesByRadius(centerLat, centerLng, radiusMeters) {\n    return await (0,_repositories_site_repo__WEBPACK_IMPORTED_MODULE_7__.getSitesByRadius)(centerLat, centerLng, radiusMeters);\n}\n// POINTS CONVERSION RATES\nasync function getPointsConversionRates() {\n    const rates = await (0,_kv__WEBPACK_IMPORTED_MODULE_8__.kvGet)(\"data:points-conversion-rates\");\n    return rates || {\n        hpToJ$: 10,\n        fpToJ$: 15,\n        rpToJ$: 12,\n        xpToJ$: 3,\n        j$ToUSD: 10\n    };\n}\nasync function savePointsConversionRates(rates) {\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_8__.kvSet)(\"data:points-conversion-rates\", rates);\n}\n// COMPANY ASSETS\nasync function getCompanyAssets() {\n    const assets = await (0,_kv__WEBPACK_IMPORTED_MODULE_8__.kvGet)(\"data:company-assets\");\n    return assets || {\n        cash: 0,\n        bank: 0,\n        bitcoin: 0,\n        toCharge: 0,\n        toPay: 0,\n        companyJ$: 0,\n        materials: {\n            value: 0,\n            cost: 0\n        },\n        equipment: {\n            value: 0,\n            cost: 0\n        },\n        artworks: {\n            value: 0,\n            cost: 0\n        },\n        prints: {\n            value: 0,\n            cost: 0\n        },\n        stickers: {\n            value: 0,\n            cost: 0\n        },\n        merch: {\n            value: 0,\n            cost: 0\n        }\n    };\n}\nasync function saveCompanyAssets(assets) {\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_8__.kvSet)(\"data:company-assets\", assets);\n}\n// PERSONAL ASSETS\nasync function getPersonalAssets() {\n    const assets = await (0,_kv__WEBPACK_IMPORTED_MODULE_8__.kvGet)(\"data:personal-assets\");\n    return assets || {\n        cash: 0,\n        bank: 0,\n        bitcoin: 0,\n        crypto: 0,\n        toCharge: 0,\n        toPay: 0,\n        personalJ$: 0,\n        vehicle: 0,\n        properties: 0,\n        nfts: 0,\n        other: 0\n    };\n}\nasync function savePersonalAssets(assets) {\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_8__.kvSet)(\"data:personal-assets\", assets);\n}\n// CONVERSION RATES\nasync function getConversionRates() {\n    const rates = await (0,_kv__WEBPACK_IMPORTED_MODULE_8__.kvGet)(\"data:conversion-rates\");\n    return rates || {\n        hpToJ$: 10,\n        fpToJ$: 15,\n        rpToJ$: 12,\n        xpToJ$: 3,\n        j$ToUSD: 10,\n        colonesToUsd: 500,\n        bitcoinToUsd: 50000,\n        jungleCoinsToUsd: 0.1\n    };\n}\nasync function saveConversionRates(rates) {\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_8__.kvSet)(\"data:conversion-rates\", rates);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data-store/datastore.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./data-store/effects-registry.ts":
/*!****************************************!*\
  !*** ./data-store/effects-registry.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearEffect: function() { return /* binding */ clearEffect; },\n/* harmony export */   clearEffectsByPrefix: function() { return /* binding */ clearEffectsByPrefix; },\n/* harmony export */   clearProcessingStack: function() { return /* binding */ clearProcessingStack; },\n/* harmony export */   endProcessing: function() { return /* binding */ endProcessing; },\n/* harmony export */   getProcessingStatus: function() { return /* binding */ getProcessingStatus; },\n/* harmony export */   hasEffect: function() { return /* binding */ hasEffect; },\n/* harmony export */   isProcessing: function() { return /* binding */ isProcessing; },\n/* harmony export */   markEffect: function() { return /* binding */ markEffect; },\n/* harmony export */   startProcessing: function() { return /* binding */ startProcessing; }\n/* harmony export */ });\n/* harmony import */ var _kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kv */ \"(app-pages-browser)/./data-store/kv.ts\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./keys */ \"(app-pages-browser)/./data-store/keys.ts\");\n// data-store/effects-registry.ts\n// Idempotency registry stored in KV. Avoids global flags and server HTTP loops.\n\n\nasync function hasEffect(effectKey) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildEffectKey)(effectKey);\n    const val = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n    return val === true;\n}\nasync function markEffect(effectKey, ttl) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildEffectKey)(effectKey);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, true);\n}\nasync function clearEffect(effectKey) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildEffectKey)(effectKey);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, false);\n}\nasync function clearEffectsByPrefix(entityType, entityId, prefix) {\n    // For now, we'll implement a simple version that clears all effects for an entity\n    // In a full implementation, this would scan and clear effects with the given prefix\n    console.log(\"[clearEffectsByPrefix] Clearing effects for \".concat(entityType, \":\").concat(entityId, \" with prefix: \").concat(prefix));\n// TODO: Implement proper prefix-based clearing when needed\n}\n// ============================================================================\n// LIGHTWEIGHT CIRCUIT BREAKER: Circular reference detection and depth limits\n// ============================================================================\n// Processing stack tracking for circular reference detection\nconst processingStack = new Set();\nconst MAX_DEPTH = 5;\n/**\r\n * Check if an entity is currently being processed\r\n */ function isProcessing(entityType, entityId) {\n    return processingStack.has(\"\".concat(entityType, \":\").concat(entityId));\n}\n/**\r\n * Start processing an entity - throws error if circular reference detected\r\n */ function startProcessing(entityType, entityId) {\n    const key = \"\".concat(entityType, \":\").concat(entityId);\n    if (processingStack.has(key)) {\n        throw new Error(\"Circular reference detected: \".concat(key));\n    }\n    if (processingStack.size >= MAX_DEPTH) {\n        throw new Error(\"Max processing depth exceeded: \".concat(MAX_DEPTH));\n    }\n    processingStack.add(key);\n    console.log(\"[CircuitBreaker] Started processing: \".concat(key, \" (depth: \").concat(processingStack.size, \")\"));\n}\n/**\r\n * End processing an entity\r\n */ function endProcessing(entityType, entityId) {\n    const key = \"\".concat(entityType, \":\").concat(entityId);\n    processingStack.delete(key);\n    console.log(\"[CircuitBreaker] Ended processing: \".concat(key, \" (depth: \").concat(processingStack.size, \")\"));\n}\n/**\r\n * Get current processing status for debugging\r\n */ function getProcessingStatus() {\n    return {\n        stack: Array.from(processingStack),\n        depth: processingStack.size,\n        maxDepth: MAX_DEPTH\n    };\n}\n/**\r\n * Clear all processing state (emergency reset)\r\n */ function clearProcessingStack() {\n    processingStack.clear();\n    console.log(\"[CircuitBreaker] Cleared processing stack\");\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2RhdGEtc3RvcmUvZWZmZWN0cy1yZWdpc3RyeS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBLGlDQUFpQztBQUNqQyxnRkFBZ0Y7QUFFNUM7QUFDSTtBQUVqQyxlQUFlRyxVQUFVQyxTQUFpQjtJQUMvQyxNQUFNQyxNQUFNSCxxREFBY0EsQ0FBQ0U7SUFDM0IsTUFBTUUsTUFBTSxNQUFNTiwwQ0FBS0EsQ0FBVUs7SUFDakMsT0FBT0MsUUFBUTtBQUNqQjtBQUVPLGVBQWVDLFdBQVdILFNBQWlCLEVBQUVJLEdBQVk7SUFDOUQsTUFBTUgsTUFBTUgscURBQWNBLENBQUNFO0lBQzNCLE1BQU1ILDBDQUFLQSxDQUFDSSxLQUFLO0FBQ25CO0FBRU8sZUFBZUksWUFBWUwsU0FBaUI7SUFDakQsTUFBTUMsTUFBTUgscURBQWNBLENBQUNFO0lBQzNCLE1BQU1ILDBDQUFLQSxDQUFDSSxLQUFLO0FBQ25CO0FBRU8sZUFBZUsscUJBQXFCQyxVQUFrQixFQUFFQyxRQUFnQixFQUFFQyxNQUFjO0lBQzdGLGtGQUFrRjtJQUNsRixvRkFBb0Y7SUFDcEZDLFFBQVFDLEdBQUcsQ0FBQywrQ0FBNkRILE9BQWRELFlBQVcsS0FBNEJFLE9BQXpCRCxVQUFTLGtCQUF1QixPQUFQQztBQUNsRywyREFBMkQ7QUFDN0Q7QUFFQSwrRUFBK0U7QUFDL0UsNkVBQTZFO0FBQzdFLCtFQUErRTtBQUUvRSw2REFBNkQ7QUFDN0QsTUFBTUcsa0JBQWtCLElBQUlDO0FBQzVCLE1BQU1DLFlBQVk7QUFFbEI7O0NBRUMsR0FDTSxTQUFTQyxhQUFhUixVQUFrQixFQUFFQyxRQUFnQjtJQUMvRCxPQUFPSSxnQkFBZ0JJLEdBQUcsQ0FBQyxHQUFpQlIsT0FBZEQsWUFBVyxLQUFZLE9BQVRDO0FBQzlDO0FBRUE7O0NBRUMsR0FDTSxTQUFTUyxnQkFBZ0JWLFVBQWtCLEVBQUVDLFFBQWdCO0lBQ2xFLE1BQU1QLE1BQU0sR0FBaUJPLE9BQWRELFlBQVcsS0FBWSxPQUFUQztJQUU3QixJQUFJSSxnQkFBZ0JJLEdBQUcsQ0FBQ2YsTUFBTTtRQUM1QixNQUFNLElBQUlpQixNQUFNLGdDQUFvQyxPQUFKakI7SUFDbEQ7SUFFQSxJQUFJVyxnQkFBZ0JPLElBQUksSUFBSUwsV0FBVztRQUNyQyxNQUFNLElBQUlJLE1BQU0sa0NBQTRDLE9BQVZKO0lBQ3BEO0lBRUFGLGdCQUFnQlEsR0FBRyxDQUFDbkI7SUFDcEJTLFFBQVFDLEdBQUcsQ0FBQyx3Q0FBdURDLE9BQWZYLEtBQUksYUFBZ0MsT0FBckJXLGdCQUFnQk8sSUFBSSxFQUFDO0FBQzFGO0FBRUE7O0NBRUMsR0FDTSxTQUFTRSxjQUFjZCxVQUFrQixFQUFFQyxRQUFnQjtJQUNoRSxNQUFNUCxNQUFNLEdBQWlCTyxPQUFkRCxZQUFXLEtBQVksT0FBVEM7SUFDN0JJLGdCQUFnQlUsTUFBTSxDQUFDckI7SUFDdkJTLFFBQVFDLEdBQUcsQ0FBQyxzQ0FBcURDLE9BQWZYLEtBQUksYUFBZ0MsT0FBckJXLGdCQUFnQk8sSUFBSSxFQUFDO0FBQ3hGO0FBRUE7O0NBRUMsR0FDTSxTQUFTSTtJQUtkLE9BQU87UUFDTEMsT0FBT0MsTUFBTUMsSUFBSSxDQUFDZDtRQUNsQmUsT0FBT2YsZ0JBQWdCTyxJQUFJO1FBQzNCUyxVQUFVZDtJQUNaO0FBQ0Y7QUFFQTs7Q0FFQyxHQUNNLFNBQVNlO0lBQ2RqQixnQkFBZ0JrQixLQUFLO0lBQ3JCcEIsUUFBUUMsR0FBRyxDQUFFO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vZGF0YS1zdG9yZS9lZmZlY3RzLXJlZ2lzdHJ5LnRzPzk0OWIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGF0YS1zdG9yZS9lZmZlY3RzLXJlZ2lzdHJ5LnRzXHJcbi8vIElkZW1wb3RlbmN5IHJlZ2lzdHJ5IHN0b3JlZCBpbiBLVi4gQXZvaWRzIGdsb2JhbCBmbGFncyBhbmQgc2VydmVyIEhUVFAgbG9vcHMuXHJcblxyXG5pbXBvcnQgeyBrdkdldCwga3ZTZXQgfSBmcm9tICcuL2t2JztcclxuaW1wb3J0IHsgYnVpbGRFZmZlY3RLZXkgfSBmcm9tICcuL2tleXMnO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGhhc0VmZmVjdChlZmZlY3RLZXk6IHN0cmluZyk6IFByb21pc2U8Ym9vbGVhbj4ge1xyXG4gIGNvbnN0IGtleSA9IGJ1aWxkRWZmZWN0S2V5KGVmZmVjdEtleSk7XHJcbiAgY29uc3QgdmFsID0gYXdhaXQga3ZHZXQ8Ym9vbGVhbj4oa2V5KTtcclxuICByZXR1cm4gdmFsID09PSB0cnVlO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFya0VmZmVjdChlZmZlY3RLZXk6IHN0cmluZywgdHRsPzogbnVtYmVyKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgY29uc3Qga2V5ID0gYnVpbGRFZmZlY3RLZXkoZWZmZWN0S2V5KTtcclxuICBhd2FpdCBrdlNldChrZXksIHRydWUpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY2xlYXJFZmZlY3QoZWZmZWN0S2V5OiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcclxuICBjb25zdCBrZXkgPSBidWlsZEVmZmVjdEtleShlZmZlY3RLZXkpO1xyXG4gIGF3YWl0IGt2U2V0KGtleSwgZmFsc2UpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY2xlYXJFZmZlY3RzQnlQcmVmaXgoZW50aXR5VHlwZTogc3RyaW5nLCBlbnRpdHlJZDogc3RyaW5nLCBwcmVmaXg6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xyXG4gIC8vIEZvciBub3csIHdlJ2xsIGltcGxlbWVudCBhIHNpbXBsZSB2ZXJzaW9uIHRoYXQgY2xlYXJzIGFsbCBlZmZlY3RzIGZvciBhbiBlbnRpdHlcclxuICAvLyBJbiBhIGZ1bGwgaW1wbGVtZW50YXRpb24sIHRoaXMgd291bGQgc2NhbiBhbmQgY2xlYXIgZWZmZWN0cyB3aXRoIHRoZSBnaXZlbiBwcmVmaXhcclxuICBjb25zb2xlLmxvZyhgW2NsZWFyRWZmZWN0c0J5UHJlZml4XSBDbGVhcmluZyBlZmZlY3RzIGZvciAke2VudGl0eVR5cGV9OiR7ZW50aXR5SWR9IHdpdGggcHJlZml4OiAke3ByZWZpeH1gKTtcclxuICAvLyBUT0RPOiBJbXBsZW1lbnQgcHJvcGVyIHByZWZpeC1iYXNlZCBjbGVhcmluZyB3aGVuIG5lZWRlZFxyXG59XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIExJR0hUV0VJR0hUIENJUkNVSVQgQlJFQUtFUjogQ2lyY3VsYXIgcmVmZXJlbmNlIGRldGVjdGlvbiBhbmQgZGVwdGggbGltaXRzXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbi8vIFByb2Nlc3Npbmcgc3RhY2sgdHJhY2tpbmcgZm9yIGNpcmN1bGFyIHJlZmVyZW5jZSBkZXRlY3Rpb25cclxuY29uc3QgcHJvY2Vzc2luZ1N0YWNrID0gbmV3IFNldDxzdHJpbmc+KCk7XHJcbmNvbnN0IE1BWF9ERVBUSCA9IDU7XHJcblxyXG4vKipcclxuICogQ2hlY2sgaWYgYW4gZW50aXR5IGlzIGN1cnJlbnRseSBiZWluZyBwcm9jZXNzZWRcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBpc1Byb2Nlc3NpbmcoZW50aXR5VHlwZTogc3RyaW5nLCBlbnRpdHlJZDogc3RyaW5nKTogYm9vbGVhbiB7XHJcbiAgcmV0dXJuIHByb2Nlc3NpbmdTdGFjay5oYXMoYCR7ZW50aXR5VHlwZX06JHtlbnRpdHlJZH1gKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFN0YXJ0IHByb2Nlc3NpbmcgYW4gZW50aXR5IC0gdGhyb3dzIGVycm9yIGlmIGNpcmN1bGFyIHJlZmVyZW5jZSBkZXRlY3RlZFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHN0YXJ0UHJvY2Vzc2luZyhlbnRpdHlUeXBlOiBzdHJpbmcsIGVudGl0eUlkOiBzdHJpbmcpOiB2b2lkIHtcclxuICBjb25zdCBrZXkgPSBgJHtlbnRpdHlUeXBlfToke2VudGl0eUlkfWA7XHJcbiAgXHJcbiAgaWYgKHByb2Nlc3NpbmdTdGFjay5oYXMoa2V5KSkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKGBDaXJjdWxhciByZWZlcmVuY2UgZGV0ZWN0ZWQ6ICR7a2V5fWApO1xyXG4gIH1cclxuICBcclxuICBpZiAocHJvY2Vzc2luZ1N0YWNrLnNpemUgPj0gTUFYX0RFUFRIKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoYE1heCBwcm9jZXNzaW5nIGRlcHRoIGV4Y2VlZGVkOiAke01BWF9ERVBUSH1gKTtcclxuICB9XHJcbiAgXHJcbiAgcHJvY2Vzc2luZ1N0YWNrLmFkZChrZXkpO1xyXG4gIGNvbnNvbGUubG9nKGBbQ2lyY3VpdEJyZWFrZXJdIFN0YXJ0ZWQgcHJvY2Vzc2luZzogJHtrZXl9IChkZXB0aDogJHtwcm9jZXNzaW5nU3RhY2suc2l6ZX0pYCk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBFbmQgcHJvY2Vzc2luZyBhbiBlbnRpdHlcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBlbmRQcm9jZXNzaW5nKGVudGl0eVR5cGU6IHN0cmluZywgZW50aXR5SWQ6IHN0cmluZyk6IHZvaWQge1xyXG4gIGNvbnN0IGtleSA9IGAke2VudGl0eVR5cGV9OiR7ZW50aXR5SWR9YDtcclxuICBwcm9jZXNzaW5nU3RhY2suZGVsZXRlKGtleSk7XHJcbiAgY29uc29sZS5sb2coYFtDaXJjdWl0QnJlYWtlcl0gRW5kZWQgcHJvY2Vzc2luZzogJHtrZXl9IChkZXB0aDogJHtwcm9jZXNzaW5nU3RhY2suc2l6ZX0pYCk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBHZXQgY3VycmVudCBwcm9jZXNzaW5nIHN0YXR1cyBmb3IgZGVidWdnaW5nXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0UHJvY2Vzc2luZ1N0YXR1cygpOiB7XHJcbiAgc3RhY2s6IHN0cmluZ1tdO1xyXG4gIGRlcHRoOiBudW1iZXI7XHJcbiAgbWF4RGVwdGg6IG51bWJlcjtcclxufSB7XHJcbiAgcmV0dXJuIHtcclxuICAgIHN0YWNrOiBBcnJheS5mcm9tKHByb2Nlc3NpbmdTdGFjayksXHJcbiAgICBkZXB0aDogcHJvY2Vzc2luZ1N0YWNrLnNpemUsXHJcbiAgICBtYXhEZXB0aDogTUFYX0RFUFRIXHJcbiAgfTtcclxufVxyXG5cclxuLyoqXHJcbiAqIENsZWFyIGFsbCBwcm9jZXNzaW5nIHN0YXRlIChlbWVyZ2VuY3kgcmVzZXQpXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY2xlYXJQcm9jZXNzaW5nU3RhY2soKTogdm9pZCB7XHJcbiAgcHJvY2Vzc2luZ1N0YWNrLmNsZWFyKCk7XHJcbiAgY29uc29sZS5sb2coYFtDaXJjdWl0QnJlYWtlcl0gQ2xlYXJlZCBwcm9jZXNzaW5nIHN0YWNrYCk7XHJcbn1cclxuXHJcblxyXG4iXSwibmFtZXMiOlsia3ZHZXQiLCJrdlNldCIsImJ1aWxkRWZmZWN0S2V5IiwiaGFzRWZmZWN0IiwiZWZmZWN0S2V5Iiwia2V5IiwidmFsIiwibWFya0VmZmVjdCIsInR0bCIsImNsZWFyRWZmZWN0IiwiY2xlYXJFZmZlY3RzQnlQcmVmaXgiLCJlbnRpdHlUeXBlIiwiZW50aXR5SWQiLCJwcmVmaXgiLCJjb25zb2xlIiwibG9nIiwicHJvY2Vzc2luZ1N0YWNrIiwiU2V0IiwiTUFYX0RFUFRIIiwiaXNQcm9jZXNzaW5nIiwiaGFzIiwic3RhcnRQcm9jZXNzaW5nIiwiRXJyb3IiLCJzaXplIiwiYWRkIiwiZW5kUHJvY2Vzc2luZyIsImRlbGV0ZSIsImdldFByb2Nlc3NpbmdTdGF0dXMiLCJzdGFjayIsIkFycmF5IiwiZnJvbSIsImRlcHRoIiwibWF4RGVwdGgiLCJjbGVhclByb2Nlc3NpbmdTdGFjayIsImNsZWFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data-store/effects-registry.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./data-store/keys.ts":
/*!****************************!*\
  !*** ./data-store/keys.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildDataKey: function() { return /* binding */ buildDataKey; },\n/* harmony export */   buildEffectKey: function() { return /* binding */ buildEffectKey; },\n/* harmony export */   buildIndexKey: function() { return /* binding */ buildIndexKey; },\n/* harmony export */   buildLinkKey: function() { return /* binding */ buildLinkKey; },\n/* harmony export */   buildLinksIndexKey: function() { return /* binding */ buildLinksIndexKey; },\n/* harmony export */   buildLogKey: function() { return /* binding */ buildLogKey; }\n/* harmony export */ });\n// data-store/keys.ts\n// Centralized KV key builders. Keep shapes consistent across repositories.\n// Production-only system - no environment namespacing needed\nfunction buildDataKey(entity, id) {\n    return \"data:\".concat(entity, \":\").concat(id);\n}\nfunction buildIndexKey(entity) {\n    return \"index:\".concat(entity); // set of ids\n}\nfunction buildLinksIndexKey(entityType, id) {\n    return \"index:links:by-entity:\".concat(entityType, \":\").concat(id); // set of link ids\n}\nfunction buildLinkKey(id) {\n    return \"links:link:\".concat(id);\n}\nfunction buildEffectKey(effectKey) {\n    return \"effects:\".concat(effectKey);\n}\nfunction buildLogKey(entity, yyyymm) {\n    return yyyymm ? \"logs:\".concat(entity, \":\").concat(yyyymm) : \"logs:\".concat(entity);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2RhdGEtc3RvcmUva2V5cy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxxQkFBcUI7QUFDckIsMkVBQTJFO0FBQzNFLDZEQUE2RDtBQUV0RCxTQUFTQSxhQUFhQyxNQUFjLEVBQUVDLEVBQVU7SUFDckQsT0FBTyxRQUFrQkEsT0FBVkQsUUFBTyxLQUFNLE9BQUhDO0FBQzNCO0FBRU8sU0FBU0MsY0FBY0YsTUFBYztJQUMxQyxPQUFPLFNBQWdCLE9BQVBBLFNBQVUsYUFBYTtBQUN6QztBQUVPLFNBQVNHLG1CQUFtQkMsVUFBa0IsRUFBRUgsRUFBVTtJQUMvRCxPQUFPLHlCQUF1Q0EsT0FBZEcsWUFBVyxLQUFNLE9BQUhILEtBQU0sa0JBQWtCO0FBQ3hFO0FBRU8sU0FBU0ksYUFBYUosRUFBVTtJQUNyQyxPQUFPLGNBQWlCLE9BQUhBO0FBQ3ZCO0FBRU8sU0FBU0ssZUFBZUMsU0FBaUI7SUFDOUMsT0FBTyxXQUFxQixPQUFWQTtBQUNwQjtBQUVPLFNBQVNDLFlBQVlSLE1BQWMsRUFBRVMsTUFBZTtJQUN6RCxPQUFPQSxTQUNILFFBQWtCQSxPQUFWVCxRQUFPLEtBQVUsT0FBUFMsVUFDbEIsUUFBZSxPQUFQVDtBQUNkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2RhdGEtc3RvcmUva2V5cy50cz83MGUyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGRhdGEtc3RvcmUva2V5cy50c1xyXG4vLyBDZW50cmFsaXplZCBLViBrZXkgYnVpbGRlcnMuIEtlZXAgc2hhcGVzIGNvbnNpc3RlbnQgYWNyb3NzIHJlcG9zaXRvcmllcy5cclxuLy8gUHJvZHVjdGlvbi1vbmx5IHN5c3RlbSAtIG5vIGVudmlyb25tZW50IG5hbWVzcGFjaW5nIG5lZWRlZFxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkRGF0YUtleShlbnRpdHk6IHN0cmluZywgaWQ6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgcmV0dXJuIGBkYXRhOiR7ZW50aXR5fToke2lkfWA7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBidWlsZEluZGV4S2V5KGVudGl0eTogc3RyaW5nKTogc3RyaW5nIHtcclxuICByZXR1cm4gYGluZGV4OiR7ZW50aXR5fWA7IC8vIHNldCBvZiBpZHNcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkTGlua3NJbmRleEtleShlbnRpdHlUeXBlOiBzdHJpbmcsIGlkOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gIHJldHVybiBgaW5kZXg6bGlua3M6YnktZW50aXR5OiR7ZW50aXR5VHlwZX06JHtpZH1gOyAvLyBzZXQgb2YgbGluayBpZHNcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkTGlua0tleShpZDogc3RyaW5nKTogc3RyaW5nIHtcclxuICByZXR1cm4gYGxpbmtzOmxpbms6JHtpZH1gO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRFZmZlY3RLZXkoZWZmZWN0S2V5OiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gIHJldHVybiBgZWZmZWN0czoke2VmZmVjdEtleX1gO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRMb2dLZXkoZW50aXR5OiBzdHJpbmcsIHl5eXltbT86IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgcmV0dXJuIHl5eXltbVxyXG4gICAgPyBgbG9nczoke2VudGl0eX06JHt5eXl5bW19YFxyXG4gICAgOiBgbG9nczoke2VudGl0eX1gO1xyXG59XHJcblxyXG5cclxuIl0sIm5hbWVzIjpbImJ1aWxkRGF0YUtleSIsImVudGl0eSIsImlkIiwiYnVpbGRJbmRleEtleSIsImJ1aWxkTGlua3NJbmRleEtleSIsImVudGl0eVR5cGUiLCJidWlsZExpbmtLZXkiLCJidWlsZEVmZmVjdEtleSIsImVmZmVjdEtleSIsImJ1aWxkTG9nS2V5IiwieXl5eW1tIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data-store/keys.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./data-store/kv.ts":
/*!**************************!*\
  !*** ./data-store/kv.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   kvDel: function() { return /* binding */ kvDel; },\n/* harmony export */   kvGet: function() { return /* binding */ kvGet; },\n/* harmony export */   kvMGet: function() { return /* binding */ kvMGet; },\n/* harmony export */   kvSAdd: function() { return /* binding */ kvSAdd; },\n/* harmony export */   kvSMembers: function() { return /* binding */ kvSMembers; },\n/* harmony export */   kvSRem: function() { return /* binding */ kvSRem; },\n/* harmony export */   kvScan: function() { return /* binding */ kvScan; },\n/* harmony export */   kvSet: function() { return /* binding */ kvSet; }\n/* harmony export */ });\n/* harmony import */ var _vercel_kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vercel/kv */ \"(app-pages-browser)/./node_modules/@vercel/kv/dist/index.js\");\n// data-store/kv.ts\n// Thin server-only wrappers around @vercel/kv. No HTTP calls to own routes.\n\nasync function kvGet(key) {\n    var _ref;\n    return (_ref = await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.get(key)) !== null && _ref !== void 0 ? _ref : null;\n}\nasync function kvSet(key, value) {\n    await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.set(key, value);\n}\nasync function kvDel(key) {\n    await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.del(key);\n}\nasync function kvMGet(keys) {\n    const res = await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.mget(keys);\n    return res.map((v)=>v !== null && v !== void 0 ? v : null);\n}\nasync function kvScan(prefix) {\n    let limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 100;\n    const keys = [];\n    const iter = _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.scanIterator({\n        match: \"\".concat(prefix, \"*\"),\n        count: limit\n    });\n    for await (const key of iter){\n        keys.push(key);\n    }\n    return keys;\n}\nasync function kvSAdd(key) {\n    for(var _len = arguments.length, members = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        members[_key - 1] = arguments[_key];\n    }\n    if (members.length) await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.sadd(key, ...members);\n}\nasync function kvSRem(key) {\n    for(var _len = arguments.length, members = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        members[_key - 1] = arguments[_key];\n    }\n    if (members.length) await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.srem(key, ...members);\n}\nasync function kvSMembers(key) {\n    const members = await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.smembers(key);\n    return members !== null && members !== void 0 ? members : [];\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2RhdGEtc3RvcmUva3YudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsbUJBQW1CO0FBQ25CLDRFQUE0RTtBQUU1QztBQUV6QixlQUFlQyxNQUFTQyxHQUFXO1FBQ2hDO0lBQVIsT0FBTyxDQUFDLGFBQU1GLDBDQUFFQSxDQUFDRyxHQUFHLENBQUlELGtCQUFoQix5QkFBeUI7QUFDbkM7QUFFTyxlQUFlRSxNQUFTRixHQUFXLEVBQUVHLEtBQVE7SUFDbEQsTUFBTUwsMENBQUVBLENBQUNNLEdBQUcsQ0FBQ0osS0FBS0c7QUFDcEI7QUFFTyxlQUFlRSxNQUFNTCxHQUFXO0lBQ3JDLE1BQU1GLDBDQUFFQSxDQUFDUSxHQUFHLENBQUNOO0FBQ2Y7QUFFTyxlQUFlTyxPQUFVQyxJQUFjO0lBQzVDLE1BQU1DLE1BQU0sTUFBTVgsMENBQUVBLENBQUNZLElBQUksQ0FBQ0Y7SUFDMUIsT0FBTyxJQUFlRyxHQUFHLENBQUNDLENBQUFBLElBQU1BLGNBQUFBLGVBQUFBLElBQUs7QUFDdkM7QUFFTyxlQUFlQyxPQUFPQyxNQUFjO1FBQUVDLFFBQUFBLGlFQUFRO0lBQ25ELE1BQU1QLE9BQWlCLEVBQUU7SUFDekIsTUFBTVEsT0FBT2xCLDBDQUFFQSxDQUFDbUIsWUFBWSxDQUFDO1FBQUVDLE9BQU8sR0FBVSxPQUFQSixRQUFPO1FBQUlLLE9BQU9KO0lBQU07SUFDakUsV0FBVyxNQUFNZixPQUFPZ0IsS0FBTTtRQUM1QlIsS0FBS1ksSUFBSSxDQUFDcEI7SUFDWjtJQUNBLE9BQU9RO0FBQ1Q7QUFFTyxlQUFlYSxPQUFPckIsR0FBVztJQUFFO1FBQUdzQixRQUFILDJCQUFvQjs7SUFDNUQsSUFBSUEsUUFBUUMsTUFBTSxFQUFFLE1BQU16QiwwQ0FBRUEsQ0FBQzBCLElBQUksQ0FBQ3hCLFFBQVNzQjtBQUM3QztBQUVPLGVBQWVHLE9BQU96QixHQUFXO0lBQUU7UUFBR3NCLFFBQUgsMkJBQW9COztJQUM1RCxJQUFJQSxRQUFRQyxNQUFNLEVBQUUsTUFBTXpCLDBDQUFFQSxDQUFDNEIsSUFBSSxDQUFDMUIsUUFBU3NCO0FBQzdDO0FBRU8sZUFBZUssV0FBVzNCLEdBQVc7SUFDMUMsTUFBTXNCLFVBQVUsTUFBTXhCLDBDQUFFQSxDQUFDOEIsUUFBUSxDQUFDNUI7SUFDbEMsT0FBT3NCLG9CQUFBQSxxQkFBQUEsVUFBVyxFQUFFO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2RhdGEtc3RvcmUva3YudHM/NzU0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkYXRhLXN0b3JlL2t2LnRzXHJcbi8vIFRoaW4gc2VydmVyLW9ubHkgd3JhcHBlcnMgYXJvdW5kIEB2ZXJjZWwva3YuIE5vIEhUVFAgY2FsbHMgdG8gb3duIHJvdXRlcy5cclxuXHJcbmltcG9ydCB7IGt2IH0gZnJvbSAnQHZlcmNlbC9rdic7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24ga3ZHZXQ8VD4oa2V5OiBzdHJpbmcpOiBQcm9taXNlPFQgfCBudWxsPiB7XHJcbiAgcmV0dXJuIChhd2FpdCBrdi5nZXQ8VD4oa2V5KSkgPz8gbnVsbDtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGt2U2V0PFQ+KGtleTogc3RyaW5nLCB2YWx1ZTogVCk6IFByb21pc2U8dm9pZD4ge1xyXG4gIGF3YWl0IGt2LnNldChrZXksIHZhbHVlIGFzIGFueSk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBrdkRlbChrZXk6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xyXG4gIGF3YWl0IGt2LmRlbChrZXkpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24ga3ZNR2V0PFQ+KGtleXM6IHN0cmluZ1tdKTogUHJvbWlzZTwoVCB8IG51bGwpW10+IHtcclxuICBjb25zdCByZXMgPSBhd2FpdCBrdi5tZ2V0KGtleXMpO1xyXG4gIHJldHVybiAocmVzIGFzIGFueVtdKS5tYXAodiA9PiAodiA/PyBudWxsKSk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBrdlNjYW4ocHJlZml4OiBzdHJpbmcsIGxpbWl0ID0gMTAwKTogUHJvbWlzZTxzdHJpbmdbXT4ge1xyXG4gIGNvbnN0IGtleXM6IHN0cmluZ1tdID0gW107XHJcbiAgY29uc3QgaXRlciA9IGt2LnNjYW5JdGVyYXRvcih7IG1hdGNoOiBgJHtwcmVmaXh9KmAsIGNvdW50OiBsaW1pdCB9KTtcclxuICBmb3IgYXdhaXQgKGNvbnN0IGtleSBvZiBpdGVyKSB7XHJcbiAgICBrZXlzLnB1c2goa2V5IGFzIHN0cmluZyk7XHJcbiAgfVxyXG4gIHJldHVybiBrZXlzO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24ga3ZTQWRkKGtleTogc3RyaW5nLCAuLi5tZW1iZXJzOiBzdHJpbmdbXSk6IFByb21pc2U8dm9pZD4ge1xyXG4gIGlmIChtZW1iZXJzLmxlbmd0aCkgYXdhaXQga3Yuc2FkZChrZXksIC4uLihtZW1iZXJzIGFzIFtzdHJpbmcsIC4uLnN0cmluZ1tdXSkpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24ga3ZTUmVtKGtleTogc3RyaW5nLCAuLi5tZW1iZXJzOiBzdHJpbmdbXSk6IFByb21pc2U8dm9pZD4ge1xyXG4gIGlmIChtZW1iZXJzLmxlbmd0aCkgYXdhaXQga3Yuc3JlbShrZXksIC4uLihtZW1iZXJzIGFzIFtzdHJpbmcsIC4uLnN0cmluZ1tdXSkpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24ga3ZTTWVtYmVycyhrZXk6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nW10+IHtcclxuICBjb25zdCBtZW1iZXJzID0gYXdhaXQga3Yuc21lbWJlcnMoa2V5KTtcclxuICByZXR1cm4gbWVtYmVycyA/PyBbXTtcclxufVxyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJrdiIsImt2R2V0Iiwia2V5IiwiZ2V0Iiwia3ZTZXQiLCJ2YWx1ZSIsInNldCIsImt2RGVsIiwiZGVsIiwia3ZNR2V0Iiwia2V5cyIsInJlcyIsIm1nZXQiLCJtYXAiLCJ2Iiwia3ZTY2FuIiwicHJlZml4IiwibGltaXQiLCJpdGVyIiwic2Nhbkl0ZXJhdG9yIiwibWF0Y2giLCJjb3VudCIsInB1c2giLCJrdlNBZGQiLCJtZW1iZXJzIiwibGVuZ3RoIiwic2FkZCIsImt2U1JlbSIsInNyZW0iLCJrdlNNZW1iZXJzIiwic21lbWJlcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data-store/kv.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./data-store/repositories/character.repo.ts":
/*!***************************************************!*\
  !*** ./data-store/repositories/character.repo.ts ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteCharacter: function() { return /* binding */ deleteCharacter; },\n/* harmony export */   getAllCharacters: function() { return /* binding */ getAllCharacters; },\n/* harmony export */   getCharacterById: function() { return /* binding */ getCharacterById; },\n/* harmony export */   upsertCharacter: function() { return /* binding */ upsertCharacter; }\n/* harmony export */ });\n/* harmony import */ var _kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../kv */ \"(app-pages-browser)/./data-store/kv.ts\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../keys */ \"(app-pages-browser)/./data-store/keys.ts\");\n// data-store/repositories/character.repo.ts\n\n\nconst ENTITY = \"characters\";\nasync function getAllCharacters() {\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    const ids = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)(indexKey);\n    if (ids.length === 0) return [];\n    const characters = [];\n    for (const id of ids){\n        const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n        const character = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n        if (character) characters.push(character);\n    }\n    return characters;\n}\nasync function getCharacterById(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    return await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n}\nasync function upsertCharacter(character) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, character.id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, character);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)(indexKey, character.id);\n    return character;\n}\nasync function deleteCharacter(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)(key);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)(indexKey, id);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2RhdGEtc3RvcmUvcmVwb3NpdG9yaWVzL2NoYXJhY3Rlci5yZXBvLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLDRDQUE0QztBQUM0QjtBQUNsQjtBQUd0RCxNQUFNUSxTQUFTO0FBRVIsZUFBZUM7SUFDcEIsTUFBTUMsV0FBV0gsb0RBQWFBLENBQUNDO0lBQy9CLE1BQU1HLE1BQU0sTUFBTU4sK0NBQVVBLENBQUNLO0lBQzdCLElBQUlDLElBQUlDLE1BQU0sS0FBSyxHQUFHLE9BQU8sRUFBRTtJQUUvQixNQUFNQyxhQUEwQixFQUFFO0lBQ2xDLEtBQUssTUFBTUMsTUFBTUgsSUFBSztRQUNwQixNQUFNSSxNQUFNVCxtREFBWUEsQ0FBQ0UsUUFBUU07UUFDakMsTUFBTUUsWUFBWSxNQUFNaEIsMENBQUtBLENBQVllO1FBQ3pDLElBQUlDLFdBQVdILFdBQVdJLElBQUksQ0FBQ0Q7SUFDakM7SUFFQSxPQUFPSDtBQUNUO0FBRU8sZUFBZUssaUJBQWlCSixFQUFVO0lBQy9DLE1BQU1DLE1BQU1ULG1EQUFZQSxDQUFDRSxRQUFRTTtJQUNqQyxPQUFPLE1BQU1kLDBDQUFLQSxDQUFZZTtBQUNoQztBQUVPLGVBQWVJLGdCQUFnQkgsU0FBb0I7SUFDeEQsTUFBTUQsTUFBTVQsbURBQVlBLENBQUNFLFFBQVFRLFVBQVVGLEVBQUU7SUFDN0MsTUFBTUosV0FBV0gsb0RBQWFBLENBQUNDO0lBRS9CLE1BQU1QLDBDQUFLQSxDQUFDYyxLQUFLQztJQUNqQixNQUFNYiwyQ0FBTUEsQ0FBQ08sVUFBVU0sVUFBVUYsRUFBRTtJQUVuQyxPQUFPRTtBQUNUO0FBRU8sZUFBZUksZ0JBQWdCTixFQUFVO0lBQzlDLE1BQU1DLE1BQU1ULG1EQUFZQSxDQUFDRSxRQUFRTTtJQUNqQyxNQUFNSixXQUFXSCxvREFBYUEsQ0FBQ0M7SUFFL0IsTUFBTU4sMENBQUtBLENBQUNhO0lBQ1osTUFBTVgsMkNBQU1BLENBQUNNLFVBQVVJO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2RhdGEtc3RvcmUvcmVwb3NpdG9yaWVzL2NoYXJhY3Rlci5yZXBvLnRzP2VhNTQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGF0YS1zdG9yZS9yZXBvc2l0b3JpZXMvY2hhcmFjdGVyLnJlcG8udHNcclxuaW1wb3J0IHsga3ZHZXQsIGt2U2V0LCBrdkRlbCwga3ZTQWRkLCBrdlNSZW0sIGt2U01lbWJlcnMgfSBmcm9tICcuLi9rdic7XHJcbmltcG9ydCB7IGJ1aWxkRGF0YUtleSwgYnVpbGRJbmRleEtleSB9IGZyb20gJy4uL2tleXMnO1xyXG5pbXBvcnQgdHlwZSB7IENoYXJhY3RlciB9IGZyb20gJ0AvdHlwZXMvZW50aXRpZXMnO1xyXG5cclxuY29uc3QgRU5USVRZID0gJ2NoYXJhY3RlcnMnO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEFsbENoYXJhY3RlcnMoKTogUHJvbWlzZTxDaGFyYWN0ZXJbXT4ge1xyXG4gIGNvbnN0IGluZGV4S2V5ID0gYnVpbGRJbmRleEtleShFTlRJVFkpO1xyXG4gIGNvbnN0IGlkcyA9IGF3YWl0IGt2U01lbWJlcnMoaW5kZXhLZXkpO1xyXG4gIGlmIChpZHMubGVuZ3RoID09PSAwKSByZXR1cm4gW107XHJcbiAgXHJcbiAgY29uc3QgY2hhcmFjdGVyczogQ2hhcmFjdGVyW10gPSBbXTtcclxuICBmb3IgKGNvbnN0IGlkIG9mIGlkcykge1xyXG4gICAgY29uc3Qga2V5ID0gYnVpbGREYXRhS2V5KEVOVElUWSwgaWQpO1xyXG4gICAgY29uc3QgY2hhcmFjdGVyID0gYXdhaXQga3ZHZXQ8Q2hhcmFjdGVyPihrZXkpO1xyXG4gICAgaWYgKGNoYXJhY3RlcikgY2hhcmFjdGVycy5wdXNoKGNoYXJhY3Rlcik7XHJcbiAgfVxyXG4gIFxyXG4gIHJldHVybiBjaGFyYWN0ZXJzO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0Q2hhcmFjdGVyQnlJZChpZDogc3RyaW5nKTogUHJvbWlzZTxDaGFyYWN0ZXIgfCBudWxsPiB7XHJcbiAgY29uc3Qga2V5ID0gYnVpbGREYXRhS2V5KEVOVElUWSwgaWQpO1xyXG4gIHJldHVybiBhd2FpdCBrdkdldDxDaGFyYWN0ZXI+KGtleSk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cHNlcnRDaGFyYWN0ZXIoY2hhcmFjdGVyOiBDaGFyYWN0ZXIpOiBQcm9taXNlPENoYXJhY3Rlcj4ge1xyXG4gIGNvbnN0IGtleSA9IGJ1aWxkRGF0YUtleShFTlRJVFksIGNoYXJhY3Rlci5pZCk7XHJcbiAgY29uc3QgaW5kZXhLZXkgPSBidWlsZEluZGV4S2V5KEVOVElUWSk7XHJcbiAgXHJcbiAgYXdhaXQga3ZTZXQoa2V5LCBjaGFyYWN0ZXIpO1xyXG4gIGF3YWl0IGt2U0FkZChpbmRleEtleSwgY2hhcmFjdGVyLmlkKTtcclxuICBcclxuICByZXR1cm4gY2hhcmFjdGVyO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVsZXRlQ2hhcmFjdGVyKGlkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcclxuICBjb25zdCBrZXkgPSBidWlsZERhdGFLZXkoRU5USVRZLCBpZCk7XHJcbiAgY29uc3QgaW5kZXhLZXkgPSBidWlsZEluZGV4S2V5KEVOVElUWSk7XHJcbiAgXHJcbiAgYXdhaXQga3ZEZWwoa2V5KTtcclxuICBhd2FpdCBrdlNSZW0oaW5kZXhLZXksIGlkKTtcclxufVxyXG4iXSwibmFtZXMiOlsia3ZHZXQiLCJrdlNldCIsImt2RGVsIiwia3ZTQWRkIiwia3ZTUmVtIiwia3ZTTWVtYmVycyIsImJ1aWxkRGF0YUtleSIsImJ1aWxkSW5kZXhLZXkiLCJFTlRJVFkiLCJnZXRBbGxDaGFyYWN0ZXJzIiwiaW5kZXhLZXkiLCJpZHMiLCJsZW5ndGgiLCJjaGFyYWN0ZXJzIiwiaWQiLCJrZXkiLCJjaGFyYWN0ZXIiLCJwdXNoIiwiZ2V0Q2hhcmFjdGVyQnlJZCIsInVwc2VydENoYXJhY3RlciIsImRlbGV0ZUNoYXJhY3RlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data-store/repositories/character.repo.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./data-store/repositories/financial.repo.ts":
/*!***************************************************!*\
  !*** ./data-store/repositories/financial.repo.ts ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteFinancial: function() { return /* binding */ deleteFinancial; },\n/* harmony export */   getAllFinancials: function() { return /* binding */ getAllFinancials; },\n/* harmony export */   getFinancialById: function() { return /* binding */ getFinancialById; },\n/* harmony export */   upsertFinancial: function() { return /* binding */ upsertFinancial; }\n/* harmony export */ });\n/* harmony import */ var _kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../kv */ \"(app-pages-browser)/./data-store/kv.ts\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../keys */ \"(app-pages-browser)/./data-store/keys.ts\");\n// data-store/repositories/financial.repo.ts\n\n\nconst ENTITY = \"financials\";\nasync function getAllFinancials() {\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    const ids = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)(indexKey);\n    if (ids.length === 0) return [];\n    const financials = [];\n    for (const id of ids){\n        const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n        const financial = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n        if (financial) financials.push(financial);\n    }\n    return financials;\n}\nasync function getFinancialById(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    return await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n}\nasync function upsertFinancial(financial) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, financial.id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, financial);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)(indexKey, financial.id);\n    return financial;\n}\nasync function deleteFinancial(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)(key);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)(indexKey, id);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2RhdGEtc3RvcmUvcmVwb3NpdG9yaWVzL2ZpbmFuY2lhbC5yZXBvLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLDRDQUE0QztBQUM0QjtBQUNsQjtBQUd0RCxNQUFNUSxTQUFTO0FBRVIsZUFBZUM7SUFDcEIsTUFBTUMsV0FBV0gsb0RBQWFBLENBQUNDO0lBQy9CLE1BQU1HLE1BQU0sTUFBTU4sK0NBQVVBLENBQUNLO0lBQzdCLElBQUlDLElBQUlDLE1BQU0sS0FBSyxHQUFHLE9BQU8sRUFBRTtJQUUvQixNQUFNQyxhQUFnQyxFQUFFO0lBQ3hDLEtBQUssTUFBTUMsTUFBTUgsSUFBSztRQUNwQixNQUFNSSxNQUFNVCxtREFBWUEsQ0FBQ0UsUUFBUU07UUFDakMsTUFBTUUsWUFBWSxNQUFNaEIsMENBQUtBLENBQWtCZTtRQUMvQyxJQUFJQyxXQUFXSCxXQUFXSSxJQUFJLENBQUNEO0lBQ2pDO0lBRUEsT0FBT0g7QUFDVDtBQUVPLGVBQWVLLGlCQUFpQkosRUFBVTtJQUMvQyxNQUFNQyxNQUFNVCxtREFBWUEsQ0FBQ0UsUUFBUU07SUFDakMsT0FBTyxNQUFNZCwwQ0FBS0EsQ0FBa0JlO0FBQ3RDO0FBRU8sZUFBZUksZ0JBQWdCSCxTQUEwQjtJQUM5RCxNQUFNRCxNQUFNVCxtREFBWUEsQ0FBQ0UsUUFBUVEsVUFBVUYsRUFBRTtJQUM3QyxNQUFNSixXQUFXSCxvREFBYUEsQ0FBQ0M7SUFFL0IsTUFBTVAsMENBQUtBLENBQUNjLEtBQUtDO0lBQ2pCLE1BQU1iLDJDQUFNQSxDQUFDTyxVQUFVTSxVQUFVRixFQUFFO0lBRW5DLE9BQU9FO0FBQ1Q7QUFFTyxlQUFlSSxnQkFBZ0JOLEVBQVU7SUFDOUMsTUFBTUMsTUFBTVQsbURBQVlBLENBQUNFLFFBQVFNO0lBQ2pDLE1BQU1KLFdBQVdILG9EQUFhQSxDQUFDQztJQUUvQixNQUFNTiwwQ0FBS0EsQ0FBQ2E7SUFDWixNQUFNWCwyQ0FBTUEsQ0FBQ00sVUFBVUk7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vZGF0YS1zdG9yZS9yZXBvc2l0b3JpZXMvZmluYW5jaWFsLnJlcG8udHM/ZGUwYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkYXRhLXN0b3JlL3JlcG9zaXRvcmllcy9maW5hbmNpYWwucmVwby50c1xyXG5pbXBvcnQgeyBrdkdldCwga3ZTZXQsIGt2RGVsLCBrdlNBZGQsIGt2U1JlbSwga3ZTTWVtYmVycyB9IGZyb20gJy4uL2t2JztcclxuaW1wb3J0IHsgYnVpbGREYXRhS2V5LCBidWlsZEluZGV4S2V5IH0gZnJvbSAnLi4va2V5cyc7XHJcbmltcG9ydCB0eXBlIHsgRmluYW5jaWFsUmVjb3JkIH0gZnJvbSAnQC90eXBlcy9lbnRpdGllcyc7XHJcblxyXG5jb25zdCBFTlRJVFkgPSAnZmluYW5jaWFscyc7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsRmluYW5jaWFscygpOiBQcm9taXNlPEZpbmFuY2lhbFJlY29yZFtdPiB7XHJcbiAgY29uc3QgaW5kZXhLZXkgPSBidWlsZEluZGV4S2V5KEVOVElUWSk7XHJcbiAgY29uc3QgaWRzID0gYXdhaXQga3ZTTWVtYmVycyhpbmRleEtleSk7XHJcbiAgaWYgKGlkcy5sZW5ndGggPT09IDApIHJldHVybiBbXTtcclxuICBcclxuICBjb25zdCBmaW5hbmNpYWxzOiBGaW5hbmNpYWxSZWNvcmRbXSA9IFtdO1xyXG4gIGZvciAoY29uc3QgaWQgb2YgaWRzKSB7XHJcbiAgICBjb25zdCBrZXkgPSBidWlsZERhdGFLZXkoRU5USVRZLCBpZCk7XHJcbiAgICBjb25zdCBmaW5hbmNpYWwgPSBhd2FpdCBrdkdldDxGaW5hbmNpYWxSZWNvcmQ+KGtleSk7XHJcbiAgICBpZiAoZmluYW5jaWFsKSBmaW5hbmNpYWxzLnB1c2goZmluYW5jaWFsKTtcclxuICB9XHJcbiAgXHJcbiAgcmV0dXJuIGZpbmFuY2lhbHM7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRGaW5hbmNpYWxCeUlkKGlkOiBzdHJpbmcpOiBQcm9taXNlPEZpbmFuY2lhbFJlY29yZCB8IG51bGw+IHtcclxuICBjb25zdCBrZXkgPSBidWlsZERhdGFLZXkoRU5USVRZLCBpZCk7XHJcbiAgcmV0dXJuIGF3YWl0IGt2R2V0PEZpbmFuY2lhbFJlY29yZD4oa2V5KTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwc2VydEZpbmFuY2lhbChmaW5hbmNpYWw6IEZpbmFuY2lhbFJlY29yZCk6IFByb21pc2U8RmluYW5jaWFsUmVjb3JkPiB7XHJcbiAgY29uc3Qga2V5ID0gYnVpbGREYXRhS2V5KEVOVElUWSwgZmluYW5jaWFsLmlkKTtcclxuICBjb25zdCBpbmRleEtleSA9IGJ1aWxkSW5kZXhLZXkoRU5USVRZKTtcclxuICBcclxuICBhd2FpdCBrdlNldChrZXksIGZpbmFuY2lhbCk7XHJcbiAgYXdhaXQga3ZTQWRkKGluZGV4S2V5LCBmaW5hbmNpYWwuaWQpO1xyXG4gIFxyXG4gIHJldHVybiBmaW5hbmNpYWw7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWxldGVGaW5hbmNpYWwoaWQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xyXG4gIGNvbnN0IGtleSA9IGJ1aWxkRGF0YUtleShFTlRJVFksIGlkKTtcclxuICBjb25zdCBpbmRleEtleSA9IGJ1aWxkSW5kZXhLZXkoRU5USVRZKTtcclxuICBcclxuICBhd2FpdCBrdkRlbChrZXkpO1xyXG4gIGF3YWl0IGt2U1JlbShpbmRleEtleSwgaWQpO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJrdkdldCIsImt2U2V0Iiwia3ZEZWwiLCJrdlNBZGQiLCJrdlNSZW0iLCJrdlNNZW1iZXJzIiwiYnVpbGREYXRhS2V5IiwiYnVpbGRJbmRleEtleSIsIkVOVElUWSIsImdldEFsbEZpbmFuY2lhbHMiLCJpbmRleEtleSIsImlkcyIsImxlbmd0aCIsImZpbmFuY2lhbHMiLCJpZCIsImtleSIsImZpbmFuY2lhbCIsInB1c2giLCJnZXRGaW5hbmNpYWxCeUlkIiwidXBzZXJ0RmluYW5jaWFsIiwiZGVsZXRlRmluYW5jaWFsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data-store/repositories/financial.repo.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./data-store/repositories/item.repo.ts":
/*!**********************************************!*\
  !*** ./data-store/repositories/item.repo.ts ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteItem: function() { return /* binding */ deleteItem; },\n/* harmony export */   getAllItems: function() { return /* binding */ getAllItems; },\n/* harmony export */   getItemById: function() { return /* binding */ getItemById; },\n/* harmony export */   upsertItem: function() { return /* binding */ upsertItem; }\n/* harmony export */ });\n/* harmony import */ var _kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../kv */ \"(app-pages-browser)/./data-store/kv.ts\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../keys */ \"(app-pages-browser)/./data-store/keys.ts\");\n// data-store/repositories/item.repo.ts\n\n\nconst ENTITY = \"items\";\nasync function getAllItems() {\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    const ids = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)(indexKey);\n    if (ids.length === 0) return [];\n    const items = [];\n    for (const id of ids){\n        const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n        const item = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n        if (item) items.push(item);\n    }\n    return items;\n}\nasync function getItemById(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    return await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n}\nasync function upsertItem(item) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, item.id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, item);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)(indexKey, item.id);\n    return item;\n}\nasync function deleteItem(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)(key);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)(indexKey, id);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2RhdGEtc3RvcmUvcmVwb3NpdG9yaWVzL2l0ZW0ucmVwby50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSx1Q0FBdUM7QUFDaUM7QUFDbEI7QUFHdEQsTUFBTVEsU0FBUztBQUVSLGVBQWVDO0lBQ3BCLE1BQU1DLFdBQVdILG9EQUFhQSxDQUFDQztJQUMvQixNQUFNRyxNQUFNLE1BQU1OLCtDQUFVQSxDQUFDSztJQUM3QixJQUFJQyxJQUFJQyxNQUFNLEtBQUssR0FBRyxPQUFPLEVBQUU7SUFFL0IsTUFBTUMsUUFBZ0IsRUFBRTtJQUN4QixLQUFLLE1BQU1DLE1BQU1ILElBQUs7UUFDcEIsTUFBTUksTUFBTVQsbURBQVlBLENBQUNFLFFBQVFNO1FBQ2pDLE1BQU1FLE9BQU8sTUFBTWhCLDBDQUFLQSxDQUFPZTtRQUMvQixJQUFJQyxNQUFNSCxNQUFNSSxJQUFJLENBQUNEO0lBQ3ZCO0lBRUEsT0FBT0g7QUFDVDtBQUVPLGVBQWVLLFlBQVlKLEVBQVU7SUFDMUMsTUFBTUMsTUFBTVQsbURBQVlBLENBQUNFLFFBQVFNO0lBQ2pDLE9BQU8sTUFBTWQsMENBQUtBLENBQU9lO0FBQzNCO0FBRU8sZUFBZUksV0FBV0gsSUFBVTtJQUN6QyxNQUFNRCxNQUFNVCxtREFBWUEsQ0FBQ0UsUUFBUVEsS0FBS0YsRUFBRTtJQUN4QyxNQUFNSixXQUFXSCxvREFBYUEsQ0FBQ0M7SUFFL0IsTUFBTVAsMENBQUtBLENBQUNjLEtBQUtDO0lBQ2pCLE1BQU1iLDJDQUFNQSxDQUFDTyxVQUFVTSxLQUFLRixFQUFFO0lBRTlCLE9BQU9FO0FBQ1Q7QUFFTyxlQUFlSSxXQUFXTixFQUFVO0lBQ3pDLE1BQU1DLE1BQU1ULG1EQUFZQSxDQUFDRSxRQUFRTTtJQUNqQyxNQUFNSixXQUFXSCxvREFBYUEsQ0FBQ0M7SUFFL0IsTUFBTU4sMENBQUtBLENBQUNhO0lBQ1osTUFBTVgsMkNBQU1BLENBQUNNLFVBQVVJO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2RhdGEtc3RvcmUvcmVwb3NpdG9yaWVzL2l0ZW0ucmVwby50cz9jNjQ4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGRhdGEtc3RvcmUvcmVwb3NpdG9yaWVzL2l0ZW0ucmVwby50c1xyXG5pbXBvcnQgeyBrdkdldCwga3ZTZXQsIGt2RGVsLCBrdlNBZGQsIGt2U1JlbSwga3ZTTWVtYmVycyB9IGZyb20gJy4uL2t2JztcclxuaW1wb3J0IHsgYnVpbGREYXRhS2V5LCBidWlsZEluZGV4S2V5IH0gZnJvbSAnLi4va2V5cyc7XHJcbmltcG9ydCB0eXBlIHsgSXRlbSB9IGZyb20gJ0AvdHlwZXMvZW50aXRpZXMnO1xyXG5cclxuY29uc3QgRU5USVRZID0gJ2l0ZW1zJztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBbGxJdGVtcygpOiBQcm9taXNlPEl0ZW1bXT4ge1xyXG4gIGNvbnN0IGluZGV4S2V5ID0gYnVpbGRJbmRleEtleShFTlRJVFkpO1xyXG4gIGNvbnN0IGlkcyA9IGF3YWl0IGt2U01lbWJlcnMoaW5kZXhLZXkpO1xyXG4gIGlmIChpZHMubGVuZ3RoID09PSAwKSByZXR1cm4gW107XHJcbiAgXHJcbiAgY29uc3QgaXRlbXM6IEl0ZW1bXSA9IFtdO1xyXG4gIGZvciAoY29uc3QgaWQgb2YgaWRzKSB7XHJcbiAgICBjb25zdCBrZXkgPSBidWlsZERhdGFLZXkoRU5USVRZLCBpZCk7XHJcbiAgICBjb25zdCBpdGVtID0gYXdhaXQga3ZHZXQ8SXRlbT4oa2V5KTtcclxuICAgIGlmIChpdGVtKSBpdGVtcy5wdXNoKGl0ZW0pO1xyXG4gIH1cclxuICBcclxuICByZXR1cm4gaXRlbXM7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRJdGVtQnlJZChpZDogc3RyaW5nKTogUHJvbWlzZTxJdGVtIHwgbnVsbD4ge1xyXG4gIGNvbnN0IGtleSA9IGJ1aWxkRGF0YUtleShFTlRJVFksIGlkKTtcclxuICByZXR1cm4gYXdhaXQga3ZHZXQ8SXRlbT4oa2V5KTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwc2VydEl0ZW0oaXRlbTogSXRlbSk6IFByb21pc2U8SXRlbT4ge1xyXG4gIGNvbnN0IGtleSA9IGJ1aWxkRGF0YUtleShFTlRJVFksIGl0ZW0uaWQpO1xyXG4gIGNvbnN0IGluZGV4S2V5ID0gYnVpbGRJbmRleEtleShFTlRJVFkpO1xyXG4gIFxyXG4gIGF3YWl0IGt2U2V0KGtleSwgaXRlbSk7XHJcbiAgYXdhaXQga3ZTQWRkKGluZGV4S2V5LCBpdGVtLmlkKTtcclxuICBcclxuICByZXR1cm4gaXRlbTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRlbGV0ZUl0ZW0oaWQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xyXG4gIGNvbnN0IGtleSA9IGJ1aWxkRGF0YUtleShFTlRJVFksIGlkKTtcclxuICBjb25zdCBpbmRleEtleSA9IGJ1aWxkSW5kZXhLZXkoRU5USVRZKTtcclxuICBcclxuICBhd2FpdCBrdkRlbChrZXkpO1xyXG4gIGF3YWl0IGt2U1JlbShpbmRleEtleSwgaWQpO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJrdkdldCIsImt2U2V0Iiwia3ZEZWwiLCJrdlNBZGQiLCJrdlNSZW0iLCJrdlNNZW1iZXJzIiwiYnVpbGREYXRhS2V5IiwiYnVpbGRJbmRleEtleSIsIkVOVElUWSIsImdldEFsbEl0ZW1zIiwiaW5kZXhLZXkiLCJpZHMiLCJsZW5ndGgiLCJpdGVtcyIsImlkIiwia2V5IiwiaXRlbSIsInB1c2giLCJnZXRJdGVtQnlJZCIsInVwc2VydEl0ZW0iLCJkZWxldGVJdGVtIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data-store/repositories/item.repo.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./data-store/repositories/player.repo.ts":
/*!************************************************!*\
  !*** ./data-store/repositories/player.repo.ts ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deletePlayer: function() { return /* binding */ deletePlayer; },\n/* harmony export */   getAllPlayers: function() { return /* binding */ getAllPlayers; },\n/* harmony export */   getPlayerById: function() { return /* binding */ getPlayerById; },\n/* harmony export */   upsertPlayer: function() { return /* binding */ upsertPlayer; }\n/* harmony export */ });\n/* harmony import */ var _kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../kv */ \"(app-pages-browser)/./data-store/kv.ts\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../keys */ \"(app-pages-browser)/./data-store/keys.ts\");\n// data-store/repositories/player.repo.ts\n\n\nconst ENTITY = \"players\";\nasync function getAllPlayers() {\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    const ids = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)(indexKey);\n    if (ids.length === 0) return [];\n    const players = [];\n    for (const id of ids){\n        const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n        const player = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n        if (player) players.push(player);\n    }\n    return players;\n}\nasync function getPlayerById(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    return await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n}\nasync function upsertPlayer(player) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, player.id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, player);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)(indexKey, player.id);\n    return player;\n}\nasync function deletePlayer(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)(key);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)(indexKey, id);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2RhdGEtc3RvcmUvcmVwb3NpdG9yaWVzL3BsYXllci5yZXBvLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHlDQUF5QztBQUMrQjtBQUNsQjtBQUd0RCxNQUFNUSxTQUFTO0FBRVIsZUFBZUM7SUFDcEIsTUFBTUMsV0FBV0gsb0RBQWFBLENBQUNDO0lBQy9CLE1BQU1HLE1BQU0sTUFBTU4sK0NBQVVBLENBQUNLO0lBQzdCLElBQUlDLElBQUlDLE1BQU0sS0FBSyxHQUFHLE9BQU8sRUFBRTtJQUUvQixNQUFNQyxVQUFvQixFQUFFO0lBQzVCLEtBQUssTUFBTUMsTUFBTUgsSUFBSztRQUNwQixNQUFNSSxNQUFNVCxtREFBWUEsQ0FBQ0UsUUFBUU07UUFDakMsTUFBTUUsU0FBUyxNQUFNaEIsMENBQUtBLENBQVNlO1FBQ25DLElBQUlDLFFBQVFILFFBQVFJLElBQUksQ0FBQ0Q7SUFDM0I7SUFFQSxPQUFPSDtBQUNUO0FBRU8sZUFBZUssY0FBY0osRUFBVTtJQUM1QyxNQUFNQyxNQUFNVCxtREFBWUEsQ0FBQ0UsUUFBUU07SUFDakMsT0FBTyxNQUFNZCwwQ0FBS0EsQ0FBU2U7QUFDN0I7QUFFTyxlQUFlSSxhQUFhSCxNQUFjO0lBQy9DLE1BQU1ELE1BQU1ULG1EQUFZQSxDQUFDRSxRQUFRUSxPQUFPRixFQUFFO0lBQzFDLE1BQU1KLFdBQVdILG9EQUFhQSxDQUFDQztJQUUvQixNQUFNUCwwQ0FBS0EsQ0FBQ2MsS0FBS0M7SUFDakIsTUFBTWIsMkNBQU1BLENBQUNPLFVBQVVNLE9BQU9GLEVBQUU7SUFFaEMsT0FBT0U7QUFDVDtBQUVPLGVBQWVJLGFBQWFOLEVBQVU7SUFDM0MsTUFBTUMsTUFBTVQsbURBQVlBLENBQUNFLFFBQVFNO0lBQ2pDLE1BQU1KLFdBQVdILG9EQUFhQSxDQUFDQztJQUUvQixNQUFNTiwwQ0FBS0EsQ0FBQ2E7SUFDWixNQUFNWCwyQ0FBTUEsQ0FBQ00sVUFBVUk7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vZGF0YS1zdG9yZS9yZXBvc2l0b3JpZXMvcGxheWVyLnJlcG8udHM/MGE4OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkYXRhLXN0b3JlL3JlcG9zaXRvcmllcy9wbGF5ZXIucmVwby50c1xyXG5pbXBvcnQgeyBrdkdldCwga3ZTZXQsIGt2RGVsLCBrdlNBZGQsIGt2U1JlbSwga3ZTTWVtYmVycyB9IGZyb20gJy4uL2t2JztcclxuaW1wb3J0IHsgYnVpbGREYXRhS2V5LCBidWlsZEluZGV4S2V5IH0gZnJvbSAnLi4va2V5cyc7XHJcbmltcG9ydCB0eXBlIHsgUGxheWVyIH0gZnJvbSAnQC90eXBlcy9lbnRpdGllcyc7XHJcblxyXG5jb25zdCBFTlRJVFkgPSAncGxheWVycyc7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsUGxheWVycygpOiBQcm9taXNlPFBsYXllcltdPiB7XHJcbiAgY29uc3QgaW5kZXhLZXkgPSBidWlsZEluZGV4S2V5KEVOVElUWSk7XHJcbiAgY29uc3QgaWRzID0gYXdhaXQga3ZTTWVtYmVycyhpbmRleEtleSk7XHJcbiAgaWYgKGlkcy5sZW5ndGggPT09IDApIHJldHVybiBbXTtcclxuICBcclxuICBjb25zdCBwbGF5ZXJzOiBQbGF5ZXJbXSA9IFtdO1xyXG4gIGZvciAoY29uc3QgaWQgb2YgaWRzKSB7XHJcbiAgICBjb25zdCBrZXkgPSBidWlsZERhdGFLZXkoRU5USVRZLCBpZCk7XHJcbiAgICBjb25zdCBwbGF5ZXIgPSBhd2FpdCBrdkdldDxQbGF5ZXI+KGtleSk7XHJcbiAgICBpZiAocGxheWVyKSBwbGF5ZXJzLnB1c2gocGxheWVyKTtcclxuICB9XHJcbiAgXHJcbiAgcmV0dXJuIHBsYXllcnM7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRQbGF5ZXJCeUlkKGlkOiBzdHJpbmcpOiBQcm9taXNlPFBsYXllciB8IG51bGw+IHtcclxuICBjb25zdCBrZXkgPSBidWlsZERhdGFLZXkoRU5USVRZLCBpZCk7XHJcbiAgcmV0dXJuIGF3YWl0IGt2R2V0PFBsYXllcj4oa2V5KTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwc2VydFBsYXllcihwbGF5ZXI6IFBsYXllcik6IFByb21pc2U8UGxheWVyPiB7XHJcbiAgY29uc3Qga2V5ID0gYnVpbGREYXRhS2V5KEVOVElUWSwgcGxheWVyLmlkKTtcclxuICBjb25zdCBpbmRleEtleSA9IGJ1aWxkSW5kZXhLZXkoRU5USVRZKTtcclxuICBcclxuICBhd2FpdCBrdlNldChrZXksIHBsYXllcik7XHJcbiAgYXdhaXQga3ZTQWRkKGluZGV4S2V5LCBwbGF5ZXIuaWQpO1xyXG4gIFxyXG4gIHJldHVybiBwbGF5ZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWxldGVQbGF5ZXIoaWQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xyXG4gIGNvbnN0IGtleSA9IGJ1aWxkRGF0YUtleShFTlRJVFksIGlkKTtcclxuICBjb25zdCBpbmRleEtleSA9IGJ1aWxkSW5kZXhLZXkoRU5USVRZKTtcclxuICBcclxuICBhd2FpdCBrdkRlbChrZXkpO1xyXG4gIGF3YWl0IGt2U1JlbShpbmRleEtleSwgaWQpO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJrdkdldCIsImt2U2V0Iiwia3ZEZWwiLCJrdlNBZGQiLCJrdlNSZW0iLCJrdlNNZW1iZXJzIiwiYnVpbGREYXRhS2V5IiwiYnVpbGRJbmRleEtleSIsIkVOVElUWSIsImdldEFsbFBsYXllcnMiLCJpbmRleEtleSIsImlkcyIsImxlbmd0aCIsInBsYXllcnMiLCJpZCIsImtleSIsInBsYXllciIsInB1c2giLCJnZXRQbGF5ZXJCeUlkIiwidXBzZXJ0UGxheWVyIiwiZGVsZXRlUGxheWVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data-store/repositories/player.repo.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./data-store/repositories/sale.repo.ts":
/*!**********************************************!*\
  !*** ./data-store/repositories/sale.repo.ts ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteSale: function() { return /* binding */ deleteSale; },\n/* harmony export */   getAllSales: function() { return /* binding */ getAllSales; },\n/* harmony export */   getSaleById: function() { return /* binding */ getSaleById; },\n/* harmony export */   upsertSale: function() { return /* binding */ upsertSale; }\n/* harmony export */ });\n/* harmony import */ var _kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../kv */ \"(app-pages-browser)/./data-store/kv.ts\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../keys */ \"(app-pages-browser)/./data-store/keys.ts\");\n// data-store/repositories/sale.repo.ts\n\n\nconst ENTITY = \"sales\";\nasync function getAllSales() {\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    const ids = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)(indexKey);\n    if (ids.length === 0) return [];\n    const sales = [];\n    for (const id of ids){\n        const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n        const sale = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n        if (sale) sales.push(sale);\n    }\n    return sales;\n}\nasync function getSaleById(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    return await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n}\nasync function upsertSale(sale) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, sale.id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, sale);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)(indexKey, sale.id);\n    return sale;\n}\nasync function deleteSale(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)(key);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)(indexKey, id);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2RhdGEtc3RvcmUvcmVwb3NpdG9yaWVzL3NhbGUucmVwby50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSx1Q0FBdUM7QUFDaUM7QUFDbEI7QUFHdEQsTUFBTVEsU0FBUztBQUVSLGVBQWVDO0lBQ3BCLE1BQU1DLFdBQVdILG9EQUFhQSxDQUFDQztJQUMvQixNQUFNRyxNQUFNLE1BQU1OLCtDQUFVQSxDQUFDSztJQUM3QixJQUFJQyxJQUFJQyxNQUFNLEtBQUssR0FBRyxPQUFPLEVBQUU7SUFFL0IsTUFBTUMsUUFBZ0IsRUFBRTtJQUN4QixLQUFLLE1BQU1DLE1BQU1ILElBQUs7UUFDcEIsTUFBTUksTUFBTVQsbURBQVlBLENBQUNFLFFBQVFNO1FBQ2pDLE1BQU1FLE9BQU8sTUFBTWhCLDBDQUFLQSxDQUFPZTtRQUMvQixJQUFJQyxNQUFNSCxNQUFNSSxJQUFJLENBQUNEO0lBQ3ZCO0lBRUEsT0FBT0g7QUFDVDtBQUVPLGVBQWVLLFlBQVlKLEVBQVU7SUFDMUMsTUFBTUMsTUFBTVQsbURBQVlBLENBQUNFLFFBQVFNO0lBQ2pDLE9BQU8sTUFBTWQsMENBQUtBLENBQU9lO0FBQzNCO0FBRU8sZUFBZUksV0FBV0gsSUFBVTtJQUN6QyxNQUFNRCxNQUFNVCxtREFBWUEsQ0FBQ0UsUUFBUVEsS0FBS0YsRUFBRTtJQUN4QyxNQUFNSixXQUFXSCxvREFBYUEsQ0FBQ0M7SUFFL0IsTUFBTVAsMENBQUtBLENBQUNjLEtBQUtDO0lBQ2pCLE1BQU1iLDJDQUFNQSxDQUFDTyxVQUFVTSxLQUFLRixFQUFFO0lBRTlCLE9BQU9FO0FBQ1Q7QUFFTyxlQUFlSSxXQUFXTixFQUFVO0lBQ3pDLE1BQU1DLE1BQU1ULG1EQUFZQSxDQUFDRSxRQUFRTTtJQUNqQyxNQUFNSixXQUFXSCxvREFBYUEsQ0FBQ0M7SUFFL0IsTUFBTU4sMENBQUtBLENBQUNhO0lBQ1osTUFBTVgsMkNBQU1BLENBQUNNLFVBQVVJO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2RhdGEtc3RvcmUvcmVwb3NpdG9yaWVzL3NhbGUucmVwby50cz80OTNhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGRhdGEtc3RvcmUvcmVwb3NpdG9yaWVzL3NhbGUucmVwby50c1xyXG5pbXBvcnQgeyBrdkdldCwga3ZTZXQsIGt2RGVsLCBrdlNBZGQsIGt2U1JlbSwga3ZTTWVtYmVycyB9IGZyb20gJy4uL2t2JztcclxuaW1wb3J0IHsgYnVpbGREYXRhS2V5LCBidWlsZEluZGV4S2V5IH0gZnJvbSAnLi4va2V5cyc7XHJcbmltcG9ydCB0eXBlIHsgU2FsZSB9IGZyb20gJ0AvdHlwZXMvZW50aXRpZXMnO1xyXG5cclxuY29uc3QgRU5USVRZID0gJ3NhbGVzJztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBbGxTYWxlcygpOiBQcm9taXNlPFNhbGVbXT4ge1xyXG4gIGNvbnN0IGluZGV4S2V5ID0gYnVpbGRJbmRleEtleShFTlRJVFkpO1xyXG4gIGNvbnN0IGlkcyA9IGF3YWl0IGt2U01lbWJlcnMoaW5kZXhLZXkpO1xyXG4gIGlmIChpZHMubGVuZ3RoID09PSAwKSByZXR1cm4gW107XHJcbiAgXHJcbiAgY29uc3Qgc2FsZXM6IFNhbGVbXSA9IFtdO1xyXG4gIGZvciAoY29uc3QgaWQgb2YgaWRzKSB7XHJcbiAgICBjb25zdCBrZXkgPSBidWlsZERhdGFLZXkoRU5USVRZLCBpZCk7XHJcbiAgICBjb25zdCBzYWxlID0gYXdhaXQga3ZHZXQ8U2FsZT4oa2V5KTtcclxuICAgIGlmIChzYWxlKSBzYWxlcy5wdXNoKHNhbGUpO1xyXG4gIH1cclxuICBcclxuICByZXR1cm4gc2FsZXM7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTYWxlQnlJZChpZDogc3RyaW5nKTogUHJvbWlzZTxTYWxlIHwgbnVsbD4ge1xyXG4gIGNvbnN0IGtleSA9IGJ1aWxkRGF0YUtleShFTlRJVFksIGlkKTtcclxuICByZXR1cm4gYXdhaXQga3ZHZXQ8U2FsZT4oa2V5KTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwc2VydFNhbGUoc2FsZTogU2FsZSk6IFByb21pc2U8U2FsZT4ge1xyXG4gIGNvbnN0IGtleSA9IGJ1aWxkRGF0YUtleShFTlRJVFksIHNhbGUuaWQpO1xyXG4gIGNvbnN0IGluZGV4S2V5ID0gYnVpbGRJbmRleEtleShFTlRJVFkpO1xyXG4gIFxyXG4gIGF3YWl0IGt2U2V0KGtleSwgc2FsZSk7XHJcbiAgYXdhaXQga3ZTQWRkKGluZGV4S2V5LCBzYWxlLmlkKTtcclxuICBcclxuICByZXR1cm4gc2FsZTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRlbGV0ZVNhbGUoaWQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xyXG4gIGNvbnN0IGtleSA9IGJ1aWxkRGF0YUtleShFTlRJVFksIGlkKTtcclxuICBjb25zdCBpbmRleEtleSA9IGJ1aWxkSW5kZXhLZXkoRU5USVRZKTtcclxuICBcclxuICBhd2FpdCBrdkRlbChrZXkpO1xyXG4gIGF3YWl0IGt2U1JlbShpbmRleEtleSwgaWQpO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJrdkdldCIsImt2U2V0Iiwia3ZEZWwiLCJrdlNBZGQiLCJrdlNSZW0iLCJrdlNNZW1iZXJzIiwiYnVpbGREYXRhS2V5IiwiYnVpbGRJbmRleEtleSIsIkVOVElUWSIsImdldEFsbFNhbGVzIiwiaW5kZXhLZXkiLCJpZHMiLCJsZW5ndGgiLCJzYWxlcyIsImlkIiwia2V5Iiwic2FsZSIsInB1c2giLCJnZXRTYWxlQnlJZCIsInVwc2VydFNhbGUiLCJkZWxldGVTYWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data-store/repositories/sale.repo.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./data-store/repositories/site.repo.ts":
/*!**********************************************!*\
  !*** ./data-store/repositories/site.repo.ts ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteSite: function() { return /* binding */ deleteSite; },\n/* harmony export */   getAllSettlements: function() { return /* binding */ getAllSettlements; },\n/* harmony export */   getAllSites: function() { return /* binding */ getAllSites; },\n/* harmony export */   getSettlementById: function() { return /* binding */ getSettlementById; },\n/* harmony export */   getSiteById: function() { return /* binding */ getSiteById; },\n/* harmony export */   getSitesByRadius: function() { return /* binding */ getSitesByRadius; },\n/* harmony export */   getSitesBySettlement: function() { return /* binding */ getSitesBySettlement; },\n/* harmony export */   removeSettlement: function() { return /* binding */ removeSettlement; },\n/* harmony export */   upsertSettlement: function() { return /* binding */ upsertSettlement; },\n/* harmony export */   upsertSite: function() { return /* binding */ upsertSite; }\n/* harmony export */ });\n/* harmony import */ var _kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../kv */ \"(app-pages-browser)/./data-store/kv.ts\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../keys */ \"(app-pages-browser)/./data-store/keys.ts\");\n// data-store/repositories/site.repo.ts\n\n\nconst ENTITY = \"sites\";\nconst SETTLEMENTS_ENTITY = \"settlements\";\nasync function getAllSites() {\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    const ids = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)(indexKey);\n    if (ids.length === 0) return [];\n    const keys = ids.map((id)=>(0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id));\n    const sites = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvMGet)(keys);\n    return sites.filter((site)=>site !== null);\n}\nasync function getSiteById(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    return await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n}\nasync function upsertSite(site) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, site.id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, site);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)(indexKey, site.id);\n    return site;\n}\nasync function deleteSite(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)(key);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)(indexKey, id);\n}\n// ============================================================================\n// SETTLEMENT METHODS (Reference data for Sites)\n// ============================================================================\nasync function getAllSettlements() {\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(SETTLEMENTS_ENTITY);\n    const ids = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)(indexKey);\n    if (ids.length === 0) return [];\n    const keys = ids.map((id)=>(0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(SETTLEMENTS_ENTITY, id));\n    const settlements = await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvMGet)(keys);\n    return settlements.filter((settlement)=>settlement !== null);\n}\nasync function getSettlementById(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(SETTLEMENTS_ENTITY, id);\n    return await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n}\nasync function upsertSettlement(settlement) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(SETTLEMENTS_ENTITY, settlement.id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(SETTLEMENTS_ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, settlement);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)(indexKey, settlement.id);\n    return settlement;\n}\nasync function removeSettlement(id) {\n    const key = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(SETTLEMENTS_ENTITY, id);\n    const indexKey = (0,_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(SETTLEMENTS_ENTITY);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)(key);\n    await (0,_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)(indexKey, id);\n}\n// ============================================================================\n// SITE QUERY METHODS\n// ============================================================================\nasync function getSitesBySettlement(settlementId) {\n    const allSites = await getAllSites();\n    return allSites.filter((site)=>{\n        if (site.metadata.type !== \"PHYSICAL\") return false;\n        const physicalMeta = site.metadata;\n        return physicalMeta.settlementId === settlementId;\n    });\n}\nasync function getSitesByRadius(centerLat, centerLng, radiusMeters) {\n    const allSites = await getAllSites();\n    const settlementsMap = new Map();\n    // Load all settlements with coordinates\n    const settlements = await getAllSettlements();\n    settlements.forEach((s)=>{\n        if (s.coordinates) settlementsMap.set(s.id, s);\n    });\n    return allSites.filter((site)=>{\n        if (site.metadata.type !== \"PHYSICAL\") return false;\n        const physicalMeta = site.metadata;\n        const settlement = settlementsMap.get(physicalMeta.settlementId);\n        if (!(settlement === null || settlement === void 0 ? void 0 : settlement.coordinates)) return false;\n        // Haversine formula for distance calculation\n        const R = 6371000; // Earth radius in meters\n        const φ1 = centerLat * Math.PI / 180;\n        const φ2 = settlement.coordinates.lat * Math.PI / 180;\n        const Δφ = (settlement.coordinates.lat - centerLat) * Math.PI / 180;\n        const Δλ = (settlement.coordinates.lng - centerLng) * Math.PI / 180;\n        const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        const distance = R * c;\n        return distance <= radiusMeters;\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data-store/repositories/site.repo.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./data-store/repositories/task.repo.ts":
/*!**********************************************!*\
  !*** ./data-store/repositories/task.repo.ts ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteTask: function() { return /* binding */ deleteTask; },\n/* harmony export */   getAllTasks: function() { return /* binding */ getAllTasks; },\n/* harmony export */   getTaskById: function() { return /* binding */ getTaskById; },\n/* harmony export */   upsertTask: function() { return /* binding */ upsertTask; }\n/* harmony export */ });\n/* harmony import */ var _data_store_kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/data-store/kv */ \"(app-pages-browser)/./data-store/kv.ts\");\n/* harmony import */ var _data_store_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/keys */ \"(app-pages-browser)/./data-store/keys.ts\");\n// data-store/repositories/task.repo.ts\n\n\nconst ENTITY = \"task\";\nasync function getTaskById(id) {\n    return await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id));\n}\nasync function getAllTasks() {\n    const ids = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY));\n    const rows = await Promise.all(ids.map((id)=>(0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id))));\n    return rows.filter(Boolean);\n}\nasync function upsertTask(task) {\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, task.id), task);\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildIndexKey)(ENTITY), task.id);\n    return task;\n}\nasync function deleteTask(id) {\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildDataKey)(ENTITY, id));\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2RhdGEtc3RvcmUvcmVwb3NpdG9yaWVzL3Rhc2sucmVwby50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSx1Q0FBdUM7QUFFbUM7QUFDVjtBQUVoRSxNQUFNTyxTQUFTO0FBRVIsZUFBZUMsWUFBWUMsRUFBVTtJQUMxQyxPQUFPLE1BQU1ULHFEQUFLQSxDQUFPSyw4REFBWUEsQ0FBQ0UsUUFBUUU7QUFDaEQ7QUFFTyxlQUFlQztJQUNwQixNQUFNQyxNQUFNLE1BQU1SLDBEQUFVQSxDQUFDRywrREFBYUEsQ0FBQ0M7SUFDM0MsTUFBTUssT0FBTyxNQUFNQyxRQUFRQyxHQUFHLENBQUNILElBQUlJLEdBQUcsQ0FBQ04sQ0FBQUEsS0FBTVQscURBQUtBLENBQU9LLDhEQUFZQSxDQUFDRSxRQUFRRTtJQUM5RSxPQUFPRyxLQUFLSSxNQUFNLENBQUNDO0FBQ3JCO0FBRU8sZUFBZUMsV0FBV0MsSUFBVTtJQUN6QyxNQUFNbEIscURBQUtBLENBQUNJLDhEQUFZQSxDQUFDRSxRQUFRWSxLQUFLVixFQUFFLEdBQUdVO0lBQzNDLE1BQU1mLHNEQUFNQSxDQUFDRSwrREFBYUEsQ0FBQ0MsU0FBU1ksS0FBS1YsRUFBRTtJQUMzQyxPQUFPVTtBQUNUO0FBRU8sZUFBZUMsV0FBV1gsRUFBVTtJQUN6QyxNQUFNUCxxREFBS0EsQ0FBQ0csOERBQVlBLENBQUNFLFFBQVFFO0FBQ25DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2RhdGEtc3RvcmUvcmVwb3NpdG9yaWVzL3Rhc2sucmVwby50cz82MmZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGRhdGEtc3RvcmUvcmVwb3NpdG9yaWVzL3Rhc2sucmVwby50c1xyXG5pbXBvcnQgdHlwZSB7IFRhc2sgfSBmcm9tICdAL3R5cGVzL2VudGl0aWVzJztcclxuaW1wb3J0IHsga3ZHZXQsIGt2U2V0LCBrdkRlbCwga3ZTTWVtYmVycywga3ZTQWRkIH0gZnJvbSAnQC9kYXRhLXN0b3JlL2t2JztcclxuaW1wb3J0IHsgYnVpbGREYXRhS2V5LCBidWlsZEluZGV4S2V5IH0gZnJvbSAnQC9kYXRhLXN0b3JlL2tleXMnO1xyXG5cclxuY29uc3QgRU5USVRZID0gJ3Rhc2snO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFRhc2tCeUlkKGlkOiBzdHJpbmcpOiBQcm9taXNlPFRhc2sgfCBudWxsPiB7XHJcbiAgcmV0dXJuIGF3YWl0IGt2R2V0PFRhc2s+KGJ1aWxkRGF0YUtleShFTlRJVFksIGlkKSk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBbGxUYXNrcygpOiBQcm9taXNlPFRhc2tbXT4ge1xyXG4gIGNvbnN0IGlkcyA9IGF3YWl0IGt2U01lbWJlcnMoYnVpbGRJbmRleEtleShFTlRJVFkpKTtcclxuICBjb25zdCByb3dzID0gYXdhaXQgUHJvbWlzZS5hbGwoaWRzLm1hcChpZCA9PiBrdkdldDxUYXNrPihidWlsZERhdGFLZXkoRU5USVRZLCBpZCkpKSk7XHJcbiAgcmV0dXJuIHJvd3MuZmlsdGVyKEJvb2xlYW4pIGFzIFRhc2tbXTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwc2VydFRhc2sodGFzazogVGFzayk6IFByb21pc2U8VGFzaz4ge1xyXG4gIGF3YWl0IGt2U2V0KGJ1aWxkRGF0YUtleShFTlRJVFksIHRhc2suaWQpLCB0YXNrKTtcclxuICBhd2FpdCBrdlNBZGQoYnVpbGRJbmRleEtleShFTlRJVFkpLCB0YXNrLmlkKTtcclxuICByZXR1cm4gdGFzaztcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRlbGV0ZVRhc2soaWQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xyXG4gIGF3YWl0IGt2RGVsKGJ1aWxkRGF0YUtleShFTlRJVFksIGlkKSk7XHJcbn1cclxuXHJcblxyXG4iXSwibmFtZXMiOlsia3ZHZXQiLCJrdlNldCIsImt2RGVsIiwia3ZTTWVtYmVycyIsImt2U0FkZCIsImJ1aWxkRGF0YUtleSIsImJ1aWxkSW5kZXhLZXkiLCJFTlRJVFkiLCJnZXRUYXNrQnlJZCIsImlkIiwiZ2V0QWxsVGFza3MiLCJpZHMiLCJyb3dzIiwiUHJvbWlzZSIsImFsbCIsIm1hcCIsImZpbHRlciIsIkJvb2xlYW4iLCJ1cHNlcnRUYXNrIiwidGFzayIsImRlbGV0ZVRhc2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data-store/repositories/task.repo.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./links/link-registry.ts":
/*!********************************!*\
  !*** ./links/link-registry.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createLink: function() { return /* binding */ createLink; },\n/* harmony export */   getAllLinks: function() { return /* binding */ getAllLinks; },\n/* harmony export */   getLinksFor: function() { return /* binding */ getLinksFor; },\n/* harmony export */   removeLink: function() { return /* binding */ removeLink; }\n/* harmony export */ });\n/* harmony import */ var _data_store_kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/data-store/kv */ \"(app-pages-browser)/./data-store/kv.ts\");\n/* harmony import */ var _data_store_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/keys */ \"(app-pages-browser)/./data-store/keys.ts\");\n/* harmony import */ var _link_validation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./link-validation */ \"(app-pages-browser)/./links/link-validation.ts\");\n// links/link-registry.ts\n// The Rosetta Stone storage and query layer (KV only)\n\n\n\nasync function createLink(link) {\n    // NEW: Validate before creating\n    const validation = await (0,_link_validation__WEBPACK_IMPORTED_MODULE_2__.validateLink)(link.linkType, link.source, link.target, link.metadata);\n    if (!validation.isValid) {\n        console.warn(\"[createLink] Validation failed: \".concat(validation.reason));\n        if (validation.warnings) {\n            console.warn(\"[createLink] Validation warnings:\", validation.warnings);\n        }\n        return; // Skip creating invalid links\n    }\n    // Log warnings if any\n    if (validation.warnings && validation.warnings.length > 0) {\n        console.warn(\"[createLink] Validation warnings for \".concat(link.linkType, \":\"), validation.warnings);\n    }\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLinkKey)(link.id), link);\n    // index by source and target for bidirectional queries\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLinksIndexKey)(link.source.type, link.source.id), link.id);\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSAdd)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLinksIndexKey)(link.target.type, link.target.id), link.id);\n}\nasync function getLinksFor(entity) {\n    const ids = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSMembers)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLinksIndexKey)(entity.type, entity.id));\n    if (!ids.length) return [];\n    const keys = ids.map(_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLinkKey);\n    const rows = await Promise.all(keys.map((k)=>(0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(k)));\n    return rows.filter(Boolean);\n}\nasync function removeLink(linkId) {\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLinkKey)(linkId);\n    const existing = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key);\n    if (existing) {\n        // Remove from both source and target indexes\n        await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLinksIndexKey)(existing.source.type, existing.source.id), linkId);\n        await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSRem)((0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLinksIndexKey)(existing.target.type, existing.target.id), linkId);\n    }\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvDel)(key);\n}\nasync function getAllLinks() {\n    const keys = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvScan)(\"links:link:\");\n    if (!keys.length) return [];\n    const links = await Promise.all(keys.map((k)=>(0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(k)));\n    return links.filter(Boolean);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpbmtzL2xpbmstcmVnaXN0cnkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLHlCQUF5QjtBQUN6QixzREFBc0Q7QUFJb0M7QUFDckI7QUFDcEI7QUFFMUMsZUFBZVUsV0FBV0MsSUFBVTtJQUN6QyxnQ0FBZ0M7SUFDaEMsTUFBTUMsYUFBYSxNQUFNSCw4REFBWUEsQ0FBQ0UsS0FBS0UsUUFBUSxFQUFFRixLQUFLRyxNQUFNLEVBQUVILEtBQUtJLE1BQU0sRUFBRUosS0FBS0ssUUFBUTtJQUM1RixJQUFJLENBQUNKLFdBQVdLLE9BQU8sRUFBRTtRQUN2QkMsUUFBUUMsSUFBSSxDQUFDLG1DQUFxRCxPQUFsQlAsV0FBV1EsTUFBTTtRQUNqRSxJQUFJUixXQUFXUyxRQUFRLEVBQUU7WUFDdkJILFFBQVFDLElBQUksQ0FBRSxxQ0FBb0NQLFdBQVdTLFFBQVE7UUFDdkU7UUFDQSxRQUFRLDhCQUE4QjtJQUN4QztJQUVBLHNCQUFzQjtJQUN0QixJQUFJVCxXQUFXUyxRQUFRLElBQUlULFdBQVdTLFFBQVEsQ0FBQ0MsTUFBTSxHQUFHLEdBQUc7UUFDekRKLFFBQVFDLElBQUksQ0FBQyx3Q0FBc0QsT0FBZFIsS0FBS0UsUUFBUSxFQUFDLE1BQUlELFdBQVdTLFFBQVE7SUFDNUY7SUFFQSxNQUFNcEIscURBQUtBLENBQUNNLDhEQUFZQSxDQUFDSSxLQUFLWSxFQUFFLEdBQUdaO0lBQ25DLHVEQUF1RDtJQUN2RCxNQUFNUixzREFBTUEsQ0FBQ0ssb0VBQWtCQSxDQUFDRyxLQUFLRyxNQUFNLENBQUNVLElBQUksRUFBRWIsS0FBS0csTUFBTSxDQUFDUyxFQUFFLEdBQUdaLEtBQUtZLEVBQUU7SUFDMUUsTUFBTXBCLHNEQUFNQSxDQUFDSyxvRUFBa0JBLENBQUNHLEtBQUtJLE1BQU0sQ0FBQ1MsSUFBSSxFQUFFYixLQUFLSSxNQUFNLENBQUNRLEVBQUUsR0FBR1osS0FBS1ksRUFBRTtBQUM1RTtBQUVPLGVBQWVFLFlBQVlDLE1BQXdDO0lBQ3hFLE1BQU1DLE1BQU0sTUFBTXRCLDBEQUFVQSxDQUFDRyxvRUFBa0JBLENBQUNrQixPQUFPRixJQUFJLEVBQUVFLE9BQU9ILEVBQUU7SUFDdEUsSUFBSSxDQUFDSSxJQUFJTCxNQUFNLEVBQUUsT0FBTyxFQUFFO0lBQzFCLE1BQU1NLE9BQU9ELElBQUlFLEdBQUcsQ0FBQ3RCLDBEQUFZQTtJQUNqQyxNQUFNdUIsT0FBTyxNQUFNQyxRQUFRQyxHQUFHLENBQUNKLEtBQUtDLEdBQUcsQ0FBQ0ksQ0FBQUEsSUFBS2pDLHFEQUFLQSxDQUFPaUM7SUFDekQsT0FBT0gsS0FBS0ksTUFBTSxDQUFDQztBQUNyQjtBQUVPLGVBQWVDLFdBQVdDLE1BQWM7SUFDN0MsTUFBTUMsTUFBTS9CLDhEQUFZQSxDQUFDOEI7SUFDekIsTUFBTUUsV0FBVyxNQUFNdkMscURBQUtBLENBQU9zQztJQUNuQyxJQUFJQyxVQUFVO1FBQ1osNkNBQTZDO1FBQzdDLE1BQU1uQyxzREFBTUEsQ0FBQ0ksb0VBQWtCQSxDQUFDK0IsU0FBU3pCLE1BQU0sQ0FBQ1UsSUFBSSxFQUFFZSxTQUFTekIsTUFBTSxDQUFDUyxFQUFFLEdBQUdjO1FBQzNFLE1BQU1qQyxzREFBTUEsQ0FBQ0ksb0VBQWtCQSxDQUFDK0IsU0FBU3hCLE1BQU0sQ0FBQ1MsSUFBSSxFQUFFZSxTQUFTeEIsTUFBTSxDQUFDUSxFQUFFLEdBQUdjO0lBQzdFO0lBQ0EsTUFBTW5DLHFEQUFLQSxDQUFDb0M7QUFDZDtBQUVPLGVBQWVFO0lBQ3BCLE1BQU1aLE9BQU8sTUFBTXRCLHNEQUFNQSxDQUFDO0lBQzFCLElBQUksQ0FBQ3NCLEtBQUtOLE1BQU0sRUFBRSxPQUFPLEVBQUU7SUFDM0IsTUFBTW1CLFFBQVEsTUFBTVYsUUFBUUMsR0FBRyxDQUFDSixLQUFLQyxHQUFHLENBQUMsQ0FBQ0ksSUFBY2pDLHFEQUFLQSxDQUFPaUM7SUFDcEUsT0FBT1EsTUFBTVAsTUFBTSxDQUFDQztBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saW5rcy9saW5rLXJlZ2lzdHJ5LnRzP2VhMDciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbGlua3MvbGluay1yZWdpc3RyeS50c1xyXG4vLyBUaGUgUm9zZXR0YSBTdG9uZSBzdG9yYWdlIGFuZCBxdWVyeSBsYXllciAoS1Ygb25seSlcclxuXHJcbmltcG9ydCB7IExpbmtUeXBlLCBFbnRpdHlUeXBlIH0gZnJvbSAnQC90eXBlcy9lbnVtcyc7XHJcbmltcG9ydCB0eXBlIHsgTGluayB9IGZyb20gJ0AvdHlwZXMvZW50aXRpZXMnO1xyXG5pbXBvcnQgeyBrdkdldCwga3ZTZXQsIGt2RGVsLCBrdlNBZGQsIGt2U1JlbSwga3ZTTWVtYmVycywga3ZTY2FuIH0gZnJvbSAnQC9kYXRhLXN0b3JlL2t2JztcclxuaW1wb3J0IHsgYnVpbGRMaW5rS2V5LCBidWlsZExpbmtzSW5kZXhLZXkgfSBmcm9tICdAL2RhdGEtc3RvcmUva2V5cyc7XHJcbmltcG9ydCB7IHZhbGlkYXRlTGluayB9IGZyb20gJy4vbGluay12YWxpZGF0aW9uJztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVMaW5rKGxpbms6IExpbmspOiBQcm9taXNlPHZvaWQ+IHtcclxuICAvLyBORVc6IFZhbGlkYXRlIGJlZm9yZSBjcmVhdGluZ1xyXG4gIGNvbnN0IHZhbGlkYXRpb24gPSBhd2FpdCB2YWxpZGF0ZUxpbmsobGluay5saW5rVHlwZSwgbGluay5zb3VyY2UsIGxpbmsudGFyZ2V0LCBsaW5rLm1ldGFkYXRhKTtcclxuICBpZiAoIXZhbGlkYXRpb24uaXNWYWxpZCkge1xyXG4gICAgY29uc29sZS53YXJuKGBbY3JlYXRlTGlua10gVmFsaWRhdGlvbiBmYWlsZWQ6ICR7dmFsaWRhdGlvbi5yZWFzb259YCk7XHJcbiAgICBpZiAodmFsaWRhdGlvbi53YXJuaW5ncykge1xyXG4gICAgICBjb25zb2xlLndhcm4oYFtjcmVhdGVMaW5rXSBWYWxpZGF0aW9uIHdhcm5pbmdzOmAsIHZhbGlkYXRpb24ud2FybmluZ3MpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuOyAvLyBTa2lwIGNyZWF0aW5nIGludmFsaWQgbGlua3NcclxuICB9XHJcbiAgXHJcbiAgLy8gTG9nIHdhcm5pbmdzIGlmIGFueVxyXG4gIGlmICh2YWxpZGF0aW9uLndhcm5pbmdzICYmIHZhbGlkYXRpb24ud2FybmluZ3MubGVuZ3RoID4gMCkge1xyXG4gICAgY29uc29sZS53YXJuKGBbY3JlYXRlTGlua10gVmFsaWRhdGlvbiB3YXJuaW5ncyBmb3IgJHtsaW5rLmxpbmtUeXBlfTpgLCB2YWxpZGF0aW9uLndhcm5pbmdzKTtcclxuICB9XHJcbiAgXHJcbiAgYXdhaXQga3ZTZXQoYnVpbGRMaW5rS2V5KGxpbmsuaWQpLCBsaW5rKTtcclxuICAvLyBpbmRleCBieSBzb3VyY2UgYW5kIHRhcmdldCBmb3IgYmlkaXJlY3Rpb25hbCBxdWVyaWVzXHJcbiAgYXdhaXQga3ZTQWRkKGJ1aWxkTGlua3NJbmRleEtleShsaW5rLnNvdXJjZS50eXBlLCBsaW5rLnNvdXJjZS5pZCksIGxpbmsuaWQpO1xyXG4gIGF3YWl0IGt2U0FkZChidWlsZExpbmtzSW5kZXhLZXkobGluay50YXJnZXQudHlwZSwgbGluay50YXJnZXQuaWQpLCBsaW5rLmlkKTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldExpbmtzRm9yKGVudGl0eTogeyB0eXBlOiBFbnRpdHlUeXBlOyBpZDogc3RyaW5nIH0pOiBQcm9taXNlPExpbmtbXT4ge1xyXG4gIGNvbnN0IGlkcyA9IGF3YWl0IGt2U01lbWJlcnMoYnVpbGRMaW5rc0luZGV4S2V5KGVudGl0eS50eXBlLCBlbnRpdHkuaWQpKTtcclxuICBpZiAoIWlkcy5sZW5ndGgpIHJldHVybiBbXTtcclxuICBjb25zdCBrZXlzID0gaWRzLm1hcChidWlsZExpbmtLZXkpO1xyXG4gIGNvbnN0IHJvd3MgPSBhd2FpdCBQcm9taXNlLmFsbChrZXlzLm1hcChrID0+IGt2R2V0PExpbms+KGspKSk7XHJcbiAgcmV0dXJuIHJvd3MuZmlsdGVyKEJvb2xlYW4pIGFzIExpbmtbXTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlbW92ZUxpbmsobGlua0lkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcclxuICBjb25zdCBrZXkgPSBidWlsZExpbmtLZXkobGlua0lkKTtcclxuICBjb25zdCBleGlzdGluZyA9IGF3YWl0IGt2R2V0PExpbms+KGtleSk7XHJcbiAgaWYgKGV4aXN0aW5nKSB7XHJcbiAgICAvLyBSZW1vdmUgZnJvbSBib3RoIHNvdXJjZSBhbmQgdGFyZ2V0IGluZGV4ZXNcclxuICAgIGF3YWl0IGt2U1JlbShidWlsZExpbmtzSW5kZXhLZXkoZXhpc3Rpbmcuc291cmNlLnR5cGUsIGV4aXN0aW5nLnNvdXJjZS5pZCksIGxpbmtJZCk7XHJcbiAgICBhd2FpdCBrdlNSZW0oYnVpbGRMaW5rc0luZGV4S2V5KGV4aXN0aW5nLnRhcmdldC50eXBlLCBleGlzdGluZy50YXJnZXQuaWQpLCBsaW5rSWQpO1xyXG4gIH1cclxuICBhd2FpdCBrdkRlbChrZXkpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsTGlua3MoKTogUHJvbWlzZTxMaW5rW10+IHtcclxuICBjb25zdCBrZXlzID0gYXdhaXQga3ZTY2FuKCdsaW5rczpsaW5rOicpO1xyXG4gIGlmICgha2V5cy5sZW5ndGgpIHJldHVybiBbXTtcclxuICBjb25zdCBsaW5rcyA9IGF3YWl0IFByb21pc2UuYWxsKGtleXMubWFwKChrOiBzdHJpbmcpID0+IGt2R2V0PExpbms+KGspKSk7XHJcbiAgcmV0dXJuIGxpbmtzLmZpbHRlcihCb29sZWFuKSBhcyBMaW5rW107XHJcbn1cclxuXHJcblxyXG4iXSwibmFtZXMiOlsia3ZHZXQiLCJrdlNldCIsImt2RGVsIiwia3ZTQWRkIiwia3ZTUmVtIiwia3ZTTWVtYmVycyIsImt2U2NhbiIsImJ1aWxkTGlua0tleSIsImJ1aWxkTGlua3NJbmRleEtleSIsInZhbGlkYXRlTGluayIsImNyZWF0ZUxpbmsiLCJsaW5rIiwidmFsaWRhdGlvbiIsImxpbmtUeXBlIiwic291cmNlIiwidGFyZ2V0IiwibWV0YWRhdGEiLCJpc1ZhbGlkIiwiY29uc29sZSIsIndhcm4iLCJyZWFzb24iLCJ3YXJuaW5ncyIsImxlbmd0aCIsImlkIiwidHlwZSIsImdldExpbmtzRm9yIiwiZW50aXR5IiwiaWRzIiwia2V5cyIsIm1hcCIsInJvd3MiLCJQcm9taXNlIiwiYWxsIiwiayIsImZpbHRlciIsIkJvb2xlYW4iLCJyZW1vdmVMaW5rIiwibGlua0lkIiwia2V5IiwiZXhpc3RpbmciLCJnZXRBbGxMaW5rcyIsImxpbmtzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./links/link-registry.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./links/link-validation.ts":
/*!**********************************!*\
  !*** ./links/link-validation.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateBusinessRules: function() { return /* binding */ validateBusinessRules; },\n/* harmony export */   validateEntityExists: function() { return /* binding */ validateEntityExists; },\n/* harmony export */   validateLink: function() { return /* binding */ validateLink; },\n/* harmony export */   validateLinkTypeCompatibility: function() { return /* binding */ validateLinkTypeCompatibility; }\n/* harmony export */ });\n/* harmony import */ var _types_enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/enums */ \"(app-pages-browser)/./types/enums.ts\");\n/* harmony import */ var _data_store_datastore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/datastore */ \"(app-pages-browser)/./data-store/datastore.ts\");\n// links/link-validation.ts\n// Link Validation System for The Rosetta Stone\n// Migrated from lib/game-mechanics/workflow-integration.ts\n\n\n/**\r\n * Main link validation orchestrator\r\n * Validates link type compatibility, entity existence, and business rules\r\n */ async function validateLink(linkType, source, target, metadata) {\n    const warnings = [];\n    try {\n        // 1. Basic validation\n        if (!linkType || !(source === null || source === void 0 ? void 0 : source.type) || !(source === null || source === void 0 ? void 0 : source.id) || !(target === null || target === void 0 ? void 0 : target.type) || !(target === null || target === void 0 ? void 0 : target.id)) {\n            return {\n                isValid: false,\n                reason: \"Missing required fields: linkType, source.type, source.id, target.type, target.id\"\n            };\n        }\n        // 2. Self-reference validation\n        if (source.type === target.type && source.id === target.id) {\n            return {\n                isValid: false,\n                reason: \"Self-referencing links are not allowed\"\n            };\n        }\n        // 3. Link type compatibility validation\n        const compatibilityResult = validateLinkTypeCompatibility(linkType, source.type, target.type);\n        if (!compatibilityResult.isValid) {\n            return {\n                isValid: false,\n                reason: \"Incompatible link type: \".concat(linkType, \" cannot connect \").concat(source.type, \" to \").concat(target.type, \". \").concat(compatibilityResult.reason)\n            };\n        }\n        // 4. Entity existence validation\n        const sourceExists = await validateEntityExists(source.type, source.id);\n        if (!sourceExists) {\n            return {\n                isValid: false,\n                reason: \"Source entity does not exist: \".concat(source.type, \":\").concat(source.id)\n            };\n        }\n        const targetExists = await validateEntityExists(target.type, target.id);\n        if (!targetExists) {\n            return {\n                isValid: false,\n                reason: \"Target entity does not exist: \".concat(target.type, \":\").concat(target.id)\n            };\n        }\n        // 5. Business rules validation\n        const businessRulesResult = await validateBusinessRules(linkType, source, target, metadata);\n        if (!businessRulesResult.isValid) {\n            return {\n                isValid: false,\n                reason: businessRulesResult.reason\n            };\n        }\n        // Add any warnings from business rules\n        if (businessRulesResult.warnings) {\n            warnings.push(...businessRulesResult.warnings);\n        }\n        return {\n            isValid: true,\n            warnings: warnings.length > 0 ? warnings : undefined\n        };\n    } catch (error) {\n        return {\n            isValid: false,\n            reason: \"Validation error: \".concat(error instanceof Error ? error.message : \"Unknown error\")\n        };\n    }\n}\n/**\r\n * Validate link type compatibility with source and target entity types\r\n * Complete mapping of all 39 link types\r\n */ function validateLinkTypeCompatibility(linkType, sourceType, targetType) {\n    // Define valid link type combinations for all 39 link types\n    const validCombinations = {\n        // TASK relationships (6)\n        \"TASK_ITEM\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ]\n        },\n        \"TASK_FINREC\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ]\n        },\n        \"TASK_SALE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ]\n        },\n        \"TASK_PLAYER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ]\n        },\n        \"TASK_CHARACTER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ]\n        },\n        \"TASK_SITE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ]\n        },\n        // ITEM relationships (6)\n        \"ITEM_TASK\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ]\n        },\n        \"ITEM_SALE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ]\n        },\n        \"ITEM_FINREC\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ]\n        },\n        \"ITEM_PLAYER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ]\n        },\n        \"ITEM_CHARACTER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ]\n        },\n        \"ITEM_SITE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ]\n        },\n        // SALE relationships (6)\n        \"SALE_TASK\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ]\n        },\n        \"SALE_ITEM\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ]\n        },\n        \"SALE_FINREC\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ]\n        },\n        \"SALE_PLAYER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ]\n        },\n        \"SALE_CHARACTER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ]\n        },\n        \"SALE_SITE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ]\n        },\n        // FINANCIAL RECORD relationships (6)\n        \"FINREC_TASK\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ]\n        },\n        \"FINREC_ITEM\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ]\n        },\n        \"FINREC_SALE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ]\n        },\n        \"FINREC_PLAYER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ]\n        },\n        \"FINREC_CHARACTER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ]\n        },\n        \"FINREC_SITE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ]\n        },\n        // CHARACTER relationships (6)\n        \"CHARACTER_TASK\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ]\n        },\n        \"CHARACTER_ITEM\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ]\n        },\n        \"CHARACTER_SALE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ]\n        },\n        \"CHARACTER_FINREC\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ]\n        },\n        \"CHARACTER_SITE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ]\n        },\n        \"CHARACTER_PLAYER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ]\n        },\n        // SITE relationships (6)\n        \"SITE_TASK\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ]\n        },\n        \"SITE_CHARACTER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ]\n        },\n        \"SITE_FINREC\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ]\n        },\n        \"SITE_ITEM\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ]\n        },\n        \"SITE_SALE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ]\n        },\n        \"SITE_SITE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE\n            ]\n        },\n        // PLAYER relationships (5)\n        \"PLAYER_TASK\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK\n            ]\n        },\n        \"PLAYER_SALE\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE\n            ]\n        },\n        \"PLAYER_FINREC\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL\n            ]\n        },\n        \"PLAYER_ITEM\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM\n            ]\n        },\n        \"PLAYER_CHARACTER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ]\n        },\n        // ACCOUNT relationships (4)\n        \"ACCOUNT_PLAYER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ACCOUNT\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ]\n        },\n        \"ACCOUNT_CHARACTER\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ACCOUNT\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ]\n        },\n        \"PLAYER_ACCOUNT\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ACCOUNT\n            ]\n        },\n        \"CHARACTER_ACCOUNT\": {\n            source: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER\n            ],\n            target: [\n                _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ACCOUNT\n            ]\n        }\n    };\n    const combination = validCombinations[linkType];\n    if (!combination) {\n        return {\n            isValid: false,\n            reason: \"Unknown link type: \".concat(linkType)\n        };\n    }\n    if (!combination.source.includes(sourceType)) {\n        return {\n            isValid: false,\n            reason: \"Invalid source type for \".concat(linkType, \": \").concat(sourceType, \". Valid sources: \").concat(combination.source.join(\", \"))\n        };\n    }\n    if (!combination.target.includes(targetType)) {\n        return {\n            isValid: false,\n            reason: \"Invalid target type for \".concat(linkType, \": \").concat(targetType, \". Valid targets: \").concat(combination.target.join(\", \"))\n        };\n    }\n    return {\n        isValid: true\n    };\n}\n/**\r\n * Validate that entity exists in the system\r\n */ async function validateEntityExists(entityType, entityId) {\n    try {\n        switch(entityType){\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK:\n                const tasks = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllTasks)();\n                const task = tasks.find((t)=>t.id === entityId);\n                return !!task;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM:\n                const items = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllItems)();\n                const item = items.find((i)=>i.id === entityId);\n                return !!item;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL:\n                const financialRecords = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllFinancials)();\n                const financial = financialRecords.find((f)=>f.id === entityId);\n                return !!financial;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE:\n                const sales = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllSales)();\n                const sale = sales.find((s)=>s.id === entityId);\n                return !!sale;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER:\n                const characters = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllCharacters)();\n                const character = characters.find((c)=>c.id === entityId);\n                return !!character;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER:\n                const players = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllPlayers)();\n                const player = players.find((p)=>p.id === entityId);\n                return !!player;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE:\n                const sites = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllSites)();\n                const site = sites.find((s)=>s.id === entityId);\n                return !!site;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ACCOUNT:\n                // Account entity not implemented in current datastore\n                return false;\n            default:\n                console.warn(\"[validateEntityExists] Unknown entity type: \".concat(entityType));\n                return false;\n        }\n    } catch (error) {\n        console.error(\"[validateEntityExists] Error validating entity \".concat(entityType, \":\").concat(entityId, \":\"), error);\n        return false;\n    }\n}\n/**\r\n * Validate business rules specific to link types\r\n */ async function validateBusinessRules(linkType, source, target, metadata) {\n    const warnings = [];\n    try {\n        switch(linkType){\n            case \"PLAYER_CHARACTER\":\n                // Validate that character has valid playerId\n                const characters = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllCharacters)();\n                const character = characters.find((c)=>c.id === source.id);\n                if (character && character.playerId !== target.id) {\n                    warnings.push(\"Character playerId (\".concat(character.playerId, \") does not match target player ID (\").concat(target.id, \")\"));\n                }\n                break;\n            case \"TASK_SITE\":\n                // Validate that task has valid siteId\n                const tasks = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllTasks)();\n                const task = tasks.find((t)=>t.id === source.id);\n                if (task && task.siteId !== target.id) {\n                    warnings.push(\"Task siteId (\".concat(task.siteId, \") does not match target site ID (\").concat(target.id, \")\"));\n                }\n                break;\n            case \"ITEM_SITE\":\n                // Validate item stock location\n                const items = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllItems)();\n                const item = items.find((i)=>i.id === source.id);\n                if (item && item.stock) {\n                    const hasStockAtSite = item.stock.some((stock)=>stock.siteId === target.id);\n                    if (!hasStockAtSite) {\n                        warnings.push(\"Item does not have stock at target site: \".concat(target.id));\n                    }\n                }\n                break;\n            case \"SALE_ITEM\":\n                // Validate sale contains the item\n                const sales = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllSales)();\n                const sale = sales.find((s)=>s.id === source.id);\n                if (sale && sale.lines) {\n                    const hasItemInSale = sale.lines.some((line)=>line.kind === \"item\" && line.itemId === target.id);\n                    if (!hasItemInSale) {\n                        warnings.push(\"Sale does not contain target item: \".concat(target.id));\n                    }\n                }\n                break;\n            case \"CHARACTER_PLAYER\":\n                // Validate that character belongs to the player\n                const charForPlayer = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllCharacters)();\n                const char = charForPlayer.find((c)=>c.id === source.id);\n                if (char && char.playerId !== target.id) {\n                    warnings.push(\"Character playerId (\".concat(char.playerId, \") does not match target player ID (\").concat(target.id, \")\"));\n                }\n                break;\n            case \"SALE_CHARACTER\":\n                // Validate that character is the customer\n                const saleForChar = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllSales)();\n                const saleWithChar = saleForChar.find((s)=>s.id === source.id);\n                if (saleWithChar && saleWithChar.customerId !== target.id) {\n                    warnings.push(\"Sale customerId (\".concat(saleWithChar.customerId, \") does not match target character ID (\").concat(target.id, \")\"));\n                }\n                break;\n            // Add more business rule validations as needed\n            default:\n                break;\n        }\n        return {\n            isValid: true,\n            warnings: warnings.length > 0 ? warnings : undefined\n        };\n    } catch (error) {\n        return {\n            isValid: false,\n            reason: \"Business rules validation error: \".concat(error instanceof Error ? error.message : \"Unknown error\")\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./links/link-validation.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./links/links-logging.ts":
/*!********************************!*\
  !*** ./links/links-logging.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendLinkLog: function() { return /* binding */ appendLinkLog; }\n/* harmony export */ });\n/* harmony import */ var _data_store_kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/data-store/kv */ \"(app-pages-browser)/./data-store/kv.ts\");\n/* harmony import */ var _data_store_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/keys */ \"(app-pages-browser)/./data-store/keys.ts\");\n// links/links-logging.ts\n// Links self-logging: append link events to KV\n\n\nconst ENTITY = \"links\";\nasync function appendLinkLog(link) {\n    let kind = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"created\";\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLogKey)(ENTITY);\n    const list = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key) || [];\n    list.push({\n        kind,\n        linkId: link.id,\n        linkType: String(link.linkType),\n        source: {\n            type: String(link.source.type),\n            id: link.source.id\n        },\n        target: {\n            type: String(link.target.type),\n            id: link.target.id\n        },\n        metadata: link.metadata,\n        at: new Date().toISOString()\n    });\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, list);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpbmtzL2xpbmtzLWxvZ2dpbmcudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEseUJBQXlCO0FBQ3pCLCtDQUErQztBQUdBO0FBQ0M7QUFFaEQsTUFBTUcsU0FBUztBQVlSLGVBQWVDLGNBQWNDLElBQVU7UUFBRUMsT0FBQUEsaUVBQTZCO0lBQzNFLE1BQU1DLE1BQU1MLDZEQUFXQSxDQUFDQztJQUN4QixNQUFNSyxPQUFPLE1BQU9SLHFEQUFLQSxDQUFpQk8sUUFBUyxFQUFFO0lBQ3JEQyxLQUFLQyxJQUFJLENBQUM7UUFDUkg7UUFDQUksUUFBUUwsS0FBS00sRUFBRTtRQUNmQyxVQUFVQyxPQUFPUixLQUFLTyxRQUFRO1FBQzlCRSxRQUFRO1lBQUVDLE1BQU1GLE9BQU9SLEtBQUtTLE1BQU0sQ0FBQ0MsSUFBSTtZQUFHSixJQUFJTixLQUFLUyxNQUFNLENBQUNILEVBQUU7UUFBQztRQUM3REssUUFBUTtZQUFFRCxNQUFNRixPQUFPUixLQUFLVyxNQUFNLENBQUNELElBQUk7WUFBR0osSUFBSU4sS0FBS1csTUFBTSxDQUFDTCxFQUFFO1FBQUM7UUFDN0RNLFVBQVVaLEtBQUtZLFFBQVE7UUFDdkJDLElBQUksSUFBSUMsT0FBT0MsV0FBVztJQUM1QjtJQUNBLE1BQU1uQixxREFBS0EsQ0FBQ00sS0FBS0M7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGlua3MvbGlua3MtbG9nZ2luZy50cz9kNDJlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGxpbmtzL2xpbmtzLWxvZ2dpbmcudHNcclxuLy8gTGlua3Mgc2VsZi1sb2dnaW5nOiBhcHBlbmQgbGluayBldmVudHMgdG8gS1ZcclxuXHJcbmltcG9ydCB0eXBlIHsgTGluayB9IGZyb20gJ0AvdHlwZXMvZW50aXRpZXMnO1xyXG5pbXBvcnQgeyBrdkdldCwga3ZTZXQgfSBmcm9tICdAL2RhdGEtc3RvcmUva3YnO1xyXG5pbXBvcnQgeyBidWlsZExvZ0tleSB9IGZyb20gJ0AvZGF0YS1zdG9yZS9rZXlzJztcclxuXHJcbmNvbnN0IEVOVElUWSA9ICdsaW5rcyc7XHJcblxyXG5leHBvcnQgdHlwZSBMaW5rTG9nRXZlbnQgPSB7XHJcbiAga2luZDogJ2NyZWF0ZWQnIHwgJ3JlbW92ZWQnIHwgJ3VwZGF0ZWQnO1xyXG4gIGxpbmtJZDogc3RyaW5nO1xyXG4gIGxpbmtUeXBlOiBzdHJpbmc7XHJcbiAgc291cmNlOiB7IHR5cGU6IHN0cmluZzsgaWQ6IHN0cmluZyB9O1xyXG4gIHRhcmdldDogeyB0eXBlOiBzdHJpbmc7IGlkOiBzdHJpbmcgfTtcclxuICBtZXRhZGF0YT86IFJlY29yZDxzdHJpbmcsIGFueT47XHJcbiAgYXQ6IHN0cmluZzsgLy8gSVNPIHRpbWVzdGFtcFxyXG59O1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFwcGVuZExpbmtMb2cobGluazogTGluaywga2luZDogTGlua0xvZ0V2ZW50WydraW5kJ10gPSAnY3JlYXRlZCcpOiBQcm9taXNlPHZvaWQ+IHtcclxuICBjb25zdCBrZXkgPSBidWlsZExvZ0tleShFTlRJVFkpO1xyXG4gIGNvbnN0IGxpc3QgPSAoYXdhaXQga3ZHZXQ8TGlua0xvZ0V2ZW50W10+KGtleSkpIHx8IFtdO1xyXG4gIGxpc3QucHVzaCh7XHJcbiAgICBraW5kLFxyXG4gICAgbGlua0lkOiBsaW5rLmlkLFxyXG4gICAgbGlua1R5cGU6IFN0cmluZyhsaW5rLmxpbmtUeXBlKSxcclxuICAgIHNvdXJjZTogeyB0eXBlOiBTdHJpbmcobGluay5zb3VyY2UudHlwZSksIGlkOiBsaW5rLnNvdXJjZS5pZCB9LFxyXG4gICAgdGFyZ2V0OiB7IHR5cGU6IFN0cmluZyhsaW5rLnRhcmdldC50eXBlKSwgaWQ6IGxpbmsudGFyZ2V0LmlkIH0sXHJcbiAgICBtZXRhZGF0YTogbGluay5tZXRhZGF0YSxcclxuICAgIGF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXHJcbiAgfSk7XHJcbiAgYXdhaXQga3ZTZXQoa2V5LCBsaXN0KTtcclxufVxyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJrdkdldCIsImt2U2V0IiwiYnVpbGRMb2dLZXkiLCJFTlRJVFkiLCJhcHBlbmRMaW5rTG9nIiwibGluayIsImtpbmQiLCJrZXkiLCJsaXN0IiwicHVzaCIsImxpbmtJZCIsImlkIiwibGlua1R5cGUiLCJTdHJpbmciLCJzb3VyY2UiLCJ0eXBlIiwidGFyZ2V0IiwibWV0YWRhdGEiLCJhdCIsIkRhdGUiLCJ0b0lTT1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./links/links-logging.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./links/links-workflows.ts":
/*!**********************************!*\
  !*** ./links/links-workflows.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeLink: function() { return /* binding */ makeLink; },\n/* harmony export */   processCharacterEffects: function() { return /* binding */ processCharacterEffects; },\n/* harmony export */   processFinancialEffects: function() { return /* binding */ processFinancialEffects; },\n/* harmony export */   processItemEffects: function() { return /* binding */ processItemEffects; },\n/* harmony export */   processLinkEntity: function() { return /* binding */ processLinkEntity; },\n/* harmony export */   processPlayerEffects: function() { return /* binding */ processPlayerEffects; },\n/* harmony export */   processSaleEffects: function() { return /* binding */ processSaleEffects; },\n/* harmony export */   processTaskEffects: function() { return /* binding */ processTaskEffects; }\n/* harmony export */ });\n/* harmony import */ var _types_enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/enums */ \"(app-pages-browser)/./types/enums.ts\");\n/* harmony import */ var _link_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./link-registry */ \"(app-pages-browser)/./links/link-registry.ts\");\n/* harmony import */ var _links_logging__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./links-logging */ \"(app-pages-browser)/./links/links-logging.ts\");\n/* harmony import */ var _data_store_datastore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/data-store/datastore */ \"(app-pages-browser)/./data-store/datastore.ts\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(app-pages-browser)/./data-store/effects-registry.ts\");\n// links/links-workflows.ts\n// Universal entry point for creating links from entities (property inspection)\n\n\n\n\n\n\nfunction makeLink(linkType, source, target, metadata) {\n    return {\n        id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(),\n        linkType,\n        source,\n        target,\n        createdAt: new Date(),\n        metadata\n    };\n}\nasync function processLinkEntity(entity, entityType) {\n    // Check for circular reference\n    if ((0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.isProcessing)(entityType, entity.id)) {\n        console.warn(\"[CircuitBreaker] Already processing \".concat(entityType, \":\").concat(entity.id, \" - skipping to prevent circular reference\"));\n        return;\n    }\n    try {\n        (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.startProcessing)(entityType, entity.id);\n        switch(entityType){\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK:\n                await processTaskEffects(entity);\n                break;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM:\n                await processItemEffects(entity);\n                break;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE:\n                await processSaleEffects(entity);\n                break;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL:\n                await processFinancialEffects(entity);\n                break;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER:\n                await processCharacterEffects(entity);\n                break;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER:\n                await processPlayerEffects(entity);\n                break;\n            case _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE:\n                break;\n            default:\n                return;\n        }\n    } finally{\n        (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.endProcessing)(entityType, entity.id);\n    }\n}\nasync function processTaskEffects(task) {\n    if (task.siteId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.TASK_SITE, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n            id: task.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE,\n            id: task.siteId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n    if (task.outputItemId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.TASK_ITEM, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n            id: task.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM,\n            id: task.outputItemId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n    // TASK_CHARACTER link\n    if (task.characterId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.TASK_CHARACTER, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n            id: task.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER,\n            id: task.characterId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n    // Create TASK_ITEM link for items created from task emissary fields\n    if (task.outputItemType && task.outputQuantity && task.status === \"Done\") {\n        // Find the item created by this task\n        const items = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_3__.getAllItems)();\n        const createdItem = items.find((item)=>item.sourceTaskId === task.id && item.type === task.outputItemType);\n        if (createdItem) {\n            const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.TASK_ITEM, {\n                type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n                id: task.id\n            }, {\n                type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM,\n                id: createdItem.id\n            }, {\n                quantity: task.outputQuantity,\n                unitCost: task.outputUnitCost,\n                price: task.outputItemPrice,\n                itemType: task.outputItemType\n            });\n            await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n            await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n        }\n    }\n// Note: TASK_PLAYER handled by points-rewards-utils.ts ✅\n// Note: TASK_FINREC handled by financial-record-utils.ts ✅\n}\nasync function processItemEffects(item) {\n    if (item.sourceTaskId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.ITEM_TASK, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM,\n            id: item.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n            id: item.sourceTaskId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n    for (const s of item.stock || []){\n        if (s.siteId) {\n            const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.ITEM_SITE, {\n                type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM,\n                id: item.id\n            }, {\n                type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE,\n                id: s.siteId\n            });\n            await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n            await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n        }\n    }\n    // ITEM_CHARACTER link\n    if (item.ownerCharacterId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.ITEM_CHARACTER, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM,\n            id: item.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER,\n            id: item.ownerCharacterId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n// Note: ITEM_SALE links handled in processSaleEffects (from sale.lines)\n}\nasync function processSaleEffects(sale) {\n    if (sale.siteId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.SALE_SITE, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE,\n            id: sale.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE,\n            id: sale.siteId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n    // SALE_CHARACTER link\n    if (sale.customerId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.SALE_CHARACTER, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE,\n            id: sale.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER,\n            id: sale.customerId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n    // SALE_ITEM links (from sale lines)\n    if (sale.lines && sale.lines.length > 0) {\n        for (const line of sale.lines){\n            if (line.kind === \"item\" && line.itemId) {\n                const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.SALE_ITEM, {\n                    type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE,\n                    id: sale.id\n                }, {\n                    type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM,\n                    id: line.itemId\n                }, {\n                    quantity: line.quantity,\n                    unitPrice: line.unitPrice\n                });\n                await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n                await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n            }\n        }\n    }\n    // SALE_TASK link (if sale spawned from task)\n    if (sale.sourceTaskId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.SALE_TASK, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE,\n            id: sale.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n            id: sale.sourceTaskId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n// Note: SALE_PLAYER handled by points-rewards-utils.ts ✅\n}\nasync function processFinancialEffects(fin) {\n    if (fin.siteId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.FINREC_SITE, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL,\n            id: fin.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE,\n            id: fin.siteId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n    // FINREC_CHARACTER link\n    if (fin.customerCharacterId) {\n        const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.FINREC_CHARACTER, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL,\n            id: fin.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER,\n            id: fin.customerCharacterId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n    }\n    // Create FINREC_ITEM link for items created from financial record emissary fields\n    if (fin.outputItemType && fin.outputQuantity) {\n        // Find the item created by this financial record\n        const items = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_3__.getAllItems)();\n        const createdItem = items.find((item)=>item.sourceRecordId === fin.id && item.type === fin.outputItemType);\n        if (createdItem) {\n            const l = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.FINREC_ITEM, {\n                type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL,\n                id: fin.id\n            }, {\n                type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM,\n                id: createdItem.id\n            }, {\n                quantity: fin.outputQuantity,\n                unitCost: fin.outputUnitCost,\n                price: fin.outputItemPrice,\n                itemType: fin.outputItemType\n            });\n            await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(l);\n            await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(l, \"created\");\n        }\n    }\n// Note: FINREC_TASK handled by financial-record-utils.ts ✅\n// Note: FINREC_PLAYER handled by points-rewards-utils.ts ✅\n}\nasync function processCharacterEffects(character) {\n    // CHARACTER_PLAYER link\n    if (character.playerId) {\n        const link = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.CHARACTER_PLAYER, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER,\n            id: character.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER,\n            id: character.playerId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(link);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(link, \"created\");\n    }\n    // CHARACTER_SITE link (if character has home site)\n    if (character.siteId) {\n        const link = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.CHARACTER_SITE, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER,\n            id: character.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SITE,\n            id: character.siteId\n        });\n        await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(link);\n        await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(link, \"created\");\n    }\n}\nasync function processPlayerEffects(player) {\n    // PLAYER_CHARACTER links (array of characters)\n    if (player.characterIds && player.characterIds.length > 0) {\n        for (const characterId of player.characterIds){\n            const link = makeLink(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.PLAYER_CHARACTER, {\n                type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.PLAYER,\n                id: player.id\n            }, {\n                type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.CHARACTER,\n                id: characterId\n            });\n            await (0,_link_registry__WEBPACK_IMPORTED_MODULE_1__.createLink)(link);\n            await (0,_links_logging__WEBPACK_IMPORTED_MODULE_2__.appendLinkLog)(link, \"created\");\n        }\n    }\n// Note: PLAYER_SITE links not implemented - Player doesn't have siteId field\n} // Sites don't create links when saved - they're primarily link targets\n // SITE_SITE links are created by movement operations (see workflows/site-movement-utils.ts)\n // No processSiteEffects function needed - sites have no link-creating properties\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./links/links-workflows.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./workflows/entities-logging.ts":
/*!***************************************!*\
  !*** ./workflows/entities-logging.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendBulkOperationLog: function() { return /* binding */ appendBulkOperationLog; },\n/* harmony export */   appendCharacterJungleCoinsLog: function() { return /* binding */ appendCharacterJungleCoinsLog; },\n/* harmony export */   appendEntityLog: function() { return /* binding */ appendEntityLog; },\n/* harmony export */   appendItemCreationLog: function() { return /* binding */ appendItemCreationLog; },\n/* harmony export */   appendPlayerPointsLog: function() { return /* binding */ appendPlayerPointsLog; },\n/* harmony export */   appendPlayerPointsUpdateLog: function() { return /* binding */ appendPlayerPointsUpdateLog; },\n/* harmony export */   updateEntityLogField: function() { return /* binding */ updateEntityLogField; }\n/* harmony export */ });\n/* harmony import */ var _data_store_kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/data-store/kv */ \"(app-pages-browser)/./data-store/kv.ts\");\n/* harmony import */ var _data_store_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/keys */ \"(app-pages-browser)/./data-store/keys.ts\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\n// workflows/entities-logging.ts\n// Append-only lifecycle logs + in-place field updates for descriptive changes\n\n\n\nasync function appendEntityLog(entityType, entityId, event, details) {\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLogKey)(entityType);\n    const list = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key) || [];\n    list.push({\n        event,\n        entityId,\n        ...details,\n        timestamp: new Date().toISOString()\n    });\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, list);\n}\nasync function updateEntityLogField(entityType, entityId, fieldName, oldValue, newValue) {\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLogKey)(entityType);\n    const list = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key) || [];\n    // Find the most recent log entry for this entity\n    for(let i = list.length - 1; i >= 0; i--){\n        var _list_i;\n        if (((_list_i = list[i]) === null || _list_i === void 0 ? void 0 : _list_i.entityId) === entityId) {\n            list[i][fieldName] = newValue;\n            list[i].lastUpdated = new Date().toISOString();\n            break;\n        }\n    }\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, list);\n}\nasync function appendBulkOperationLog(entityType, operation, details) {\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLogKey)(entityType);\n    const list = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key) || [];\n    const event = operation === \"import\" ? \"BULK_IMPORT\" : \"BULK_EXPORT\";\n    const operationId = (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n    list.push({\n        event,\n        operationId,\n        operation,\n        count: details.count,\n        source: details.source,\n        importMode: details.importMode,\n        exportFormat: details.exportFormat,\n        extra: details.extra,\n        timestamp: new Date().toISOString()\n    });\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, list);\n}\n/**\r\n * Log item creation with source tracking\r\n * Used for items created from tasks, financial records, or directly\r\n */ async function appendItemCreationLog(item, sourceType, sourceId) {\n    var _item_stock, _item_stock1, _item_stock2;\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLogKey)(\"item\");\n    const list = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key) || [];\n    const logEntry = {\n        event: \"CREATED\",\n        entityId: item.id,\n        itemName: item.name,\n        itemType: item.type,\n        collection: item.collection,\n        status: item.status,\n        quantity: ((_item_stock = item.stock) === null || _item_stock === void 0 ? void 0 : _item_stock.reduce((sum, stock)=>sum + stock.quantity, 0)) || 0,\n        unitCost: item.unitCost || 0,\n        totalCost: (((_item_stock1 = item.stock) === null || _item_stock1 === void 0 ? void 0 : _item_stock1.reduce((sum, stock)=>sum + stock.quantity, 0)) || 0) * (item.unitCost || 0),\n        price: item.price || 0,\n        station: item.station,\n        category: item.category,\n        year: item.year,\n        sourceType,\n        sourceId,\n        description: \"Item created from \".concat(sourceType, \": \").concat(item.type, \" (\").concat(((_item_stock2 = item.stock) === null || _item_stock2 === void 0 ? void 0 : _item_stock2.reduce((sum, stock)=>sum + stock.quantity, 0)) || 0, \"x)\"),\n        timestamp: new Date().toISOString()\n    };\n    list.push(logEntry);\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, list);\n}\n/**\r\n * Log player points award with source tracking\r\n * Used for points awarded from tasks, financial records, or sales\r\n */ async function appendPlayerPointsLog(playerId, points, sourceId, sourceType) {\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLogKey)(\"player\");\n    const list = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key) || [];\n    const logEntry = {\n        event: \"POINTS_CHANGED\",\n        entityId: playerId,\n        points: points,\n        sourceId: sourceId,\n        sourceType: sourceType,\n        description: \"Points awarded from \".concat(sourceType, \": XP+\").concat(points.xp, \", RP+\").concat(points.rp, \", FP+\").concat(points.fp, \", HP+\").concat(points.hp),\n        timestamp: new Date().toISOString()\n    };\n    list.push(logEntry);\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, list);\n}\n/**\r\n * Log character jungle coins award with source tracking\r\n * Used for jungle coins awarded from financial records\r\n */ async function appendCharacterJungleCoinsLog(characterId, amount, sourceId, sourceType) {\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLogKey)(\"character\");\n    const list = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key) || [];\n    const logEntry = {\n        event: \"UPDATED\",\n        entityId: characterId,\n        jungleCoins: amount,\n        sourceId: sourceId,\n        sourceType: sourceType,\n        description: \"Jungle coins awarded from \".concat(sourceType, \": +\").concat(amount, \" J$\"),\n        timestamp: new Date().toISOString()\n    };\n    list.push(logEntry);\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, list);\n}\n/**\r\n * Log player points update with change tracking\r\n * Used when task rewards change and points need to be updated\r\n */ async function appendPlayerPointsUpdateLog(playerId, oldPoints, newPoints, sourceId) {\n    const key = (0,_data_store_keys__WEBPACK_IMPORTED_MODULE_1__.buildLogKey)(\"player\");\n    const list = await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvGet)(key) || [];\n    const delta = {\n        xp: newPoints.xp - oldPoints.xp,\n        rp: newPoints.rp - oldPoints.rp,\n        fp: newPoints.fp - oldPoints.fp,\n        hp: newPoints.hp - oldPoints.hp\n    };\n    const logEntry = {\n        event: \"POINTS_CHANGED\",\n        entityId: playerId,\n        oldPoints: oldPoints,\n        newPoints: newPoints,\n        delta: delta,\n        sourceId: sourceId,\n        description: \"Points updated: XP\".concat(delta.xp >= 0 ? \"+\" : \"\").concat(delta.xp, \", RP\").concat(delta.rp >= 0 ? \"+\" : \"\").concat(delta.rp, \", FP\").concat(delta.fp >= 0 ? \"+\" : \"\").concat(delta.fp, \", HP\").concat(delta.hp >= 0 ? \"+\" : \"\").concat(delta.hp),\n        timestamp: new Date().toISOString()\n    };\n    list.push(logEntry);\n    await (0,_data_store_kv__WEBPACK_IMPORTED_MODULE_0__.kvSet)(key, list);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./workflows/entities-logging.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./workflows/entities-workflows/character.workflow.ts":
/*!************************************************************!*\
  !*** ./workflows/entities-workflows/character.workflow.ts ***!
  \************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logCharacterEffect: function() { return /* binding */ logCharacterEffect; },\n/* harmony export */   logCharacterEffectFromRecord: function() { return /* binding */ logCharacterEffectFromRecord; },\n/* harmony export */   logCharacterUpdateFromTask: function() { return /* binding */ logCharacterUpdateFromTask; },\n/* harmony export */   onCharacterUpsert: function() { return /* binding */ onCharacterUpsert; },\n/* harmony export */   removeCharacterEffectsOnDelete: function() { return /* binding */ removeCharacterEffectsOnDelete; }\n/* harmony export */ });\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../entities-logging */ \"(app-pages-browser)/./workflows/entities-logging.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(app-pages-browser)/./data-store/effects-registry.ts\");\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/client-api */ \"(app-pages-browser)/./lib/client-api.ts\");\n// workflows/entities-workflows/character.workflow.ts\n// Character-specific workflow with ROLE_CHANGED event\n\n\n\n\nconst STATE_FIELDS = [\n    \"roles\",\n    \"isActive\"\n];\nconst DESCRIPTIVE_FIELDS = [\n    \"name\",\n    \"description\",\n    \"contactEmail\",\n    \"contactPhone\",\n    \"commColor\"\n];\nasync function onCharacterUpsert(character, previousCharacter) {\n    // New character creation\n    if (!previousCharacter) {\n        const effectKey = \"character:\".concat(character.id, \":created\");\n        if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(effectKey)) return;\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"character\", character.id, \"CREATED\", {\n            name: character.name,\n            roles: character.roles\n        });\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(effectKey);\n        return;\n    }\n    // Role changes - ROLE_CHANGED event\n    const rolesChanged = JSON.stringify(previousCharacter.roles) !== JSON.stringify(character.roles);\n    if (rolesChanged) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"character\", character.id, \"ROLE_CHANGED\", {\n            name: character.name,\n            oldRoles: previousCharacter.roles,\n            newRoles: character.roles\n        });\n    }\n    // General updates - UPDATED event\n    const hasSignificantChanges = previousCharacter.isActive !== character.isActive;\n    if (hasSignificantChanges) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"character\", character.id, \"UPDATED\", {\n            name: character.name,\n            isActive: character.isActive\n        });\n    }\n    // Descriptive changes - update in-place\n    for (const field of DESCRIPTIVE_FIELDS){\n        if (previousCharacter[field] !== character[field]) {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"character\", character.id, field, previousCharacter[field], character[field]);\n        }\n    }\n}\n/**\r\n * Remove character effects when character is deleted\r\n * Characters can have entries in character log and related links\r\n */ async function removeCharacterEffectsOnDelete(characterId) {\n    try {\n        console.log(\"[removeCharacterEffectsOnDelete] Starting cleanup for character: \".concat(characterId));\n        // 1. Remove all Links related to this character\n        const characterLinks = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getLinksFor({\n            type: \"character\",\n            id: characterId\n        });\n        console.log(\"[removeCharacterEffectsOnDelete] Found \".concat(characterLinks.length, \" links to remove\"));\n        for (const link of characterLinks){\n            try {\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLink(link.id);\n                console.log(\"[removeCharacterEffectsOnDelete] ✅ Removed link: \".concat(link.linkType));\n            } catch (error) {\n                console.error(\"[removeCharacterEffectsOnDelete] ❌ Failed to remove link \".concat(link.id, \":\"), error);\n            }\n        }\n        // 2. Clear all effects for this character\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffect)(\"character:\".concat(characterId, \":created\"));\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"character\", characterId, \"\");\n        // 3. Remove log entries from character log\n        console.log(\"[removeCharacterEffectsOnDelete] Starting log entry removal for character: \".concat(characterId));\n        const result = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"character\", characterId);\n        if (result.success) {\n            console.log(\"[removeCharacterEffectsOnDelete] ✅ Character log entries removed successfully for character: \".concat(characterId));\n        } else {\n            console.error(\"[removeCharacterEffectsOnDelete] Failed to remove character log entries: \".concat(result.message));\n        }\n        console.log(\"[removeCharacterEffectsOnDelete] ✅ Cleared effects, removed links, and removed log entries for character \".concat(characterId));\n    } catch (error) {\n        console.error(\"Error removing character effects:\", error);\n    }\n}\n/**\r\n * Log character effect from task completion\r\n * This is currently a no-op since tasks don't award jungle coins anymore\r\n * J$ are only earned via Points Exchange\r\n */ async function logCharacterEffect(task) {\n    // J$ no longer awarded as task rewards - only earned via Points Exchange\n    // This function is now a no-op since tasks don't award J$ anymore\n    return;\n}\n/**\r\n * Log character effect from financial record\r\n * This logs the jungle coins awarded to the character from a financial record\r\n */ async function logCharacterEffectFromRecord(record) {\n    try {\n        console.log(\"[logCharacterEffectFromRecord] Logging character effect for record: \".concat(record.name, \" (\").concat(record.id, \")\"));\n        // Only log if there are jungle coins to award\n        if (!record.jungleCoins || record.jungleCoins <= 0) {\n            console.log(\"[logCharacterEffectFromRecord] No jungle coins to log, skipping\");\n            return;\n        }\n        // Get main character ID (V0.1 constant)\n        const mainCharacterId = \"CHARACTER_ONE_ID\";\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendCharacterJungleCoinsLog)(mainCharacterId, record.jungleCoins, record.id, \"financial\");\n        console.log(\"[logCharacterEffectFromRecord] ✅ Character effect logged successfully for \".concat(record.name));\n    } catch (error) {\n        console.error(\"Error logging character effect from record:\", error);\n    }\n}\n/**\r\n * Log character update from task changes\r\n * This is currently a no-op since tasks don't award jungle coins anymore\r\n * J$ are only earned via Points Exchange\r\n */ async function logCharacterUpdateFromTask(task, oldTask) {\n    // J$ no longer awarded as task rewards - only earned via Points Exchange\n    // This function is now a no-op since tasks don't award J$ anymore\n    return;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./workflows/entities-workflows/character.workflow.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./workflows/entities-workflows/financial.workflow.ts":
/*!************************************************************!*\
  !*** ./workflows/entities-workflows/financial.workflow.ts ***!
  \************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onFinancialUpsert: function() { return /* binding */ onFinancialUpsert; },\n/* harmony export */   removeRecordEffectsOnDelete: function() { return /* binding */ removeRecordEffectsOnDelete; }\n/* harmony export */ });\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../entities-logging */ \"(app-pages-browser)/./workflows/entities-logging.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(app-pages-browser)/./data-store/effects-registry.ts\");\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/client-api */ \"(app-pages-browser)/./lib/client-api.ts\");\n/* harmony import */ var _item_creation_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../item-creation-utils */ \"(app-pages-browser)/./workflows/item-creation-utils.ts\");\n/* harmony import */ var _points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../points-rewards-utils */ \"(app-pages-browser)/./workflows/points-rewards-utils.ts\");\n/* harmony import */ var _update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../update-propagation-utils */ \"(app-pages-browser)/./workflows/update-propagation-utils.ts\");\n// workflows/entities-workflows/financial.workflow.ts\n// Financial-specific workflow with CHARGED, COLLECTED events\n\n\n\n\n\n\nconst STATE_FIELDS = [\n    \"isNotPaid\",\n    \"isNotCharged\",\n    \"isCollected\"\n];\nconst DESCRIPTIVE_FIELDS = [\n    \"name\",\n    \"description\",\n    \"cost\",\n    \"revenue\",\n    \"jungleCoins\",\n    \"notes\"\n];\nasync function onFinancialUpsert(financial, previousFinancial) {\n    // New financial record creation\n    if (!previousFinancial) {\n        var _financial_rewards;\n        const effectKey = \"financial:\".concat(financial.id, \":created\");\n        if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(effectKey)) return;\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"financial\", financial.id, \"CREATED\", {\n            name: financial.name,\n            type: financial.type,\n            station: financial.station\n        });\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(effectKey);\n        // Item creation from emissary fields - on record creation\n        if (financial.outputItemType && financial.outputQuantity) {\n            const itemEffectKey = \"financial:\".concat(financial.id, \":itemCreated\");\n            if (!await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(itemEffectKey)) {\n                console.log(\"[onFinancialUpsert] Creating item from financial record emissary fields: \".concat(financial.name));\n                const createdItem = await (0,_item_creation_utils__WEBPACK_IMPORTED_MODULE_3__.createItemFromRecord)(financial);\n                if (createdItem) {\n                    await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(itemEffectKey);\n                    console.log(\"[onFinancialUpsert] ✅ Item created and effect marked: \".concat(createdItem.name));\n                }\n            }\n        }\n        // Points awarding - on record creation with rewards\n        if ((_financial_rewards = financial.rewards) === null || _financial_rewards === void 0 ? void 0 : _financial_rewards.points) {\n            const pointsEffectKey = \"financial:\".concat(financial.id, \":pointsAwarded\");\n            if (!await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(pointsEffectKey)) {\n                console.log(\"[onFinancialUpsert] Awarding points from financial record: \".concat(financial.name));\n                await (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__.awardPointsToPlayer)((0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__.getMainPlayerId)(), {\n                    xp: financial.rewards.points.xp || 0,\n                    rp: financial.rewards.points.rp || 0,\n                    fp: financial.rewards.points.fp || 0,\n                    hp: financial.rewards.points.hp || 0\n                }, financial.id, \"financial\");\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(pointsEffectKey);\n                console.log(\"[onFinancialUpsert] ✅ Points awarded and effect marked for record: \".concat(financial.name));\n            }\n        }\n        // Jungle coins awarding - on record creation\n        if (financial.jungleCoins && financial.jungleCoins > 0) {\n            const jungleCoinsEffectKey = \"financial:\".concat(financial.id, \":jungleCoinsAwarded\");\n            if (!await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(jungleCoinsEffectKey)) {\n                console.log(\"[onFinancialUpsert] Awarding jungle coins from financial record: \".concat(financial.name));\n                await (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__.awardJungleCoinsToCharacter)((0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__.getMainCharacterId)(), financial.jungleCoins, financial.id, \"financial\");\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(jungleCoinsEffectKey);\n                console.log(\"[onFinancialUpsert] ✅ Jungle coins awarded and effect marked for record: \".concat(financial.name));\n            }\n        }\n        return;\n    }\n    // Payment status changes - CHARGED event\n    if (previousFinancial.isNotCharged && !financial.isNotCharged) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"financial\", financial.id, \"CHARGED\", {\n            name: financial.name,\n            revenue: financial.revenue,\n            chargedAt: new Date().toISOString()\n        });\n    }\n    // Collection status - COLLECTED event\n    if (!previousFinancial.isCollected && financial.isCollected) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"financial\", financial.id, \"COLLECTED\", {\n            name: financial.name,\n            collectedAt: new Date().toISOString()\n        });\n    }\n    // COMPREHENSIVE UPDATE PROPAGATION - when financial record properties change\n    if (previousFinancial) {\n        // Propagate to Tasks\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.hasFinancialPropsChanged)(financial, previousFinancial)) {\n            console.log(\"[onFinancialUpsert] Propagating financial changes to tasks: \".concat(financial.name));\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.updateTasksFromFinancialRecord)(financial, previousFinancial);\n        }\n        // Propagate to Items\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.hasOutputPropsChanged)(financial, previousFinancial)) {\n            console.log(\"[onFinancialUpsert] Propagating output changes to items: \".concat(financial.name));\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.updateItemsCreatedByRecord)(financial, previousFinancial);\n        }\n        // Propagate to Player (points delta)\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.hasRewardsChanged)(financial, previousFinancial)) {\n            console.log(\"[onFinancialUpsert] Propagating points changes to player: \".concat(financial.name));\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.updatePlayerPointsFromSource)(\"financial\", financial, previousFinancial);\n        }\n        // Propagate to Character (jungle coins delta)\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.hasJungleCoinsChanged)(financial, previousFinancial)) {\n            console.log(\"[onFinancialUpsert] Propagating jungle coins changes to character: \".concat(financial.name));\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.updateCharacterJungleCoinsFromRecord)(financial, previousFinancial);\n        }\n    }\n    // Descriptive changes - update in-place\n    for (const field of DESCRIPTIVE_FIELDS){\n        if (previousFinancial[field] !== financial[field]) {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"financial\", financial.id, field, previousFinancial[field], financial[field]);\n        }\n    }\n}\n/**\r\n * Remove financial record effects when record is deleted\r\n * Financial records can have entries in multiple logs: financials, character, player, items\r\n */ async function removeRecordEffectsOnDelete(recordId) {\n    try {\n        console.log(\"[removeRecordEffectsOnDelete] Starting cleanup for record: \".concat(recordId));\n        // 1. Remove items created by this record\n        await (0,_item_creation_utils__WEBPACK_IMPORTED_MODULE_3__.removeItemsCreatedByRecord)(recordId);\n        // 2. Remove player points that were awarded by this record (if points were badly given)\n        await removePlayerPointsFromRecord(recordId);\n        // 3. Remove jungle coins that were awarded by this record\n        await removeJungleCoinsFromRecord(recordId);\n        // 4. Remove all Links related to this record\n        const recordLinks = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getLinksFor({\n            type: \"financial\",\n            id: recordId\n        });\n        console.log(\"[removeRecordEffectsOnDelete] Found \".concat(recordLinks.length, \" links to remove\"));\n        for (const link of recordLinks){\n            try {\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLink(link.id);\n                console.log(\"[removeRecordEffectsOnDelete] ✅ Removed link: \".concat(link.linkType));\n            } catch (error) {\n                console.error(\"[removeRecordEffectsOnDelete] ❌ Failed to remove link \".concat(link.id, \":\"), error);\n            }\n        }\n        // 5. Clear effects registry\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffect)(\"financial:\".concat(recordId, \":created\"));\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffect)(\"financial:\".concat(recordId, \":itemCreated\"));\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffect)(\"financial:\".concat(recordId, \":pointsAwarded\"));\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffect)(\"financial:\".concat(recordId, \":jungleCoinsAwarded\"));\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"financial\", recordId, \"pointsLogged:\");\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"financial\", recordId, \"financialLogged:\");\n        // 6. Remove log entries from all relevant logs\n        console.log(\"[removeRecordEffectsOnDelete] Starting log entry removal for record: \".concat(recordId));\n        const removals = await Promise.all([\n            _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"financials\", recordId).then((r)=>{\n                console.log(\"[removeRecordEffectsOnDelete] Financials log removal result:\", r);\n                return r;\n            }).catch((e)=>({\n                    success: false,\n                    message: String(e)\n                })),\n            _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"character\", recordId).then((r)=>{\n                console.log(\"[removeRecordEffectsOnDelete] Character log removal result:\", r);\n                return r;\n            }).catch((e)=>({\n                    success: false,\n                    message: String(e)\n                })),\n            _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"player\", recordId).then((r)=>{\n                console.log(\"[removeRecordEffectsOnDelete] Player log removal result:\", r);\n                return r;\n            }).catch((e)=>({\n                    success: false,\n                    message: String(e)\n                })),\n            _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"items\", recordId).then((r)=>{\n                console.log(\"[removeRecordEffectsOnDelete] Items log removal result:\", r);\n                return r;\n            }).catch((e)=>({\n                    success: false,\n                    message: String(e)\n                }))\n        ]);\n        console.log(\"[removeRecordEffectsOnDelete] All removal results:\", removals);\n        const failed = removals.filter((r)=>!r.success);\n        if (failed.length > 0) {\n            console.error(\"[removeRecordEffectsOnDelete] Some log removals failed:\", failed);\n        } else {\n            console.log(\"[removeRecordEffectsOnDelete] ✅ All log entries removed successfully for record: \".concat(recordId));\n        }\n        console.log(\"[removeRecordEffectsOnDelete] ✅ Cleared effects, removed links, deleted created items, and removed log entries for record \".concat(recordId));\n    } catch (error) {\n        console.error(\"Error removing record effects:\", error);\n    }\n}\n/**\r\n * Remove player points that were awarded by a specific financial record\r\n * This is used when rolling back a record that incorrectly awarded points\r\n */ async function removePlayerPointsFromRecord(recordId) {\n    try {\n        var _record_rewards;\n        console.log(\"[removePlayerPointsFromRecord] Removing points for record: \".concat(recordId));\n        // Get the record to find what points were awarded\n        const records = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getFinancialRecords();\n        const record = records.find((r)=>r.id === recordId);\n        if (!record || !((_record_rewards = record.rewards) === null || _record_rewards === void 0 ? void 0 : _record_rewards.points)) {\n            console.log(\"[removePlayerPointsFromRecord] Record \".concat(recordId, \" has no points to remove\"));\n            return;\n        }\n        // Get the main player\n        const mainPlayerId = (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__.getMainPlayerId)();\n        const players = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getPlayers();\n        const mainPlayer = players.find((p)=>p.id === mainPlayerId);\n        if (!mainPlayer) {\n            console.log(\"[removePlayerPointsFromRecord] Main player not found, skipping points removal\");\n            return;\n        }\n        // Check if any points were actually awarded\n        const pointsToRemove = record.rewards.points;\n        const hasPoints = (pointsToRemove.xp || 0) > 0 || (pointsToRemove.rp || 0) > 0 || (pointsToRemove.fp || 0) > 0 || (pointsToRemove.hp || 0) > 0;\n        if (!hasPoints) {\n            console.log(\"[removePlayerPointsFromRecord] No points to remove from record \".concat(recordId));\n            return;\n        }\n        // Remove the points from the player\n        await (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__.removePointsFromPlayer)(mainPlayerId, {\n            xp: pointsToRemove.xp || 0,\n            rp: pointsToRemove.rp || 0,\n            fp: pointsToRemove.fp || 0,\n            hp: pointsToRemove.hp || 0\n        });\n        console.log(\"[removePlayerPointsFromRecord] ✅ Removed points from player: \".concat(JSON.stringify(pointsToRemove)));\n    } catch (error) {\n        console.error(\"[removePlayerPointsFromRecord] ❌ Failed to remove player points for record \".concat(recordId, \":\"), error);\n    }\n}\n/**\r\n * Remove jungle coins that were awarded by a specific financial record\r\n * This is used when rolling back a record that incorrectly awarded jungle coins\r\n */ async function removeJungleCoinsFromRecord(recordId) {\n    try {\n        console.log(\"[removeJungleCoinsFromRecord] Removing jungle coins for record: \".concat(recordId));\n        // Get the record to find what jungle coins were awarded\n        const records = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getFinancialRecords();\n        const record = records.find((r)=>r.id === recordId);\n        if (!record || !record.jungleCoins || record.jungleCoins <= 0) {\n            console.log(\"[removeJungleCoinsFromRecord] Record \".concat(recordId, \" has no jungle coins to remove\"));\n            return;\n        }\n        // Get the main character\n        const mainCharacterId = (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__.getMainCharacterId)();\n        const characters = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getCharacters();\n        const mainCharacter = characters.find((c)=>c.id === mainCharacterId);\n        if (!mainCharacter) {\n            console.log(\"[removeJungleCoinsFromRecord] Main character not found, skipping jungle coins removal\");\n            return;\n        }\n        // Remove the jungle coins from the character\n        await (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_4__.removeJungleCoinsFromCharacter)(mainCharacterId, record.jungleCoins);\n        console.log(\"[removeJungleCoinsFromRecord] ✅ Removed \".concat(record.jungleCoins, \" jungle coins from character\"));\n    } catch (error) {\n        console.error(\"[removeJungleCoinsFromRecord] ❌ Failed to remove jungle coins for record \".concat(recordId, \":\"), error);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./workflows/entities-workflows/financial.workflow.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./workflows/entities-workflows/item.workflow.ts":
/*!*******************************************************!*\
  !*** ./workflows/entities-workflows/item.workflow.ts ***!
  \*******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logItemCreationForItem: function() { return /* binding */ logItemCreationForItem; },\n/* harmony export */   onItemUpsert: function() { return /* binding */ onItemUpsert; },\n/* harmony export */   processItemCreationEffects: function() { return /* binding */ processItemCreationEffects; },\n/* harmony export */   removeItemEffectsOnDelete: function() { return /* binding */ removeItemEffectsOnDelete; },\n/* harmony export */   updateAllItemLogEntries: function() { return /* binding */ updateAllItemLogEntries; },\n/* harmony export */   updateItemLogEntryForItem: function() { return /* binding */ updateItemLogEntryForItem; }\n/* harmony export */ });\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../entities-logging */ \"(app-pages-browser)/./workflows/entities-logging.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(app-pages-browser)/./data-store/effects-registry.ts\");\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/client-api */ \"(app-pages-browser)/./lib/client-api.ts\");\n// workflows/entities-workflows/item.workflow.ts\n// Item-specific workflow with MOVED, SOLD, COLLECTED events\n\n\n\nconst STATE_FIELDS = [\n    \"status\",\n    \"stock\",\n    \"quantitySold\",\n    \"isCollected\"\n];\nconst DESCRIPTIVE_FIELDS = [\n    \"name\",\n    \"description\",\n    \"price\",\n    \"unitCost\",\n    \"additionalCost\",\n    \"value\"\n];\nasync function onItemUpsert(item, previousItem) {\n    // New item creation\n    if (!previousItem) {\n        const effectKey = \"item:\".concat(item.id, \":created\");\n        if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(effectKey)) return;\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"item\", item.id, \"CREATED\", {\n            name: item.name,\n            type: item.type,\n            station: item.station\n        });\n        // Log item creation with source tracking\n        const sourceType = item.sourceTaskId ? \"task\" : item.sourceRecordId ? \"record\" : \"direct\";\n        const sourceId = item.sourceTaskId || item.sourceRecordId || undefined;\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendItemCreationLog)(item, sourceType, sourceId);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(effectKey);\n        return;\n    }\n    // Stock changes - MOVED event\n    const stockChanged = JSON.stringify(previousItem.stock) !== JSON.stringify(item.stock);\n    if (stockChanged) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"item\", item.id, \"MOVED\", {\n            name: item.name,\n            oldStock: previousItem.stock,\n            newStock: item.stock\n        });\n    }\n    // Quantity sold changes - SOLD event\n    if (previousItem.quantitySold !== item.quantitySold && item.quantitySold > previousItem.quantitySold) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"item\", item.id, \"SOLD\", {\n            name: item.name,\n            quantitySold: item.quantitySold,\n            oldQuantitySold: previousItem.quantitySold\n        });\n    }\n    // Collection status - COLLECTED event\n    if (!previousItem.isCollected && item.isCollected) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"item\", item.id, \"COLLECTED\", {\n            name: item.name,\n            collectedAt: new Date().toISOString()\n        });\n    }\n    // Descriptive changes - update in-place\n    for (const field of DESCRIPTIVE_FIELDS){\n        if (previousItem[field] !== item[field]) {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"item\", item.id, field, previousItem[field], item[field]);\n        }\n    }\n}\n/**\r\n * Remove item effects when item is deleted\r\n * Items can have entries in items log and related links\r\n */ async function removeItemEffectsOnDelete(itemId) {\n    try {\n        console.log(\"[removeItemEffectsOnDelete] Starting cleanup for item: \".concat(itemId));\n        // 1. Remove all Links related to this item\n        const itemLinks = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getLinksFor({\n            type: \"item\",\n            id: itemId\n        });\n        console.log(\"[removeItemEffectsOnDelete] Found \".concat(itemLinks.length, \" links to remove\"));\n        for (const link of itemLinks){\n            try {\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLink(link.id);\n                console.log(\"[removeItemEffectsOnDelete] ✅ Removed link: \".concat(link.linkType));\n            } catch (error) {\n                console.error(\"[removeItemEffectsOnDelete] ❌ Failed to remove link \".concat(link.id, \":\"), error);\n            }\n        }\n        // 2. Clear all effects for this item\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffect)(\"item:\".concat(itemId, \":created\"));\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"item\", itemId, \"financialLogged:\");\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"item\", itemId, \"pointsLogged:\");\n        // 3. Remove log entries from items log only (Items don't have financial/player effects)\n        console.log(\"[removeItemEffectsOnDelete] Starting log entry removal for item: \".concat(itemId));\n        const result = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"items\", itemId);\n        if (result.success) {\n            console.log(\"[removeItemEffectsOnDelete] ✅ Item log entries removed successfully for item: \".concat(itemId));\n        } else {\n            console.error(\"[removeItemEffectsOnDelete] Failed to remove item log entries: \".concat(result.message));\n        }\n        console.log(\"[removeItemEffectsOnDelete] ✅ Cleared effects, removed links, and removed log entries for item \".concat(itemId));\n    } catch (error) {\n        console.error(\"Error removing item effects:\", error);\n    }\n}\n/**\r\n * Process item creation effects when item is created\r\n * Handles side effects when item is created directly (not from task/record)\r\n */ async function processItemCreationEffects(item) {\n    console.log(\"[processItemCreationEffects] Processing item creation effects for: \".concat(item.name, \" (\").concat(item.id, \")\"));\n    // Log item creation once (with idempotency)\n    const itemCreated = await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(\"item:\".concat(item.id, \":itemCreated\"));\n    if (!itemCreated) {\n        await logItemCreationForItem(item);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(\"item:\".concat(item.id, \":itemCreated\"));\n    }\n// Items created from Item Modal have NO financial effects\n// Items are just inventory/assets - financial effects come from Tasks/Records\n// This is different from Tasks/Records which have cost/revenue properties\n}\n/**\r\n * Log item creation when item is created directly (not from task/record)\r\n */ async function logItemCreationForItem(item) {\n    try {\n        console.log(\"[logItemCreationForItem] Logging direct item creation: \".concat(item.name, \" (\").concat(item.id, \")\"));\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendItemCreationLog)(item, \"direct\");\n        console.log(\"[logItemCreationForItem] ✅ Direct item creation logged successfully for \".concat(item.name));\n    } catch (error) {\n        console.error(\"Error logging direct item creation:\", error);\n    }\n}\n/**\r\n * Update item log entry when item properties change\r\n * This function updates existing item log entries with new item data\r\n */ async function updateItemLogEntryForItem(item) {\n    let dispatchEvents = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n    try {\n        var _item_stock, _item_stock1, _item_stock2;\n        const updates = {\n            itemName: item.name,\n            itemType: item.type,\n            collection: item.collection,\n            status: item.status,\n            quantity: ((_item_stock = item.stock) === null || _item_stock === void 0 ? void 0 : _item_stock.reduce((sum, stock)=>sum + stock.quantity, 0)) || 0,\n            unitCost: item.unitCost || 0,\n            price: item.price || 0,\n            station: item.station,\n            year: item.year,\n            description: \"Item created directly: \".concat(item.type, \" (\").concat(((_item_stock1 = item.stock) === null || _item_stock1 === void 0 ? void 0 : _item_stock1.reduce((sum, stock)=>sum + stock.quantity, 0)) || 0, \"x)\")\n        };\n        // Update the most recent log entry for this item\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"item\", item.id, \"itemName\", \"\", item.name);\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"item\", item.id, \"itemType\", \"\", item.type);\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"item\", item.id, \"status\", \"\", item.status);\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"item\", item.id, \"quantity\", \"\", ((_item_stock2 = item.stock) === null || _item_stock2 === void 0 ? void 0 : _item_stock2.reduce((sum, stock)=>sum + stock.quantity, 0)) || 0);\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"item\", item.id, \"unitCost\", \"\", item.unitCost || 0);\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"item\", item.id, \"price\", \"\", item.price || 0);\n        console.log(\"[updateItemLogEntryForItem] ✅ Item log entry updated successfully for \".concat(item.name));\n        // Dispatch event to notify frontend of items update\n        if (dispatchEvents && \"object\" !== \"undefined\") {\n            window.dispatchEvent(new CustomEvent(\"itemsUpdated\"));\n        }\n    } catch (error) {\n        console.error(\"Error updating item log entry:\", error);\n    }\n}\n/**\r\n * Update all log entries when item properties change\r\n * This function updates existing log entries across all log types with new item data\r\n */ async function updateAllItemLogEntries(item) {\n    let dispatchEvents = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n    try {\n        console.log(\"[updateAllItemLogEntries] Updating all log entries for item: \".concat(item.name, \" (\").concat(item.id, \")\"));\n        // Update item log entries\n        await updateItemLogEntryForItem(item, false);\n        // Dispatch event to notify frontend of items update\n        if (dispatchEvents && \"object\" !== \"undefined\") {\n            window.dispatchEvent(new CustomEvent(\"itemsUpdated\"));\n        }\n        console.log(\"[updateAllItemLogEntries] ✅ All log entries updated successfully for \".concat(item.name));\n    } catch (error) {\n        console.error(\"Error updating all item log entries:\", error);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3dvcmtmbG93cy9lbnRpdGllcy13b3JrZmxvd3MvaXRlbS53b3JrZmxvdy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxnREFBZ0Q7QUFDaEQsNERBQTREO0FBR3VDO0FBQ007QUFDNUQ7QUFFN0MsTUFBTVEsZUFBZTtJQUFDO0lBQVU7SUFBUztJQUFnQjtDQUFjO0FBQ3ZFLE1BQU1DLHFCQUFxQjtJQUFDO0lBQVE7SUFBZTtJQUFTO0lBQVk7SUFBa0I7Q0FBUTtBQUUzRixlQUFlQyxhQUFhQyxJQUFVLEVBQUVDLFlBQW1CO0lBQ2hFLG9CQUFvQjtJQUNwQixJQUFJLENBQUNBLGNBQWM7UUFDakIsTUFBTUMsWUFBWSxRQUFnQixPQUFSRixLQUFLRyxFQUFFLEVBQUM7UUFDbEMsSUFBSSxNQUFNWCx1RUFBU0EsQ0FBQ1UsWUFBWTtRQUVoQyxNQUFNYixrRUFBZUEsQ0FBQyxRQUFRVyxLQUFLRyxFQUFFLEVBQUUsV0FBVztZQUNoREMsTUFBTUosS0FBS0ksSUFBSTtZQUNmQyxNQUFNTCxLQUFLSyxJQUFJO1lBQ2ZDLFNBQVNOLEtBQUtNLE9BQU87UUFDdkI7UUFFQSx5Q0FBeUM7UUFDekMsTUFBTUMsYUFBYVAsS0FBS1EsWUFBWSxHQUFHLFNBQVNSLEtBQUtTLGNBQWMsR0FBRyxXQUFXO1FBQ2pGLE1BQU1DLFdBQVdWLEtBQUtRLFlBQVksSUFBSVIsS0FBS1MsY0FBYyxJQUFJRTtRQUM3RCxNQUFNcEIsd0VBQXFCQSxDQUFDUyxNQUFNTyxZQUFZRztRQUU5QyxNQUFNakIsd0VBQVVBLENBQUNTO1FBQ2pCO0lBQ0Y7SUFFQSw4QkFBOEI7SUFDOUIsTUFBTVUsZUFBZUMsS0FBS0MsU0FBUyxDQUFDYixhQUFhYyxLQUFLLE1BQU1GLEtBQUtDLFNBQVMsQ0FBQ2QsS0FBS2UsS0FBSztJQUNyRixJQUFJSCxjQUFjO1FBQ2hCLE1BQU12QixrRUFBZUEsQ0FBQyxRQUFRVyxLQUFLRyxFQUFFLEVBQUUsU0FBUztZQUM5Q0MsTUFBTUosS0FBS0ksSUFBSTtZQUNmWSxVQUFVZixhQUFhYyxLQUFLO1lBQzVCRSxVQUFVakIsS0FBS2UsS0FBSztRQUN0QjtJQUNGO0lBRUEscUNBQXFDO0lBQ3JDLElBQUlkLGFBQWFpQixZQUFZLEtBQUtsQixLQUFLa0IsWUFBWSxJQUFJbEIsS0FBS2tCLFlBQVksR0FBR2pCLGFBQWFpQixZQUFZLEVBQUU7UUFDcEcsTUFBTTdCLGtFQUFlQSxDQUFDLFFBQVFXLEtBQUtHLEVBQUUsRUFBRSxRQUFRO1lBQzdDQyxNQUFNSixLQUFLSSxJQUFJO1lBQ2ZjLGNBQWNsQixLQUFLa0IsWUFBWTtZQUMvQkMsaUJBQWlCbEIsYUFBYWlCLFlBQVk7UUFDNUM7SUFDRjtJQUVBLHNDQUFzQztJQUN0QyxJQUFJLENBQUNqQixhQUFhbUIsV0FBVyxJQUFJcEIsS0FBS29CLFdBQVcsRUFBRTtRQUNqRCxNQUFNL0Isa0VBQWVBLENBQUMsUUFBUVcsS0FBS0csRUFBRSxFQUFFLGFBQWE7WUFDbERDLE1BQU1KLEtBQUtJLElBQUk7WUFDZmlCLGFBQWEsSUFBSUMsT0FBT0MsV0FBVztRQUNyQztJQUNGO0lBRUEsd0NBQXdDO0lBQ3hDLEtBQUssTUFBTUMsU0FBUzFCLG1CQUFvQjtRQUN0QyxJQUFJLFlBQXFCLENBQUMwQixNQUFNLEtBQUssSUFBYSxDQUFDQSxNQUFNLEVBQUU7WUFDekQsTUFBTWxDLHVFQUFvQkEsQ0FBQyxRQUFRVSxLQUFLRyxFQUFFLEVBQUVxQixPQUFPLFlBQXFCLENBQUNBLE1BQU0sRUFBRSxJQUFhLENBQUNBLE1BQU07UUFDdkc7SUFDRjtBQUNGO0FBRUE7OztDQUdDLEdBQ00sZUFBZUMsMEJBQTBCQyxNQUFjO0lBQzVELElBQUk7UUFDRkMsUUFBUUMsR0FBRyxDQUFDLDBEQUFpRSxPQUFQRjtRQUV0RSwyQ0FBMkM7UUFDM0MsTUFBTUcsWUFBWSxNQUFNakMsc0RBQVNBLENBQUNrQyxXQUFXLENBQUM7WUFBRXpCLE1BQU07WUFBUUYsSUFBSXVCO1FBQU87UUFDekVDLFFBQVFDLEdBQUcsQ0FBQyxxQ0FBc0QsT0FBakJDLFVBQVVFLE1BQU0sRUFBQztRQUVsRSxLQUFLLE1BQU1DLFFBQVFILFVBQVc7WUFDNUIsSUFBSTtnQkFDRixNQUFNakMsc0RBQVNBLENBQUNxQyxVQUFVLENBQUNELEtBQUs3QixFQUFFO2dCQUNsQ3dCLFFBQVFDLEdBQUcsQ0FBQywrQ0FBNkQsT0FBZEksS0FBS0UsUUFBUTtZQUMxRSxFQUFFLE9BQU9DLE9BQU87Z0JBQ2RSLFFBQVFRLEtBQUssQ0FBQyx1REFBK0QsT0FBUkgsS0FBSzdCLEVBQUUsRUFBQyxNQUFJZ0M7WUFDbkY7UUFDRjtRQUVBLHFDQUFxQztRQUNyQyxNQUFNekMseUVBQVdBLENBQUMsUUFBZSxPQUFQZ0MsUUFBTztRQUNqQyxNQUFNL0Isa0ZBQW9CQSxDQUFDLFFBQVErQixRQUFRO1FBQzNDLE1BQU0vQixrRkFBb0JBLENBQUMsUUFBUStCLFFBQVE7UUFFM0Msd0ZBQXdGO1FBQ3hGQyxRQUFRQyxHQUFHLENBQUMsb0VBQTJFLE9BQVBGO1FBRWhGLE1BQU1VLFNBQVMsTUFBTXhDLHNEQUFTQSxDQUFDeUMsY0FBYyxDQUFDLFNBQVNYO1FBRXZELElBQUlVLE9BQU9FLE9BQU8sRUFBRTtZQUNsQlgsUUFBUUMsR0FBRyxDQUFDLGlGQUF3RixPQUFQRjtRQUMvRixPQUFPO1lBQ0xDLFFBQVFRLEtBQUssQ0FBQyxrRUFBaUYsT0FBZkMsT0FBT0csT0FBTztRQUNoRztRQUVBWixRQUFRQyxHQUFHLENBQUMsa0dBQXlHLE9BQVBGO0lBQ2hILEVBQUUsT0FBT1MsT0FBTztRQUNkUixRQUFRUSxLQUFLLENBQUMsZ0NBQWdDQTtJQUNoRDtBQUNGO0FBRUE7OztDQUdDLEdBQ00sZUFBZUssMkJBQTJCeEMsSUFBVTtJQUN6RDJCLFFBQVFDLEdBQUcsQ0FBQyxzRUFBb0Y1QixPQUFkQSxLQUFLSSxJQUFJLEVBQUMsTUFBWSxPQUFSSixLQUFLRyxFQUFFLEVBQUM7SUFFeEcsNENBQTRDO0lBQzVDLE1BQU1zQyxjQUFjLE1BQU1qRCx1RUFBU0EsQ0FBQyxRQUFnQixPQUFSUSxLQUFLRyxFQUFFLEVBQUM7SUFDcEQsSUFBSSxDQUFDc0MsYUFBYTtRQUNoQixNQUFNQyx1QkFBdUIxQztRQUM3QixNQUFNUCx3RUFBVUEsQ0FBQyxRQUFnQixPQUFSTyxLQUFLRyxFQUFFLEVBQUM7SUFDbkM7QUFFQSwwREFBMEQ7QUFDMUQsOEVBQThFO0FBQzlFLDBFQUEwRTtBQUM1RTtBQUVBOztDQUVDLEdBQ00sZUFBZXVDLHVCQUF1QjFDLElBQVU7SUFDckQsSUFBSTtRQUNGMkIsUUFBUUMsR0FBRyxDQUFDLDBEQUF3RTVCLE9BQWRBLEtBQUtJLElBQUksRUFBQyxNQUFZLE9BQVJKLEtBQUtHLEVBQUUsRUFBQztRQUU1RixNQUFNWix3RUFBcUJBLENBQUNTLE1BQU07UUFDbEMyQixRQUFRQyxHQUFHLENBQUMsMkVBQXFGLE9BQVY1QixLQUFLSSxJQUFJO0lBQ2xHLEVBQUUsT0FBTytCLE9BQU87UUFDZFIsUUFBUVEsS0FBSyxDQUFDLHVDQUF1Q0E7SUFDdkQ7QUFDRjtBQUVBOzs7Q0FHQyxHQUNNLGVBQWVRLDBCQUEwQjNDLElBQVU7UUFBRTRDLGlCQUFBQSxpRUFBMEI7SUFDcEYsSUFBSTtZQU1VNUMsYUFLMkNBLGNBT0tBO1FBakI1RCxNQUFNNkMsVUFBVTtZQUNkQyxVQUFVOUMsS0FBS0ksSUFBSTtZQUNuQjJDLFVBQVUvQyxLQUFLSyxJQUFJO1lBQ25CMkMsWUFBWWhELEtBQUtnRCxVQUFVO1lBQzNCQyxRQUFRakQsS0FBS2lELE1BQU07WUFDbkJDLFVBQVVsRCxFQUFBQSxjQUFBQSxLQUFLZSxLQUFLLGNBQVZmLGtDQUFBQSxZQUFZbUQsTUFBTSxDQUFDLENBQUNDLEtBQWFyQyxRQUFlcUMsTUFBTXJDLE1BQU1tQyxRQUFRLEVBQUUsT0FBTTtZQUN0RkcsVUFBVXJELEtBQUtxRCxRQUFRLElBQUk7WUFDM0JDLE9BQU90RCxLQUFLc0QsS0FBSyxJQUFJO1lBQ3JCaEQsU0FBU04sS0FBS00sT0FBTztZQUNyQmlELE1BQU12RCxLQUFLdUQsSUFBSTtZQUNmQyxhQUFhLDBCQUF3Q3hELE9BQWRBLEtBQUtLLElBQUksRUFBQyxNQUFrRixPQUE5RUwsRUFBQUEsZUFBQUEsS0FBS2UsS0FBSyxjQUFWZixtQ0FBQUEsYUFBWW1ELE1BQU0sQ0FBQyxDQUFDQyxLQUFhckMsUUFBZXFDLE1BQU1yQyxNQUFNbUMsUUFBUSxFQUFFLE9BQU0sR0FBRTtRQUNySTtRQUVBLGlEQUFpRDtRQUNqRCxNQUFNNUQsdUVBQW9CQSxDQUFDLFFBQVFVLEtBQUtHLEVBQUUsRUFBRSxZQUFZLElBQUlILEtBQUtJLElBQUk7UUFDckUsTUFBTWQsdUVBQW9CQSxDQUFDLFFBQVFVLEtBQUtHLEVBQUUsRUFBRSxZQUFZLElBQUlILEtBQUtLLElBQUk7UUFDckUsTUFBTWYsdUVBQW9CQSxDQUFDLFFBQVFVLEtBQUtHLEVBQUUsRUFBRSxVQUFVLElBQUlILEtBQUtpRCxNQUFNO1FBQ3JFLE1BQU0zRCx1RUFBb0JBLENBQUMsUUFBUVUsS0FBS0csRUFBRSxFQUFFLFlBQVksSUFBSUgsRUFBQUEsZUFBQUEsS0FBS2UsS0FBSyxjQUFWZixtQ0FBQUEsYUFBWW1ELE1BQU0sQ0FBQyxDQUFDQyxLQUFhckMsUUFBZXFDLE1BQU1yQyxNQUFNbUMsUUFBUSxFQUFFLE9BQU07UUFDeEksTUFBTTVELHVFQUFvQkEsQ0FBQyxRQUFRVSxLQUFLRyxFQUFFLEVBQUUsWUFBWSxJQUFJSCxLQUFLcUQsUUFBUSxJQUFJO1FBQzdFLE1BQU0vRCx1RUFBb0JBLENBQUMsUUFBUVUsS0FBS0csRUFBRSxFQUFFLFNBQVMsSUFBSUgsS0FBS3NELEtBQUssSUFBSTtRQUV2RTNCLFFBQVFDLEdBQUcsQ0FBQyx5RUFBbUYsT0FBVjVCLEtBQUtJLElBQUk7UUFFOUYsb0RBQW9EO1FBQ3BELElBQUl3QyxrQkFBa0IsYUFBa0IsYUFBYTtZQUNuRGEsT0FBT0MsYUFBYSxDQUFDLElBQUlDLFlBQVk7UUFDdkM7SUFDRixFQUFFLE9BQU94QixPQUFPO1FBQ2RSLFFBQVFRLEtBQUssQ0FBQyxrQ0FBa0NBO0lBQ2xEO0FBQ0Y7QUFFQTs7O0NBR0MsR0FDTSxlQUFleUIsd0JBQXdCNUQsSUFBVTtRQUFFNEMsaUJBQUFBLGlFQUEwQjtJQUNsRixJQUFJO1FBQ0ZqQixRQUFRQyxHQUFHLENBQUMsZ0VBQThFNUIsT0FBZEEsS0FBS0ksSUFBSSxFQUFDLE1BQVksT0FBUkosS0FBS0csRUFBRSxFQUFDO1FBRWxHLDBCQUEwQjtRQUMxQixNQUFNd0MsMEJBQTBCM0MsTUFBTTtRQUV0QyxvREFBb0Q7UUFDcEQsSUFBSTRDLGtCQUFrQixhQUFrQixhQUFhO1lBQ25EYSxPQUFPQyxhQUFhLENBQUMsSUFBSUMsWUFBWTtRQUN2QztRQUVBaEMsUUFBUUMsR0FBRyxDQUFDLHdFQUFrRixPQUFWNUIsS0FBS0ksSUFBSTtJQUMvRixFQUFFLE9BQU8rQixPQUFPO1FBQ2RSLFFBQVFRLEtBQUssQ0FBQyx3Q0FBd0NBO0lBQ3hEO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vd29ya2Zsb3dzL2VudGl0aWVzLXdvcmtmbG93cy9pdGVtLndvcmtmbG93LnRzPzU1M2MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gd29ya2Zsb3dzL2VudGl0aWVzLXdvcmtmbG93cy9pdGVtLndvcmtmbG93LnRzXHJcbi8vIEl0ZW0tc3BlY2lmaWMgd29ya2Zsb3cgd2l0aCBNT1ZFRCwgU09MRCwgQ09MTEVDVEVEIGV2ZW50c1xyXG5cclxuaW1wb3J0IHR5cGUgeyBJdGVtIH0gZnJvbSAnQC90eXBlcy9lbnRpdGllcyc7XHJcbmltcG9ydCB7IGFwcGVuZEVudGl0eUxvZywgdXBkYXRlRW50aXR5TG9nRmllbGQsIGFwcGVuZEl0ZW1DcmVhdGlvbkxvZyB9IGZyb20gJy4uL2VudGl0aWVzLWxvZ2dpbmcnO1xyXG5pbXBvcnQgeyBoYXNFZmZlY3QsIG1hcmtFZmZlY3QsIGNsZWFyRWZmZWN0LCBjbGVhckVmZmVjdHNCeVByZWZpeCB9IGZyb20gJ0AvZGF0YS1zdG9yZS9lZmZlY3RzLXJlZ2lzdHJ5JztcclxuaW1wb3J0IHsgQ2xpZW50QVBJIH0gZnJvbSAnQC9saWIvY2xpZW50LWFwaSc7XHJcblxyXG5jb25zdCBTVEFURV9GSUVMRFMgPSBbJ3N0YXR1cycsICdzdG9jaycsICdxdWFudGl0eVNvbGQnLCAnaXNDb2xsZWN0ZWQnXTtcclxuY29uc3QgREVTQ1JJUFRJVkVfRklFTERTID0gWyduYW1lJywgJ2Rlc2NyaXB0aW9uJywgJ3ByaWNlJywgJ3VuaXRDb3N0JywgJ2FkZGl0aW9uYWxDb3N0JywgJ3ZhbHVlJ107XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gb25JdGVtVXBzZXJ0KGl0ZW06IEl0ZW0sIHByZXZpb3VzSXRlbT86IEl0ZW0pOiBQcm9taXNlPHZvaWQ+IHtcclxuICAvLyBOZXcgaXRlbSBjcmVhdGlvblxyXG4gIGlmICghcHJldmlvdXNJdGVtKSB7XHJcbiAgICBjb25zdCBlZmZlY3RLZXkgPSBgaXRlbToke2l0ZW0uaWR9OmNyZWF0ZWRgO1xyXG4gICAgaWYgKGF3YWl0IGhhc0VmZmVjdChlZmZlY3RLZXkpKSByZXR1cm47XHJcbiAgICBcclxuICAgIGF3YWl0IGFwcGVuZEVudGl0eUxvZygnaXRlbScsIGl0ZW0uaWQsICdDUkVBVEVEJywgeyBcclxuICAgICAgbmFtZTogaXRlbS5uYW1lLCBcclxuICAgICAgdHlwZTogaXRlbS50eXBlLFxyXG4gICAgICBzdGF0aW9uOiBpdGVtLnN0YXRpb24gXHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgLy8gTG9nIGl0ZW0gY3JlYXRpb24gd2l0aCBzb3VyY2UgdHJhY2tpbmdcclxuICAgIGNvbnN0IHNvdXJjZVR5cGUgPSBpdGVtLnNvdXJjZVRhc2tJZCA/ICd0YXNrJyA6IGl0ZW0uc291cmNlUmVjb3JkSWQgPyAncmVjb3JkJyA6ICdkaXJlY3QnO1xyXG4gICAgY29uc3Qgc291cmNlSWQgPSBpdGVtLnNvdXJjZVRhc2tJZCB8fCBpdGVtLnNvdXJjZVJlY29yZElkIHx8IHVuZGVmaW5lZDtcclxuICAgIGF3YWl0IGFwcGVuZEl0ZW1DcmVhdGlvbkxvZyhpdGVtLCBzb3VyY2VUeXBlLCBzb3VyY2VJZCk7XHJcbiAgICBcclxuICAgIGF3YWl0IG1hcmtFZmZlY3QoZWZmZWN0S2V5KTtcclxuICAgIHJldHVybjtcclxuICB9XHJcbiAgXHJcbiAgLy8gU3RvY2sgY2hhbmdlcyAtIE1PVkVEIGV2ZW50XHJcbiAgY29uc3Qgc3RvY2tDaGFuZ2VkID0gSlNPTi5zdHJpbmdpZnkocHJldmlvdXNJdGVtLnN0b2NrKSAhPT0gSlNPTi5zdHJpbmdpZnkoaXRlbS5zdG9jayk7XHJcbiAgaWYgKHN0b2NrQ2hhbmdlZCkge1xyXG4gICAgYXdhaXQgYXBwZW5kRW50aXR5TG9nKCdpdGVtJywgaXRlbS5pZCwgJ01PVkVEJywge1xyXG4gICAgICBuYW1lOiBpdGVtLm5hbWUsXHJcbiAgICAgIG9sZFN0b2NrOiBwcmV2aW91c0l0ZW0uc3RvY2ssXHJcbiAgICAgIG5ld1N0b2NrOiBpdGVtLnN0b2NrXHJcbiAgICB9KTtcclxuICB9XHJcbiAgXHJcbiAgLy8gUXVhbnRpdHkgc29sZCBjaGFuZ2VzIC0gU09MRCBldmVudFxyXG4gIGlmIChwcmV2aW91c0l0ZW0ucXVhbnRpdHlTb2xkICE9PSBpdGVtLnF1YW50aXR5U29sZCAmJiBpdGVtLnF1YW50aXR5U29sZCA+IHByZXZpb3VzSXRlbS5xdWFudGl0eVNvbGQpIHtcclxuICAgIGF3YWl0IGFwcGVuZEVudGl0eUxvZygnaXRlbScsIGl0ZW0uaWQsICdTT0xEJywge1xyXG4gICAgICBuYW1lOiBpdGVtLm5hbWUsXHJcbiAgICAgIHF1YW50aXR5U29sZDogaXRlbS5xdWFudGl0eVNvbGQsXHJcbiAgICAgIG9sZFF1YW50aXR5U29sZDogcHJldmlvdXNJdGVtLnF1YW50aXR5U29sZFxyXG4gICAgfSk7XHJcbiAgfVxyXG4gIFxyXG4gIC8vIENvbGxlY3Rpb24gc3RhdHVzIC0gQ09MTEVDVEVEIGV2ZW50XHJcbiAgaWYgKCFwcmV2aW91c0l0ZW0uaXNDb2xsZWN0ZWQgJiYgaXRlbS5pc0NvbGxlY3RlZCkge1xyXG4gICAgYXdhaXQgYXBwZW5kRW50aXR5TG9nKCdpdGVtJywgaXRlbS5pZCwgJ0NPTExFQ1RFRCcsIHtcclxuICAgICAgbmFtZTogaXRlbS5uYW1lLFxyXG4gICAgICBjb2xsZWN0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXHJcbiAgICB9KTtcclxuICB9XHJcbiAgXHJcbiAgLy8gRGVzY3JpcHRpdmUgY2hhbmdlcyAtIHVwZGF0ZSBpbi1wbGFjZVxyXG4gIGZvciAoY29uc3QgZmllbGQgb2YgREVTQ1JJUFRJVkVfRklFTERTKSB7XHJcbiAgICBpZiAoKHByZXZpb3VzSXRlbSBhcyBhbnkpW2ZpZWxkXSAhPT0gKGl0ZW0gYXMgYW55KVtmaWVsZF0pIHtcclxuICAgICAgYXdhaXQgdXBkYXRlRW50aXR5TG9nRmllbGQoJ2l0ZW0nLCBpdGVtLmlkLCBmaWVsZCwgKHByZXZpb3VzSXRlbSBhcyBhbnkpW2ZpZWxkXSwgKGl0ZW0gYXMgYW55KVtmaWVsZF0pO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSBpdGVtIGVmZmVjdHMgd2hlbiBpdGVtIGlzIGRlbGV0ZWRcclxuICogSXRlbXMgY2FuIGhhdmUgZW50cmllcyBpbiBpdGVtcyBsb2cgYW5kIHJlbGF0ZWQgbGlua3NcclxuICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZW1vdmVJdGVtRWZmZWN0c09uRGVsZXRlKGl0ZW1JZDogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnNvbGUubG9nKGBbcmVtb3ZlSXRlbUVmZmVjdHNPbkRlbGV0ZV0gU3RhcnRpbmcgY2xlYW51cCBmb3IgaXRlbTogJHtpdGVtSWR9YCk7XHJcbiAgICBcclxuICAgIC8vIDEuIFJlbW92ZSBhbGwgTGlua3MgcmVsYXRlZCB0byB0aGlzIGl0ZW1cclxuICAgIGNvbnN0IGl0ZW1MaW5rcyA9IGF3YWl0IENsaWVudEFQSS5nZXRMaW5rc0Zvcih7IHR5cGU6ICdpdGVtJywgaWQ6IGl0ZW1JZCB9KTtcclxuICAgIGNvbnNvbGUubG9nKGBbcmVtb3ZlSXRlbUVmZmVjdHNPbkRlbGV0ZV0gRm91bmQgJHtpdGVtTGlua3MubGVuZ3RofSBsaW5rcyB0byByZW1vdmVgKTtcclxuICAgIFxyXG4gICAgZm9yIChjb25zdCBsaW5rIG9mIGl0ZW1MaW5rcykge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGF3YWl0IENsaWVudEFQSS5yZW1vdmVMaW5rKGxpbmsuaWQpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGBbcmVtb3ZlSXRlbUVmZmVjdHNPbkRlbGV0ZV0g4pyFIFJlbW92ZWQgbGluazogJHtsaW5rLmxpbmtUeXBlfWApO1xyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYFtyZW1vdmVJdGVtRWZmZWN0c09uRGVsZXRlXSDinYwgRmFpbGVkIHRvIHJlbW92ZSBsaW5rICR7bGluay5pZH06YCwgZXJyb3IpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIDIuIENsZWFyIGFsbCBlZmZlY3RzIGZvciB0aGlzIGl0ZW1cclxuICAgIGF3YWl0IGNsZWFyRWZmZWN0KGBpdGVtOiR7aXRlbUlkfTpjcmVhdGVkYCk7XHJcbiAgICBhd2FpdCBjbGVhckVmZmVjdHNCeVByZWZpeCgnaXRlbScsIGl0ZW1JZCwgJ2ZpbmFuY2lhbExvZ2dlZDonKTtcclxuICAgIGF3YWl0IGNsZWFyRWZmZWN0c0J5UHJlZml4KCdpdGVtJywgaXRlbUlkLCAncG9pbnRzTG9nZ2VkOicpO1xyXG4gICAgXHJcbiAgICAvLyAzLiBSZW1vdmUgbG9nIGVudHJpZXMgZnJvbSBpdGVtcyBsb2cgb25seSAoSXRlbXMgZG9uJ3QgaGF2ZSBmaW5hbmNpYWwvcGxheWVyIGVmZmVjdHMpXHJcbiAgICBjb25zb2xlLmxvZyhgW3JlbW92ZUl0ZW1FZmZlY3RzT25EZWxldGVdIFN0YXJ0aW5nIGxvZyBlbnRyeSByZW1vdmFsIGZvciBpdGVtOiAke2l0ZW1JZH1gKTtcclxuICAgIFxyXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgQ2xpZW50QVBJLnJlbW92ZUxvZ0VudHJ5KCdpdGVtcycsIGl0ZW1JZCk7XHJcbiAgICBcclxuICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xyXG4gICAgICBjb25zb2xlLmxvZyhgW3JlbW92ZUl0ZW1FZmZlY3RzT25EZWxldGVdIOKchSBJdGVtIGxvZyBlbnRyaWVzIHJlbW92ZWQgc3VjY2Vzc2Z1bGx5IGZvciBpdGVtOiAke2l0ZW1JZH1gKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoYFtyZW1vdmVJdGVtRWZmZWN0c09uRGVsZXRlXSBGYWlsZWQgdG8gcmVtb3ZlIGl0ZW0gbG9nIGVudHJpZXM6ICR7cmVzdWx0Lm1lc3NhZ2V9YCk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGNvbnNvbGUubG9nKGBbcmVtb3ZlSXRlbUVmZmVjdHNPbkRlbGV0ZV0g4pyFIENsZWFyZWQgZWZmZWN0cywgcmVtb3ZlZCBsaW5rcywgYW5kIHJlbW92ZWQgbG9nIGVudHJpZXMgZm9yIGl0ZW0gJHtpdGVtSWR9YCk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHJlbW92aW5nIGl0ZW0gZWZmZWN0czonLCBlcnJvcik7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogUHJvY2VzcyBpdGVtIGNyZWF0aW9uIGVmZmVjdHMgd2hlbiBpdGVtIGlzIGNyZWF0ZWRcclxuICogSGFuZGxlcyBzaWRlIGVmZmVjdHMgd2hlbiBpdGVtIGlzIGNyZWF0ZWQgZGlyZWN0bHkgKG5vdCBmcm9tIHRhc2svcmVjb3JkKVxyXG4gKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByb2Nlc3NJdGVtQ3JlYXRpb25FZmZlY3RzKGl0ZW06IEl0ZW0pOiBQcm9taXNlPHZvaWQ+IHtcclxuICBjb25zb2xlLmxvZyhgW3Byb2Nlc3NJdGVtQ3JlYXRpb25FZmZlY3RzXSBQcm9jZXNzaW5nIGl0ZW0gY3JlYXRpb24gZWZmZWN0cyBmb3I6ICR7aXRlbS5uYW1lfSAoJHtpdGVtLmlkfSlgKTtcclxuICBcclxuICAvLyBMb2cgaXRlbSBjcmVhdGlvbiBvbmNlICh3aXRoIGlkZW1wb3RlbmN5KVxyXG4gIGNvbnN0IGl0ZW1DcmVhdGVkID0gYXdhaXQgaGFzRWZmZWN0KGBpdGVtOiR7aXRlbS5pZH06aXRlbUNyZWF0ZWRgKTtcclxuICBpZiAoIWl0ZW1DcmVhdGVkKSB7XHJcbiAgICBhd2FpdCBsb2dJdGVtQ3JlYXRpb25Gb3JJdGVtKGl0ZW0pO1xyXG4gICAgYXdhaXQgbWFya0VmZmVjdChgaXRlbToke2l0ZW0uaWR9Oml0ZW1DcmVhdGVkYCk7XHJcbiAgfVxyXG5cclxuICAvLyBJdGVtcyBjcmVhdGVkIGZyb20gSXRlbSBNb2RhbCBoYXZlIE5PIGZpbmFuY2lhbCBlZmZlY3RzXHJcbiAgLy8gSXRlbXMgYXJlIGp1c3QgaW52ZW50b3J5L2Fzc2V0cyAtIGZpbmFuY2lhbCBlZmZlY3RzIGNvbWUgZnJvbSBUYXNrcy9SZWNvcmRzXHJcbiAgLy8gVGhpcyBpcyBkaWZmZXJlbnQgZnJvbSBUYXNrcy9SZWNvcmRzIHdoaWNoIGhhdmUgY29zdC9yZXZlbnVlIHByb3BlcnRpZXNcclxufVxyXG5cclxuLyoqXHJcbiAqIExvZyBpdGVtIGNyZWF0aW9uIHdoZW4gaXRlbSBpcyBjcmVhdGVkIGRpcmVjdGx5IChub3QgZnJvbSB0YXNrL3JlY29yZClcclxuICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsb2dJdGVtQ3JlYXRpb25Gb3JJdGVtKGl0ZW06IEl0ZW0pOiBQcm9taXNlPHZvaWQ+IHtcclxuICB0cnkge1xyXG4gICAgY29uc29sZS5sb2coYFtsb2dJdGVtQ3JlYXRpb25Gb3JJdGVtXSBMb2dnaW5nIGRpcmVjdCBpdGVtIGNyZWF0aW9uOiAke2l0ZW0ubmFtZX0gKCR7aXRlbS5pZH0pYCk7XHJcbiAgICBcclxuICAgIGF3YWl0IGFwcGVuZEl0ZW1DcmVhdGlvbkxvZyhpdGVtLCAnZGlyZWN0Jyk7XHJcbiAgICBjb25zb2xlLmxvZyhgW2xvZ0l0ZW1DcmVhdGlvbkZvckl0ZW1dIOKchSBEaXJlY3QgaXRlbSBjcmVhdGlvbiBsb2dnZWQgc3VjY2Vzc2Z1bGx5IGZvciAke2l0ZW0ubmFtZX1gKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgbG9nZ2luZyBkaXJlY3QgaXRlbSBjcmVhdGlvbjonLCBlcnJvcik7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogVXBkYXRlIGl0ZW0gbG9nIGVudHJ5IHdoZW4gaXRlbSBwcm9wZXJ0aWVzIGNoYW5nZVxyXG4gKiBUaGlzIGZ1bmN0aW9uIHVwZGF0ZXMgZXhpc3RpbmcgaXRlbSBsb2cgZW50cmllcyB3aXRoIG5ldyBpdGVtIGRhdGFcclxuICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVJdGVtTG9nRW50cnlGb3JJdGVtKGl0ZW06IEl0ZW0sIGRpc3BhdGNoRXZlbnRzOiBib29sZWFuID0gdHJ1ZSk6IFByb21pc2U8dm9pZD4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB1cGRhdGVzID0ge1xyXG4gICAgICBpdGVtTmFtZTogaXRlbS5uYW1lLFxyXG4gICAgICBpdGVtVHlwZTogaXRlbS50eXBlLFxyXG4gICAgICBjb2xsZWN0aW9uOiBpdGVtLmNvbGxlY3Rpb24sXHJcbiAgICAgIHN0YXR1czogaXRlbS5zdGF0dXMsXHJcbiAgICAgIHF1YW50aXR5OiBpdGVtLnN0b2NrPy5yZWR1Y2UoKHN1bTogbnVtYmVyLCBzdG9jazogYW55KSA9PiBzdW0gKyBzdG9jay5xdWFudGl0eSwgMCkgfHwgMCxcclxuICAgICAgdW5pdENvc3Q6IGl0ZW0udW5pdENvc3QgfHwgMCxcclxuICAgICAgcHJpY2U6IGl0ZW0ucHJpY2UgfHwgMCxcclxuICAgICAgc3RhdGlvbjogaXRlbS5zdGF0aW9uLFxyXG4gICAgICB5ZWFyOiBpdGVtLnllYXIsXHJcbiAgICAgIGRlc2NyaXB0aW9uOiBgSXRlbSBjcmVhdGVkIGRpcmVjdGx5OiAke2l0ZW0udHlwZX0gKCR7aXRlbS5zdG9jaz8ucmVkdWNlKChzdW06IG51bWJlciwgc3RvY2s6IGFueSkgPT4gc3VtICsgc3RvY2sucXVhbnRpdHksIDApIHx8IDB9eClgXHJcbiAgICB9O1xyXG5cclxuICAgIC8vIFVwZGF0ZSB0aGUgbW9zdCByZWNlbnQgbG9nIGVudHJ5IGZvciB0aGlzIGl0ZW1cclxuICAgIGF3YWl0IHVwZGF0ZUVudGl0eUxvZ0ZpZWxkKCdpdGVtJywgaXRlbS5pZCwgJ2l0ZW1OYW1lJywgJycsIGl0ZW0ubmFtZSk7XHJcbiAgICBhd2FpdCB1cGRhdGVFbnRpdHlMb2dGaWVsZCgnaXRlbScsIGl0ZW0uaWQsICdpdGVtVHlwZScsICcnLCBpdGVtLnR5cGUpO1xyXG4gICAgYXdhaXQgdXBkYXRlRW50aXR5TG9nRmllbGQoJ2l0ZW0nLCBpdGVtLmlkLCAnc3RhdHVzJywgJycsIGl0ZW0uc3RhdHVzKTtcclxuICAgIGF3YWl0IHVwZGF0ZUVudGl0eUxvZ0ZpZWxkKCdpdGVtJywgaXRlbS5pZCwgJ3F1YW50aXR5JywgJycsIGl0ZW0uc3RvY2s/LnJlZHVjZSgoc3VtOiBudW1iZXIsIHN0b2NrOiBhbnkpID0+IHN1bSArIHN0b2NrLnF1YW50aXR5LCAwKSB8fCAwKTtcclxuICAgIGF3YWl0IHVwZGF0ZUVudGl0eUxvZ0ZpZWxkKCdpdGVtJywgaXRlbS5pZCwgJ3VuaXRDb3N0JywgJycsIGl0ZW0udW5pdENvc3QgfHwgMCk7XHJcbiAgICBhd2FpdCB1cGRhdGVFbnRpdHlMb2dGaWVsZCgnaXRlbScsIGl0ZW0uaWQsICdwcmljZScsICcnLCBpdGVtLnByaWNlIHx8IDApO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKGBbdXBkYXRlSXRlbUxvZ0VudHJ5Rm9ySXRlbV0g4pyFIEl0ZW0gbG9nIGVudHJ5IHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5IGZvciAke2l0ZW0ubmFtZX1gKTtcclxuICAgIFxyXG4gICAgLy8gRGlzcGF0Y2ggZXZlbnQgdG8gbm90aWZ5IGZyb250ZW5kIG9mIGl0ZW1zIHVwZGF0ZVxyXG4gICAgaWYgKGRpc3BhdGNoRXZlbnRzICYmIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgnaXRlbXNVcGRhdGVkJykpO1xyXG4gICAgfVxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciB1cGRhdGluZyBpdGVtIGxvZyBlbnRyeTonLCBlcnJvcik7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogVXBkYXRlIGFsbCBsb2cgZW50cmllcyB3aGVuIGl0ZW0gcHJvcGVydGllcyBjaGFuZ2VcclxuICogVGhpcyBmdW5jdGlvbiB1cGRhdGVzIGV4aXN0aW5nIGxvZyBlbnRyaWVzIGFjcm9zcyBhbGwgbG9nIHR5cGVzIHdpdGggbmV3IGl0ZW0gZGF0YVxyXG4gKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZUFsbEl0ZW1Mb2dFbnRyaWVzKGl0ZW06IEl0ZW0sIGRpc3BhdGNoRXZlbnRzOiBib29sZWFuID0gdHJ1ZSk6IFByb21pc2U8dm9pZD4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zb2xlLmxvZyhgW3VwZGF0ZUFsbEl0ZW1Mb2dFbnRyaWVzXSBVcGRhdGluZyBhbGwgbG9nIGVudHJpZXMgZm9yIGl0ZW06ICR7aXRlbS5uYW1lfSAoJHtpdGVtLmlkfSlgKTtcclxuICAgIFxyXG4gICAgLy8gVXBkYXRlIGl0ZW0gbG9nIGVudHJpZXNcclxuICAgIGF3YWl0IHVwZGF0ZUl0ZW1Mb2dFbnRyeUZvckl0ZW0oaXRlbSwgZmFsc2UpO1xyXG4gICAgXHJcbiAgICAvLyBEaXNwYXRjaCBldmVudCB0byBub3RpZnkgZnJvbnRlbmQgb2YgaXRlbXMgdXBkYXRlXHJcbiAgICBpZiAoZGlzcGF0Y2hFdmVudHMgJiYgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgd2luZG93LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdpdGVtc1VwZGF0ZWQnKSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGNvbnNvbGUubG9nKGBbdXBkYXRlQWxsSXRlbUxvZ0VudHJpZXNdIOKchSBBbGwgbG9nIGVudHJpZXMgdXBkYXRlZCBzdWNjZXNzZnVsbHkgZm9yICR7aXRlbS5uYW1lfWApO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciB1cGRhdGluZyBhbGwgaXRlbSBsb2cgZW50cmllczonLCBlcnJvcik7XHJcbiAgfVxyXG59Il0sIm5hbWVzIjpbImFwcGVuZEVudGl0eUxvZyIsInVwZGF0ZUVudGl0eUxvZ0ZpZWxkIiwiYXBwZW5kSXRlbUNyZWF0aW9uTG9nIiwiaGFzRWZmZWN0IiwibWFya0VmZmVjdCIsImNsZWFyRWZmZWN0IiwiY2xlYXJFZmZlY3RzQnlQcmVmaXgiLCJDbGllbnRBUEkiLCJTVEFURV9GSUVMRFMiLCJERVNDUklQVElWRV9GSUVMRFMiLCJvbkl0ZW1VcHNlcnQiLCJpdGVtIiwicHJldmlvdXNJdGVtIiwiZWZmZWN0S2V5IiwiaWQiLCJuYW1lIiwidHlwZSIsInN0YXRpb24iLCJzb3VyY2VUeXBlIiwic291cmNlVGFza0lkIiwic291cmNlUmVjb3JkSWQiLCJzb3VyY2VJZCIsInVuZGVmaW5lZCIsInN0b2NrQ2hhbmdlZCIsIkpTT04iLCJzdHJpbmdpZnkiLCJzdG9jayIsIm9sZFN0b2NrIiwibmV3U3RvY2siLCJxdWFudGl0eVNvbGQiLCJvbGRRdWFudGl0eVNvbGQiLCJpc0NvbGxlY3RlZCIsImNvbGxlY3RlZEF0IiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwiZmllbGQiLCJyZW1vdmVJdGVtRWZmZWN0c09uRGVsZXRlIiwiaXRlbUlkIiwiY29uc29sZSIsImxvZyIsIml0ZW1MaW5rcyIsImdldExpbmtzRm9yIiwibGVuZ3RoIiwibGluayIsInJlbW92ZUxpbmsiLCJsaW5rVHlwZSIsImVycm9yIiwicmVzdWx0IiwicmVtb3ZlTG9nRW50cnkiLCJzdWNjZXNzIiwibWVzc2FnZSIsInByb2Nlc3NJdGVtQ3JlYXRpb25FZmZlY3RzIiwiaXRlbUNyZWF0ZWQiLCJsb2dJdGVtQ3JlYXRpb25Gb3JJdGVtIiwidXBkYXRlSXRlbUxvZ0VudHJ5Rm9ySXRlbSIsImRpc3BhdGNoRXZlbnRzIiwidXBkYXRlcyIsIml0ZW1OYW1lIiwiaXRlbVR5cGUiLCJjb2xsZWN0aW9uIiwic3RhdHVzIiwicXVhbnRpdHkiLCJyZWR1Y2UiLCJzdW0iLCJ1bml0Q29zdCIsInByaWNlIiwieWVhciIsImRlc2NyaXB0aW9uIiwid2luZG93IiwiZGlzcGF0Y2hFdmVudCIsIkN1c3RvbUV2ZW50IiwidXBkYXRlQWxsSXRlbUxvZ0VudHJpZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./workflows/entities-workflows/item.workflow.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./workflows/entities-workflows/player.workflow.ts":
/*!*********************************************************!*\
  !*** ./workflows/entities-workflows/player.workflow.ts ***!
  \*********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logPlayerEffect: function() { return /* binding */ logPlayerEffect; },\n/* harmony export */   logPlayerEffectFromRecord: function() { return /* binding */ logPlayerEffectFromRecord; },\n/* harmony export */   logPlayerUpdateFromTask: function() { return /* binding */ logPlayerUpdateFromTask; },\n/* harmony export */   onPlayerUpsert: function() { return /* binding */ onPlayerUpsert; },\n/* harmony export */   removePlayerEffectsOnDelete: function() { return /* binding */ removePlayerEffectsOnDelete; },\n/* harmony export */   updatePlayerPointsFromTask: function() { return /* binding */ updatePlayerPointsFromTask; }\n/* harmony export */ });\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../entities-logging */ \"(app-pages-browser)/./workflows/entities-logging.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(app-pages-browser)/./data-store/effects-registry.ts\");\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/client-api */ \"(app-pages-browser)/./lib/client-api.ts\");\n// workflows/entities-workflows/player.workflow.ts\n// Player-specific workflow with LEVEL_UP, POINTS_CHANGED events\n\n\n\n\nconst STATE_FIELDS = [\n    \"level\",\n    \"totalPoints\",\n    \"points\",\n    \"isActive\"\n];\nconst DESCRIPTIVE_FIELDS = [\n    \"name\",\n    \"email\"\n];\nasync function onPlayerUpsert(player, previousPlayer) {\n    // New player creation\n    if (!previousPlayer) {\n        const effectKey = \"player:\".concat(player.id, \":created\");\n        if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(effectKey)) return;\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"player\", player.id, \"CREATED\", {\n            name: player.name,\n            level: player.level\n        });\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(effectKey);\n        return;\n    }\n    // Level up - LEVEL_UP event\n    if (previousPlayer.level < player.level) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"player\", player.id, \"LEVEL_UP\", {\n            name: player.name,\n            oldLevel: previousPlayer.level,\n            newLevel: player.level\n        });\n    }\n    // Points changes - POINTS_CHANGED event\n    const pointsChanged = JSON.stringify(previousPlayer.totalPoints) !== JSON.stringify(player.totalPoints) || JSON.stringify(previousPlayer.points) !== JSON.stringify(player.points);\n    if (pointsChanged) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"player\", player.id, \"POINTS_CHANGED\", {\n            name: player.name,\n            totalPoints: player.totalPoints,\n            points: player.points\n        });\n    }\n    // General updates - UPDATED event\n    const hasSignificantChanges = previousPlayer.isActive !== player.isActive;\n    if (hasSignificantChanges) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"player\", player.id, \"UPDATED\", {\n            name: player.name,\n            isActive: player.isActive\n        });\n    }\n    // Descriptive changes - update in-place\n    for (const field of DESCRIPTIVE_FIELDS){\n        if (previousPlayer[field] !== player[field]) {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"player\", player.id, field, previousPlayer[field], player[field]);\n        }\n    }\n}\n/**\r\n * Remove player effects when player is deleted\r\n * Players can have entries in player log and related links\r\n */ async function removePlayerEffectsOnDelete(playerId) {\n    try {\n        console.log(\"[removePlayerEffectsOnDelete] Starting cleanup for player: \".concat(playerId));\n        // 1. Remove all Links related to this player\n        const playerLinks = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getLinksFor({\n            type: \"player\",\n            id: playerId\n        });\n        console.log(\"[removePlayerEffectsOnDelete] Found \".concat(playerLinks.length, \" links to remove\"));\n        for (const link of playerLinks){\n            try {\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLink(link.id);\n                console.log(\"[removePlayerEffectsOnDelete] ✅ Removed link: \".concat(link.linkType));\n            } catch (error) {\n                console.error(\"[removePlayerEffectsOnDelete] ❌ Failed to remove link \".concat(link.id, \":\"), error);\n            }\n        }\n        // 2. Clear all effects for this player\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffect)(\"player:\".concat(playerId, \":created\"));\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"player\", playerId, \"\");\n        // 3. Remove log entries from player log\n        console.log(\"[removePlayerEffectsOnDelete] Starting log entry removal for player: \".concat(playerId));\n        const result = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"player\", playerId);\n        if (result.success) {\n            console.log(\"[removePlayerEffectsOnDelete] ✅ Player log entries removed successfully for player: \".concat(playerId));\n        } else {\n            console.error(\"[removePlayerEffectsOnDelete] Failed to remove player log entries: \".concat(result.message));\n        }\n        console.log(\"[removePlayerEffectsOnDelete] ✅ Cleared effects, removed links, and removed log entries for player \".concat(playerId));\n    } catch (error) {\n        console.error(\"Error removing player effects:\", error);\n    }\n}\n/**\r\n * Log player effect from task completion\r\n * This logs the points awarded to the player from completing a task\r\n */ async function logPlayerEffect(task) {\n    try {\n        var _task_rewards;\n        console.log(\"[logPlayerEffect] Logging player effect for task: \".concat(task.name, \" (\").concat(task.id, \")\"));\n        // Only log if there are points to award\n        const hasPoints = ((_task_rewards = task.rewards) === null || _task_rewards === void 0 ? void 0 : _task_rewards.points) && ((task.rewards.points.xp || 0) > 0 || (task.rewards.points.rp || 0) > 0 || (task.rewards.points.fp || 0) > 0 || (task.rewards.points.hp || 0) > 0);\n        if (!hasPoints) {\n            console.log(\"[logPlayerEffect] No points to log, skipping\");\n            return;\n        }\n        // Get main player ID (V0.1 constant)\n        const mainPlayerId = \"PLAYER_ONE_ID\";\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendPlayerPointsLog)(mainPlayerId, {\n            xp: task.rewards.points.xp || 0,\n            rp: task.rewards.points.rp || 0,\n            fp: task.rewards.points.fp || 0,\n            hp: task.rewards.points.hp || 0\n        }, task.id, \"task\");\n        console.log(\"[logPlayerEffect] ✅ Player effect logged successfully for \".concat(task.name));\n    } catch (error) {\n        console.error(\"Error logging player effect:\", error);\n    }\n}\n/**\r\n * Log player effect from financial record\r\n * This logs the points awarded to the player from a financial record\r\n */ async function logPlayerEffectFromRecord(record) {\n    try {\n        var _record_rewards, _record_rewards_points, _record_rewards1, _record_rewards_points1, _record_rewards2, _record_rewards_points2, _record_rewards3, _record_rewards_points3, _record_rewards4;\n        console.log(\"[logPlayerEffectFromRecord] Logging player effect for record: \".concat(record.name, \" (\").concat(record.id, \")\"));\n        // Only log if there are points to award\n        const hasPoints = ((_record_rewards = record.rewards) === null || _record_rewards === void 0 ? void 0 : _record_rewards.points) && ((record.rewards.points.xp || 0) > 0 || (record.rewards.points.rp || 0) > 0 || (record.rewards.points.fp || 0) > 0 || (record.rewards.points.hp || 0) > 0);\n        if (!hasPoints) {\n            console.log(\"[logPlayerEffectFromRecord] No points to log, skipping\");\n            return;\n        }\n        // Get main player ID (V0.1 constant)\n        const mainPlayerId = \"PLAYER_ONE_ID\";\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendPlayerPointsLog)(mainPlayerId, {\n            xp: ((_record_rewards1 = record.rewards) === null || _record_rewards1 === void 0 ? void 0 : (_record_rewards_points = _record_rewards1.points) === null || _record_rewards_points === void 0 ? void 0 : _record_rewards_points.xp) || 0,\n            rp: ((_record_rewards2 = record.rewards) === null || _record_rewards2 === void 0 ? void 0 : (_record_rewards_points1 = _record_rewards2.points) === null || _record_rewards_points1 === void 0 ? void 0 : _record_rewards_points1.rp) || 0,\n            fp: ((_record_rewards3 = record.rewards) === null || _record_rewards3 === void 0 ? void 0 : (_record_rewards_points2 = _record_rewards3.points) === null || _record_rewards_points2 === void 0 ? void 0 : _record_rewards_points2.fp) || 0,\n            hp: ((_record_rewards4 = record.rewards) === null || _record_rewards4 === void 0 ? void 0 : (_record_rewards_points3 = _record_rewards4.points) === null || _record_rewards_points3 === void 0 ? void 0 : _record_rewards_points3.hp) || 0\n        }, record.id, \"financial\");\n        console.log(\"[logPlayerEffectFromRecord] ✅ Player effect logged successfully for \".concat(record.name));\n    } catch (error) {\n        console.error(\"Error logging player effect from record:\", error);\n    }\n}\n/**\r\n * Log player update from task changes\r\n * This logs when task rewards change and player points need to be updated\r\n */ async function logPlayerUpdateFromTask(task, oldTask) {\n    try {\n        var _oldTask_rewards, _task_rewards;\n        console.log(\"[logPlayerUpdateFromTask] Logging player update for task: \".concat(task.name, \" (\").concat(task.id, \")\"));\n        const oldRewards = ((_oldTask_rewards = oldTask.rewards) === null || _oldTask_rewards === void 0 ? void 0 : _oldTask_rewards.points) || {\n            xp: 0,\n            rp: 0,\n            fp: 0,\n            hp: 0\n        };\n        const newRewards = ((_task_rewards = task.rewards) === null || _task_rewards === void 0 ? void 0 : _task_rewards.points) || {\n            xp: 0,\n            rp: 0,\n            fp: 0,\n            hp: 0\n        };\n        // Check if rewards actually changed\n        const rewardsChanged = JSON.stringify(oldRewards) !== JSON.stringify(newRewards);\n        if (!rewardsChanged) {\n            console.log(\"[logPlayerUpdateFromTask] No reward changes to log, skipping\");\n            return;\n        }\n        // Get main player ID (V0.1 constant)\n        const mainPlayerId = \"PLAYER_ONE_ID\";\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendPlayerPointsUpdateLog)(mainPlayerId, {\n            xp: oldRewards.xp || 0,\n            rp: oldRewards.rp || 0,\n            fp: oldRewards.fp || 0,\n            hp: oldRewards.hp || 0\n        }, {\n            xp: newRewards.xp || 0,\n            rp: newRewards.rp || 0,\n            fp: newRewards.fp || 0,\n            hp: newRewards.hp || 0\n        }, task.id);\n        console.log(\"[logPlayerUpdateFromTask] ✅ Player update logged successfully for \".concat(task.name));\n    } catch (error) {\n        console.error(\"Error logging player update from task:\", error);\n    }\n}\n/**\r\n * Update player points from task changes\r\n * This updates the player's points when task rewards change\r\n */ async function updatePlayerPointsFromTask(task, oldTask) {\n    try {\n        var _oldTask_rewards, _task_rewards, _mainPlayer_points, _mainPlayer_points1, _mainPlayer_points2, _mainPlayer_points3, _mainPlayer_totalPoints, _mainPlayer_totalPoints1, _mainPlayer_totalPoints2, _mainPlayer_totalPoints3;\n        console.log(\"[updatePlayerPointsFromTask] Updating player points for task: \".concat(task.name, \" (\").concat(task.id, \")\"));\n        const oldRewards = ((_oldTask_rewards = oldTask.rewards) === null || _oldTask_rewards === void 0 ? void 0 : _oldTask_rewards.points) || {\n            xp: 0,\n            rp: 0,\n            fp: 0,\n            hp: 0\n        };\n        const newRewards = ((_task_rewards = task.rewards) === null || _task_rewards === void 0 ? void 0 : _task_rewards.points) || {\n            xp: 0,\n            rp: 0,\n            fp: 0,\n            hp: 0\n        };\n        // Calculate point delta\n        const delta = {\n            xp: (newRewards.xp || 0) - (oldRewards.xp || 0),\n            rp: (newRewards.rp || 0) - (oldRewards.rp || 0),\n            fp: (newRewards.fp || 0) - (oldRewards.fp || 0),\n            hp: (newRewards.hp || 0) - (oldRewards.hp || 0)\n        };\n        // Check if there are any changes\n        const hasChanges = delta.xp !== 0 || delta.rp !== 0 || delta.fp !== 0 || delta.hp !== 0;\n        if (!hasChanges) {\n            console.log(\"[updatePlayerPointsFromTask] No point changes to apply, skipping\");\n            return;\n        }\n        // Get main player\n        const mainPlayerId = \"PLAYER_ONE_ID\";\n        const players = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getPlayers();\n        const mainPlayer = players.find((p)=>p.id === mainPlayerId);\n        if (!mainPlayer) {\n            console.log(\"[updatePlayerPointsFromTask] Main player not found, skipping\");\n            return;\n        }\n        // Apply delta to player points\n        const updatedPlayer = {\n            ...mainPlayer,\n            points: {\n                xp: Math.max(0, (((_mainPlayer_points = mainPlayer.points) === null || _mainPlayer_points === void 0 ? void 0 : _mainPlayer_points.xp) || 0) + delta.xp),\n                rp: Math.max(0, (((_mainPlayer_points1 = mainPlayer.points) === null || _mainPlayer_points1 === void 0 ? void 0 : _mainPlayer_points1.rp) || 0) + delta.rp),\n                fp: Math.max(0, (((_mainPlayer_points2 = mainPlayer.points) === null || _mainPlayer_points2 === void 0 ? void 0 : _mainPlayer_points2.fp) || 0) + delta.fp),\n                hp: Math.max(0, (((_mainPlayer_points3 = mainPlayer.points) === null || _mainPlayer_points3 === void 0 ? void 0 : _mainPlayer_points3.hp) || 0) + delta.hp)\n            },\n            totalPoints: {\n                xp: Math.max(0, (((_mainPlayer_totalPoints = mainPlayer.totalPoints) === null || _mainPlayer_totalPoints === void 0 ? void 0 : _mainPlayer_totalPoints.xp) || 0) + delta.xp),\n                rp: Math.max(0, (((_mainPlayer_totalPoints1 = mainPlayer.totalPoints) === null || _mainPlayer_totalPoints1 === void 0 ? void 0 : _mainPlayer_totalPoints1.rp) || 0) + delta.rp),\n                fp: Math.max(0, (((_mainPlayer_totalPoints2 = mainPlayer.totalPoints) === null || _mainPlayer_totalPoints2 === void 0 ? void 0 : _mainPlayer_totalPoints2.fp) || 0) + delta.fp),\n                hp: Math.max(0, (((_mainPlayer_totalPoints3 = mainPlayer.totalPoints) === null || _mainPlayer_totalPoints3 === void 0 ? void 0 : _mainPlayer_totalPoints3.hp) || 0) + delta.hp)\n            },\n            updatedAt: new Date()\n        };\n        // Store the updated player\n        console.log(\"[updatePlayerPointsFromTask] Applying point delta:\", delta);\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.upsertPlayer(updatedPlayer);\n        console.log(\"[updatePlayerPointsFromTask] ✅ Player points updated successfully\");\n    } catch (error) {\n        console.error(\"Error updating player points from task:\", error);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./workflows/entities-workflows/player.workflow.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./workflows/entities-workflows/sale.workflow.ts":
/*!*******************************************************!*\
  !*** ./workflows/entities-workflows/sale.workflow.ts ***!
  \*******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onSaleUpsert: function() { return /* binding */ onSaleUpsert; },\n/* harmony export */   removeSaleEffectsOnDelete: function() { return /* binding */ removeSaleEffectsOnDelete; }\n/* harmony export */ });\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../entities-logging */ \"(app-pages-browser)/./workflows/entities-logging.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(app-pages-browser)/./data-store/effects-registry.ts\");\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/client-api */ \"(app-pages-browser)/./lib/client-api.ts\");\n/* harmony import */ var _points_rewards_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../points-rewards-utils */ \"(app-pages-browser)/./workflows/points-rewards-utils.ts\");\n/* harmony import */ var _sale_line_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../sale-line-utils */ \"(app-pages-browser)/./workflows/sale-line-utils.ts\");\n/* harmony import */ var _update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../update-propagation-utils */ \"(app-pages-browser)/./workflows/update-propagation-utils.ts\");\n// workflows/entities-workflows/sale.workflow.ts\n// Sale-specific workflow with CHARGED, CANCELLED, COLLECTED events\n\n\n\n\n\n\nconst STATE_FIELDS = [\n    \"status\",\n    \"isNotPaid\",\n    \"isNotCharged\",\n    \"isCollected\",\n    \"postedAt\",\n    \"doneAt\",\n    \"cancelledAt\"\n];\nconst DESCRIPTIVE_FIELDS = [\n    \"counterpartyName\",\n    \"totals\"\n];\nasync function onSaleUpsert(sale, previousSale) {\n    // New sale creation\n    if (!previousSale) {\n        const effectKey = \"sale:\".concat(sale.id, \":created\");\n        if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(effectKey)) return;\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"sale\", sale.id, \"CREATED\", {\n            type: sale.type,\n            status: sale.status,\n            counterpartyName: sale.counterpartyName,\n            totalRevenue: sale.totals.totalRevenue\n        });\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(effectKey);\n        // Points awarding - on sale creation with revenue\n        if (sale.totals.totalRevenue > 0) {\n            const pointsEffectKey = \"sale:\".concat(sale.id, \":pointsAwarded\");\n            if (!await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(pointsEffectKey)) {\n                console.log(\"[onSaleUpsert] Awarding points from sale revenue: \".concat(sale.counterpartyName));\n                const points = (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_3__.calculatePointsFromRevenue)(sale.totals.totalRevenue);\n                await (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_3__.awardPointsToPlayer)((0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_3__.getMainPlayerId)(), points, sale.id, \"sale\");\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(pointsEffectKey);\n                console.log(\"[onSaleUpsert] ✅ Points awarded and effect marked for sale: \".concat(sale.counterpartyName));\n            }\n        }\n        return;\n    }\n    // Status changes\n    if (previousSale.status !== sale.status) {\n        if (sale.status === \"CHARGED\") {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"sale\", sale.id, \"CHARGED\", {\n                counterpartyName: sale.counterpartyName,\n                totalRevenue: sale.totals.totalRevenue,\n                chargedAt: new Date().toISOString()\n            });\n            // Process sale lines when sale is charged\n            const linesProcessedKey = \"sale:\".concat(sale.id, \":linesProcessed\");\n            if (!await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(linesProcessedKey)) {\n                console.log(\"[onSaleUpsert] Processing sale lines for charged sale: \".concat(sale.counterpartyName));\n                await (0,_sale_line_utils__WEBPACK_IMPORTED_MODULE_4__.processSaleLines)(sale);\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(linesProcessedKey);\n                console.log(\"[onSaleUpsert] ✅ Sale lines processed and effect marked: \".concat(sale.counterpartyName));\n            }\n        } else if (sale.status === \"CANCELLED\") {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"sale\", sale.id, \"CANCELLED\", {\n                counterpartyName: sale.counterpartyName,\n                cancelledAt: sale.cancelledAt || new Date().toISOString()\n            });\n        }\n    }\n    // Collection status - COLLECTED event\n    if (!previousSale.isCollected && sale.isCollected) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"sale\", sale.id, \"COLLECTED\", {\n            counterpartyName: sale.counterpartyName,\n            collectedAt: new Date().toISOString()\n        });\n    }\n    // COMPREHENSIVE UPDATE PROPAGATION - when sale properties change\n    if (previousSale) {\n        // Propagate to Financial Records\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.hasRevenueChanged)(sale, previousSale)) {\n            console.log(\"[onSaleUpsert] Propagating revenue changes to financial records: \".concat(sale.counterpartyName));\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.updateFinancialRecordsFromSale)(sale, previousSale);\n        }\n        // Propagate to Items (stock updates)\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.hasLinesChanged)(sale, previousSale)) {\n            console.log(\"[onSaleUpsert] Propagating line changes to items: \".concat(sale.counterpartyName));\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.updateItemsFromSale)(sale, previousSale);\n        }\n        // Propagate to Player (points delta from revenue)\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.hasRevenueChanged)(sale, previousSale)) {\n            console.log(\"[onSaleUpsert] Propagating revenue changes to player points: \".concat(sale.counterpartyName));\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_5__.updatePlayerPointsFromSource)(\"sale\", sale, previousSale);\n        }\n    }\n    // Descriptive changes - update in-place\n    for (const field of DESCRIPTIVE_FIELDS){\n        if (previousSale[field] !== sale[field]) {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"sale\", sale.id, field, previousSale[field], sale[field]);\n        }\n    }\n}\n/**\r\n * Remove sale effects when sale is deleted\r\n * Sales can have entries in multiple logs: sales, financials, character, items\r\n */ async function removeSaleEffectsOnDelete(saleId) {\n    try {\n        console.log(\"[removeSaleEffectsOnDelete] Starting cleanup for sale: \".concat(saleId));\n        // 1. Remove player points that were awarded by this sale (if points were badly given)\n        await removePlayerPointsFromSale(saleId);\n        // 2. Remove all Links related to this sale\n        const saleLinks = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getLinksFor({\n            type: \"sale\",\n            id: saleId\n        });\n        console.log(\"[removeSaleEffectsOnDelete] Found \".concat(saleLinks.length, \" links to remove\"));\n        for (const link of saleLinks){\n            try {\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLink(link.id);\n                console.log(\"[removeSaleEffectsOnDelete] ✅ Removed link: \".concat(link.linkType));\n            } catch (error) {\n                console.error(\"[removeSaleEffectsOnDelete] ❌ Failed to remove link \".concat(link.id, \":\"), error);\n            }\n        }\n        // 3. Clear effects registry\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"sale\", saleId, \"sale:\");\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"sale\", saleId, \"pointsAwarded:\");\n        // 4. Remove log entries from all relevant logs\n        console.log(\"[removeSaleEffectsOnDelete] Starting log entry removal for sale: \".concat(saleId));\n        const removals = await Promise.all([\n            _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"sales\", saleId).then((r)=>{\n                console.log(\"[removeSaleEffectsOnDelete] Sales log removal result:\", r);\n                return r;\n            }).catch((e)=>({\n                    success: false,\n                    message: String(e)\n                })),\n            _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"financials\", saleId).then((r)=>{\n                console.log(\"[removeSaleEffectsOnDelete] Financials log removal result:\", r);\n                return r;\n            }).catch((e)=>({\n                    success: false,\n                    message: String(e)\n                })),\n            _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"character\", saleId).then((r)=>{\n                console.log(\"[removeSaleEffectsOnDelete] Character log removal result:\", r);\n                return r;\n            }).catch((e)=>({\n                    success: false,\n                    message: String(e)\n                })),\n            _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"items\", saleId).then((r)=>{\n                console.log(\"[removeSaleEffectsOnDelete] Items log removal result:\", r);\n                return r;\n            }).catch((e)=>({\n                    success: false,\n                    message: String(e)\n                }))\n        ]);\n        console.log(\"[removeSaleEffectsOnDelete] All removal results:\", removals);\n        const failed = removals.filter((r)=>!r.success);\n        if (failed.length > 0) {\n            console.error(\"[removeSaleEffectsOnDelete] Some log removals failed:\", failed);\n        } else {\n            console.log(\"[removeSaleEffectsOnDelete] ✅ All log entries removed successfully for sale: \".concat(saleId));\n        }\n        console.log(\"[removeSaleEffectsOnDelete] ✅ Cleared effects, removed links, and removed log entries for sale \".concat(saleId));\n    } catch (error) {\n        console.error(\"Error removing sale effects:\", error);\n    }\n}\n/**\r\n * Remove player points that were awarded by a specific sale\r\n * This is used when rolling back a sale that incorrectly awarded points\r\n */ async function removePlayerPointsFromSale(saleId) {\n    try {\n        console.log(\"[removePlayerPointsFromSale] Removing points for sale: \".concat(saleId));\n        // Get the sale to find what points were awarded\n        const sales = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getSales();\n        const sale = sales.find((s)=>s.id === saleId);\n        if (!sale || sale.totals.totalRevenue <= 0) {\n            console.log(\"[removePlayerPointsFromSale] Sale \".concat(saleId, \" has no revenue to remove points from\"));\n            return;\n        }\n        // Get the main player\n        const mainPlayerId = (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_3__.getMainPlayerId)();\n        const players = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getPlayers();\n        const mainPlayer = players.find((p)=>p.id === mainPlayerId);\n        if (!mainPlayer) {\n            console.log(\"[removePlayerPointsFromSale] Main player not found, skipping points removal\");\n            return;\n        }\n        // Calculate points to remove based on sale revenue (1 Point = $100)\n        const pointsToRemove = (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_3__.calculatePointsFromRevenue)(sale.totals.totalRevenue);\n        // Check if any points were actually awarded\n        const hasPoints = (pointsToRemove.xp || 0) > 0 || (pointsToRemove.rp || 0) > 0 || (pointsToRemove.fp || 0) > 0 || (pointsToRemove.hp || 0) > 0;\n        if (!hasPoints) {\n            console.log(\"[removePlayerPointsFromSale] No points to remove from sale \".concat(saleId, \" (revenue: \").concat(sale.totals.totalRevenue, \")\"));\n            return;\n        }\n        // Remove the points from the player\n        await (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_3__.removePointsFromPlayer)(mainPlayerId, pointsToRemove);\n        console.log(\"[removePlayerPointsFromSale] ✅ Removed points from player: \".concat(JSON.stringify(pointsToRemove), \" (sale revenue: \").concat(sale.totals.totalRevenue, \")\"));\n    } catch (error) {\n        console.error(\"[removePlayerPointsFromSale] ❌ Failed to remove player points for sale \".concat(saleId, \":\"), error);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./workflows/entities-workflows/sale.workflow.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./workflows/entities-workflows/site.workflow.ts":
/*!*******************************************************!*\
  !*** ./workflows/entities-workflows/site.workflow.ts ***!
  \*******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onSiteUpsert: function() { return /* binding */ onSiteUpsert; },\n/* harmony export */   removeSiteEffectsOnDelete: function() { return /* binding */ removeSiteEffectsOnDelete; }\n/* harmony export */ });\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../entities-logging */ \"(app-pages-browser)/./workflows/entities-logging.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(app-pages-browser)/./data-store/effects-registry.ts\");\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/client-api */ \"(app-pages-browser)/./lib/client-api.ts\");\n// workflows/entities-workflows/site.workflow.ts\n// Site-specific workflow with ACTIVATED, DEACTIVATED events\n\n\n\nconst STATE_FIELDS = [\n    \"isActive\",\n    \"status\"\n];\nconst DESCRIPTIVE_FIELDS = [\n    \"name\",\n    \"description\",\n    \"metadata\"\n];\nasync function onSiteUpsert(site, previousSite) {\n    // New site creation\n    if (!previousSite) {\n        const effectKey = \"site:\".concat(site.id, \":created\");\n        if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(effectKey)) return;\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"site\", site.id, \"CREATED\", {\n            name: site.name,\n            type: site.metadata.type,\n            isActive: site.isActive\n        });\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(effectKey);\n        return;\n    }\n    // Activation status changes\n    if (previousSite.isActive !== site.isActive) {\n        if (site.isActive) {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"site\", site.id, \"ACTIVATED\", {\n                name: site.name,\n                activatedAt: new Date().toISOString()\n            });\n        } else {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"site\", site.id, \"DEACTIVATED\", {\n                name: site.name,\n                deactivatedAt: new Date().toISOString()\n            });\n        }\n    }\n    // Status changes - UPDATED event\n    if (previousSite.status !== site.status) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.appendEntityLog)(\"site\", site.id, \"UPDATED\", {\n            name: site.name,\n            oldStatus: previousSite.status,\n            newStatus: site.status\n        });\n    }\n    // Descriptive changes - update in-place\n    for (const field of DESCRIPTIVE_FIELDS){\n        if (previousSite[field] !== site[field]) {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_0__.updateEntityLogField)(\"site\", site.id, field, previousSite[field], site[field]);\n        }\n    }\n}\n/**\r\n * Remove site effects when site is deleted\r\n * Sites can have entries in sites log and related links\r\n */ async function removeSiteEffectsOnDelete(siteId) {\n    try {\n        console.log(\"[removeSiteEffectsOnDelete] Starting cleanup for site: \".concat(siteId));\n        // 1. Remove all Links related to this site\n        const siteLinks = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.getLinksFor({\n            type: \"site\",\n            id: siteId\n        });\n        console.log(\"[removeSiteEffectsOnDelete] Found \".concat(siteLinks.length, \" links to remove\"));\n        for (const link of siteLinks){\n            try {\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLink(link.id);\n                console.log(\"[removeSiteEffectsOnDelete] ✅ Removed link: \".concat(link.linkType));\n            } catch (error) {\n                console.error(\"[removeSiteEffectsOnDelete] ❌ Failed to remove link \".concat(link.id, \":\"), error);\n            }\n        }\n        // 2. Clear all effects for this site\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffect)(\"site:\".concat(siteId, \":created\"));\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.clearEffectsByPrefix)(\"site\", siteId, \"\");\n        // 3. Remove log entries from sites log\n        console.log(\"[removeSiteEffectsOnDelete] Starting log entry removal for site: \".concat(siteId));\n        const result = await _lib_client_api__WEBPACK_IMPORTED_MODULE_2__.ClientAPI.removeLogEntry(\"sites\", siteId);\n        if (result.success) {\n            console.log(\"[removeSiteEffectsOnDelete] ✅ Site log entries removed successfully for site: \".concat(siteId));\n        } else if (result.message === \"No matching entries found\") {\n            console.log(\"[removeSiteEffectsOnDelete] ⏭️ No log entries found for site: \".concat(siteId, \" (this is normal)\"));\n        } else {\n            console.error(\"[removeSiteEffectsOnDelete] Failed to remove site log entries: \".concat(result.message));\n        }\n        console.log(\"[removeSiteEffectsOnDelete] ✅ Cleared effects, removed links, and removed log entries for site \".concat(siteId));\n    } catch (error) {\n        console.error(\"Error removing site effects:\", error);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./workflows/entities-workflows/site.workflow.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./workflows/entities-workflows/task.workflow.ts":
/*!*******************************************************!*\
  !*** ./workflows/entities-workflows/task.workflow.ts ***!
  \*******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onTaskUpsert: function() { return /* binding */ onTaskUpsert; },\n/* harmony export */   removeTaskLogEntriesOnDelete: function() { return /* binding */ removeTaskLogEntriesOnDelete; },\n/* harmony export */   uncompleteTask: function() { return /* binding */ uncompleteTask; }\n/* harmony export */ });\n/* harmony import */ var _types_enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/enums */ \"(app-pages-browser)/./types/enums.ts\");\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../entities-logging */ \"(app-pages-browser)/./workflows/entities-logging.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(app-pages-browser)/./data-store/effects-registry.ts\");\n/* harmony import */ var _data_store_datastore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/data-store/datastore */ \"(app-pages-browser)/./data-store/datastore.ts\");\n/* harmony import */ var _links_link_registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/links/link-registry */ \"(app-pages-browser)/./links/link-registry.ts\");\n/* harmony import */ var _item_creation_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../item-creation-utils */ \"(app-pages-browser)/./workflows/item-creation-utils.ts\");\n/* harmony import */ var _points_rewards_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../points-rewards-utils */ \"(app-pages-browser)/./workflows/points-rewards-utils.ts\");\n/* harmony import */ var _financial_record_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../financial-record-utils */ \"(app-pages-browser)/./workflows/financial-record-utils.ts\");\n/* harmony import */ var _update_propagation_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../update-propagation-utils */ \"(app-pages-browser)/./workflows/update-propagation-utils.ts\");\n// workflows/entities-workflows/task.workflow.ts\n// Task-specific workflow with state vs descriptive field detection\n\n\n\n\n\n\n\n\n\nconst STATE_FIELDS = [\n    \"status\",\n    \"progress\",\n    \"doneAt\",\n    \"collectedAt\",\n    \"siteId\",\n    \"targetSiteId\"\n];\nconst DESCRIPTIVE_FIELDS = [\n    \"name\",\n    \"description\",\n    \"cost\",\n    \"revenue\",\n    \"rewards\",\n    \"priority\"\n];\nasync function onTaskUpsert(task, previousTask) {\n    var _task_rewards;\n    // New task creation\n    if (!previousTask) {\n        const effectKey = \"task:\".concat(task.id, \":created\");\n        if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.hasEffect)(effectKey)) return;\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_1__.appendEntityLog)(\"task\", task.id, \"CREATED\", {\n            name: task.name,\n            status: task.status,\n            station: task.station\n        });\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.markEffect)(effectKey);\n        return;\n    }\n    // State changes - append new log\n    if (previousTask.status !== task.status) {\n        console.log(\"[onTaskUpsert] Task status changed: \".concat(previousTask.status, \" → \").concat(task.status));\n        // Log status change with transition context\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_1__.appendEntityLog)(\"task\", task.id, \"STATUS_CHANGED\", {\n            oldStatus: previousTask.status,\n            newStatus: task.status,\n            name: task.name,\n            transition: \"\".concat(previousTask.status, \" → \").concat(task.status),\n            changedAt: new Date().toISOString()\n        });\n        // Handle uncompletion (Done → Other status)\n        if (previousTask.status === \"Done\" && task.status !== \"Done\" && task.status !== \"Collected\") {\n            console.log(\"[onTaskUpsert] Task uncompleted: \".concat(task.name, \" (\").concat(previousTask.status, \" → \").concat(task.status, \")\"));\n            // Uncomplete the task and remove effects\n            await uncompleteTask(task.id);\n        }\n    }\n    if (!previousTask.doneAt && task.doneAt) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_1__.appendEntityLog)(\"task\", task.id, \"DONE\", {\n            name: task.name,\n            doneAt: task.doneAt\n        });\n    }\n    if (!previousTask.collectedAt && task.collectedAt) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_1__.appendEntityLog)(\"task\", task.id, \"COLLECTED\", {\n            name: task.name,\n            collectedAt: task.collectedAt\n        });\n    }\n    // Site changes - MOVED event\n    if (previousTask.siteId !== task.siteId || previousTask.targetSiteId !== task.targetSiteId) {\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_1__.appendEntityLog)(\"task\", task.id, \"MOVED\", {\n            name: task.name,\n            oldSiteId: previousTask.siteId,\n            newSiteId: task.siteId,\n            oldTargetSiteId: previousTask.targetSiteId,\n            newTargetSiteId: task.targetSiteId\n        });\n    }\n    // Item creation from emissary fields - when task is completed\n    if (task.outputItemType && task.outputQuantity && task.status === \"Done\") {\n        const effectKey = \"task:\".concat(task.id, \":itemCreated\");\n        if (!await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.hasEffect)(effectKey)) {\n            console.log(\"[onTaskUpsert] Creating item from task emissary fields: \".concat(task.name));\n            const createdItem = await (0,_item_creation_utils__WEBPACK_IMPORTED_MODULE_5__.createItemFromTask)(task);\n            if (createdItem) {\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.markEffect)(effectKey);\n                console.log(\"[onTaskUpsert] ✅ Item created and effect marked: \".concat(createdItem.name));\n            }\n        }\n    }\n    // Points awarding - when task is completed with rewards\n    if (task.status === \"Done\" && ((_task_rewards = task.rewards) === null || _task_rewards === void 0 ? void 0 : _task_rewards.points)) {\n        const effectKey = \"task:\".concat(task.id, \":pointsAwarded\");\n        if (!await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.hasEffect)(effectKey)) {\n            console.log(\"[onTaskUpsert] Awarding points from task completion: \".concat(task.name));\n            await (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_6__.awardPointsToPlayer)((0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_6__.getMainPlayerId)(), task.rewards.points, task.id, \"task\");\n            await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.markEffect)(effectKey);\n            console.log(\"[onTaskUpsert] ✅ Points awarded and effect marked for task: \".concat(task.name));\n        }\n    }\n    // Financial record creation from task - when task has cost or revenue\n    if (task.cost || task.revenue) {\n        const effectKey = \"task:\".concat(task.id, \":financialCreated\");\n        if (!await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.hasEffect)(effectKey)) {\n            console.log(\"[onTaskUpsert] Creating financial record from task: \".concat(task.name));\n            const createdFinancial = await (0,_financial_record_utils__WEBPACK_IMPORTED_MODULE_7__.createFinancialRecordFromTask)(task);\n            if (createdFinancial) {\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.markEffect)(effectKey);\n                console.log(\"[onTaskUpsert] ✅ Financial record created and effect marked: \".concat(createdFinancial.name));\n            }\n        }\n    }\n    // COMPREHENSIVE UPDATE PROPAGATION - when task properties change\n    if (previousTask) {\n        // Propagate to Financial Records\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_8__.hasFinancialPropsChanged)(task, previousTask)) {\n            console.log(\"[onTaskUpsert] Propagating financial changes from task: \".concat(task.name));\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_8__.updateFinancialRecordsFromTask)(task, previousTask);\n        }\n        // Propagate to Items\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_8__.hasOutputPropsChanged)(task, previousTask)) {\n            console.log(\"[onTaskUpsert] Propagating output changes from task: \".concat(task.name));\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_8__.updateItemsCreatedByTask)(task, previousTask);\n        }\n        // Propagate to Player (points delta)\n        if ((0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_8__.hasRewardsChanged)(task, previousTask)) {\n            console.log(\"[onTaskUpsert] Propagating points changes from task: \".concat(task.name));\n            await (0,_update_propagation_utils__WEBPACK_IMPORTED_MODULE_8__.updatePlayerPointsFromSource)(\"task\", task, previousTask);\n        }\n    }\n    // Descriptive changes - update in-place\n    for (const field of DESCRIPTIVE_FIELDS){\n        if (previousTask[field] !== task[field]) {\n            await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_1__.updateEntityLogField)(\"task\", task.id, field, previousTask[field], task[field]);\n        }\n    }\n}\n/**\r\n * Remove task effects when task is deleted\r\n * Tasks can have entries in multiple logs: tasks, financials, character, player, items\r\n */ async function removeTaskLogEntriesOnDelete(taskId) {\n    try {\n        console.log(\"[removeTaskLogEntriesOnDelete] Starting cleanup for task: \".concat(taskId));\n        // 1. Remove items created by this task\n        await (0,_item_creation_utils__WEBPACK_IMPORTED_MODULE_5__.removeItemsCreatedByTask)(taskId);\n        // 2. Remove financial records created by this task\n        await (0,_financial_record_utils__WEBPACK_IMPORTED_MODULE_7__.removeFinancialRecordsCreatedByTask)(taskId);\n        // 3. Remove player points that were awarded by this task (if points were badly given)\n        await removePlayerPointsFromTask(taskId);\n        // 3. Remove all Links related to this task\n        const taskLinks = await (0,_links_link_registry__WEBPACK_IMPORTED_MODULE_4__.getLinksFor)({\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n            id: taskId\n        });\n        console.log(\"[removeTaskLogEntriesOnDelete] Found \".concat(taskLinks.length, \" links to remove\"));\n        for (const link of taskLinks){\n            try {\n                await (0,_links_link_registry__WEBPACK_IMPORTED_MODULE_4__.removeLink)(link.id);\n                console.log(\"[removeTaskLogEntriesOnDelete] ✅ Removed link: \".concat(link.linkType));\n            } catch (error) {\n                console.error(\"[removeTaskLogEntriesOnDelete] ❌ Failed to remove link \".concat(link.id, \":\"), error);\n            }\n        }\n        // 4. Clear effects registry\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.clearEffect)(\"task:\".concat(taskId, \":created\"));\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.clearEffect)(\"task:\".concat(taskId, \":itemCreated\"));\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.clearEffect)(\"task:\".concat(taskId, \":financialCreated\"));\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.clearEffect)(\"task:\".concat(taskId, \":pointsAwarded\"));\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.clearEffectsByPrefix)(\"task\", taskId, \"pointsLogged:\");\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.clearEffectsByPrefix)(\"task\", taskId, \"financialLogged:\");\n        // 5. Remove log entries from all relevant logs\n        // Note: Log removal is handled client-side via API calls\n        // Server-side log removal would require implementing removeLogEntry in entities-logging.ts\n        console.log(\"[removeTaskLogEntriesOnDelete] Log entry removal handled client-side for task: \".concat(taskId));\n        console.log(\"[removeTaskLogEntriesOnDelete] ✅ Cleared effects, removed links for task \".concat(taskId));\n    } catch (error) {\n        console.error(\"Error removing task effects:\", error);\n    }\n}\n/**\r\n * Remove player points that were awarded by a specific task\r\n * This is used when rolling back a task that incorrectly awarded points\r\n */ async function removePlayerPointsFromTask(taskId) {\n    try {\n        var _task_rewards;\n        console.log(\"[removePlayerPointsFromTask] Removing points for task: \".concat(taskId));\n        // Get the task to find what points were awarded\n        const tasks = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_3__.getAllTasks)();\n        const task = tasks.find((t)=>t.id === taskId);\n        if (!task || !((_task_rewards = task.rewards) === null || _task_rewards === void 0 ? void 0 : _task_rewards.points)) {\n            console.log(\"[removePlayerPointsFromTask] Task \".concat(taskId, \" has no points to remove\"));\n            return;\n        }\n        // Get the main player\n        const mainPlayerId = (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_6__.getMainPlayerId)();\n        const players = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_3__.getAllPlayers)();\n        const mainPlayer = players.find((p)=>p.id === mainPlayerId);\n        if (!mainPlayer) {\n            console.log(\"[removePlayerPointsFromTask] Main player not found, skipping points removal\");\n            return;\n        }\n        // Check if any points were actually awarded\n        const pointsToRemove = task.rewards.points;\n        const hasPoints = (pointsToRemove.xp || 0) > 0 || (pointsToRemove.rp || 0) > 0 || (pointsToRemove.fp || 0) > 0 || (pointsToRemove.hp || 0) > 0;\n        if (!hasPoints) {\n            console.log(\"[removePlayerPointsFromTask] No points to remove from task \".concat(taskId));\n            return;\n        }\n        // Remove the points from the player\n        await (0,_points_rewards_utils__WEBPACK_IMPORTED_MODULE_6__.removePointsFromPlayer)(mainPlayerId, pointsToRemove);\n        console.log(\"[removePlayerPointsFromTask] ✅ Removed points from player: \".concat(JSON.stringify(pointsToRemove)));\n    } catch (error) {\n        console.error(\"[removePlayerPointsFromTask] ❌ Failed to remove player points for task \".concat(taskId, \":\"), error);\n    }\n}\n/**\r\n * Uncomplete a task and remove effects\r\n * This function handles when a task status changes back from Done\r\n * Reverses all side effects that were applied during completion\r\n */ async function uncompleteTask(taskId) {\n    try {\n        console.log(\"[uncompleteTask] Uncompleting task: \".concat(taskId));\n        // Get the task\n        const tasks = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_3__.getAllTasks)();\n        const task = tasks.find((t)=>t.id === taskId);\n        if (!task) {\n            console.log(\"[uncompleteTask] Task \".concat(taskId, \" not found\"));\n            return;\n        }\n        // Check if task was previously completed (has doneAt)\n        if (!task.doneAt) {\n            console.log(\"[uncompleteTask] Task \".concat(taskId, \" was not completed, nothing to uncomplete\"));\n            return;\n        }\n        console.log(\"[uncompleteTask] Reversing completion for task: \".concat(task.name));\n        // 1. Remove items created by this task\n        await (0,_item_creation_utils__WEBPACK_IMPORTED_MODULE_5__.removeItemsCreatedByTask)(taskId);\n        console.log(\"[uncompleteTask] ✅ Removed items created by task\");\n        // 2. Remove points awarded by this task\n        await removePlayerPointsFromTask(taskId);\n        console.log(\"[uncompleteTask] ✅ Removed points awarded by task\");\n        // 3. Clear effects registry entries\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.clearEffect)(\"task:\".concat(taskId, \":itemCreated\"));\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_2__.clearEffect)(\"task:\".concat(taskId, \":pointsAwarded\"));\n        console.log(\"[uncompleteTask] ✅ Cleared effects registry entries\");\n        // 4. Log UNCOMPLETED event\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_1__.appendEntityLog)(\"task\", taskId, \"UNCOMPLETED\", {\n            name: task.name,\n            previousStatus: \"Done\",\n            uncompletedAt: new Date().toISOString()\n        });\n        console.log(\"[uncompleteTask] ✅ Logged UNCOMPLETED event\");\n        console.log(\"[uncompleteTask] ✅ Successfully uncompleted task: \".concat(task.name));\n    } catch (error) {\n        console.error(\"[uncompleteTask] ❌ Failed to uncomplete task \".concat(taskId, \":\"), error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./workflows/entities-workflows/task.workflow.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./workflows/financial-record-utils.ts":
/*!*********************************************!*\
  !*** ./workflows/financial-record-utils.ts ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFinancialRecordFromSale: function() { return /* binding */ createFinancialRecordFromSale; },\n/* harmony export */   createFinancialRecordFromTask: function() { return /* binding */ createFinancialRecordFromTask; },\n/* harmony export */   processFinancialRecordCreationWithLinks: function() { return /* binding */ processFinancialRecordCreationWithLinks; },\n/* harmony export */   removeFinancialRecordsCreatedByTask: function() { return /* binding */ removeFinancialRecordsCreatedByTask; },\n/* harmony export */   updateFinancialRecordFromTask: function() { return /* binding */ updateFinancialRecordFromTask; }\n/* harmony export */ });\n/* harmony import */ var _types_enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/enums */ \"(app-pages-browser)/./types/enums.ts\");\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/client-api */ \"(app-pages-browser)/./lib/client-api.ts\");\n/* harmony import */ var _links_links_workflows__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/links/links-workflows */ \"(app-pages-browser)/./links/links-workflows.ts\");\n/* harmony import */ var _links_link_registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/links/link-registry */ \"(app-pages-browser)/./links/link-registry.ts\");\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./entities-logging */ \"(app-pages-browser)/./workflows/entities-logging.ts\");\n// workflows/financial-record-utils.ts\n// Financial record creation and management utilities\n\n\n\n\n\n/**\r\n * Create a financial record from a task (when task has cost or revenue)\r\n * This implements the emissary pattern: Task DNA → FinancialRecord entity\r\n */ async function createFinancialRecordFromTask(task) {\n    try {\n        console.log(\"[createFinancialRecordFromTask] Starting financial record creation for task: \".concat(task.name, \" (\").concat(task.id, \")\"));\n        // Check if task has cost or revenue\n        if (!task.cost && !task.revenue) {\n            console.log(\"[createFinancialRecordFromTask] Task \".concat(task.name, \" has no cost or revenue, skipping financial record creation\"));\n            return null;\n        }\n        // IDEMPOTENCY CHECK: Look for existing financial record created by this task\n        const allFinancials = await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.getFinancialRecords();\n        const existingFinrec = allFinancials.find((fr)=>fr.sourceTaskId === task.id);\n        if (existingFinrec) {\n            console.log(\"[createFinancialRecordFromTask] Financial record already exists for task \".concat(task.id, \", skipping creation\"));\n            return existingFinrec;\n        }\n        const currentDate = new Date();\n        const newFinrec = {\n            id: \"finrec-\".concat(task.id, \"-\").concat(Date.now()),\n            name: task.name,\n            description: \"Financial record from task: \".concat(task.name),\n            year: currentDate.getFullYear(),\n            month: currentDate.getMonth() + 1,\n            station: task.station,\n            type: \"company\",\n            siteId: task.siteId,\n            targetSiteId: task.targetSiteId,\n            sourceTaskId: task.id,\n            cost: task.cost || 0,\n            revenue: task.revenue || 0,\n            jungleCoins: 0,\n            isNotPaid: task.isNotPaid,\n            isNotCharged: task.isNotCharged,\n            rewards: task.rewards,\n            netCashflow: (task.revenue || 0) - (task.cost || 0),\n            jungleCoinsValue: 0,\n            isCollected: false,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            links: []\n        };\n        // Store the financial record\n        console.log(\"[createFinancialRecordFromTask] Creating new financial record:\", newFinrec);\n        const createdFinrec = await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.upsertFinancialRecord(newFinrec);\n        // Create TASK_FINREC link with metadata\n        const linkMetadata = {\n            cost: task.cost || 0,\n            revenue: task.revenue || 0,\n            isNotPaid: task.isNotPaid || false,\n            isNotCharged: task.isNotCharged || false,\n            rewards: task.rewards,\n            netCashflow: newFinrec.netCashflow,\n            createdFrom: \"task\"\n        };\n        const link = (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_2__.makeLink)(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.TASK_FINREC, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n            id: task.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL,\n            id: createdFinrec.id\n        }, linkMetadata);\n        await (0,_links_link_registry__WEBPACK_IMPORTED_MODULE_3__.createLink)(link);\n        console.log(\"[createFinancialRecordFromTask] ✅ Financial record created and TASK_FINREC link established: \".concat(createdFinrec.name));\n        return createdFinrec;\n    } catch (error) {\n        console.error(\"[createFinancialRecordFromTask] ❌ Failed to create financial record from task \".concat(task.id, \":\"), error);\n        throw error;\n    }\n}\n/**\r\n * Update an existing financial record when task properties change\r\n * This ensures financial records stay in sync with their source tasks\r\n */ async function updateFinancialRecordFromTask(task, previousTask) {\n    try {\n        console.log(\"[updateFinancialRecordFromTask] Updating financial record for task: \".concat(task.name, \" (\").concat(task.id, \")\"));\n        // Find the existing financial record created by this task\n        const allFinancials = await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.getFinancialRecords();\n        const existingFinrec = allFinancials.find((fr)=>fr.sourceTaskId === task.id);\n        if (!existingFinrec) {\n            console.log(\"[updateFinancialRecordFromTask] No financial record found for task \".concat(task.id, \", creating new one\"));\n            await createFinancialRecordFromTask(task);\n            return;\n        }\n        // Check if any financial properties changed\n        const financialPropsChanged = previousTask.cost !== task.cost || previousTask.revenue !== task.revenue || previousTask.isNotPaid !== task.isNotPaid || previousTask.isNotCharged !== task.isNotCharged || previousTask.name !== task.name || previousTask.station !== task.station || previousTask.siteId !== task.siteId || previousTask.targetSiteId !== task.targetSiteId;\n        if (!financialPropsChanged) {\n            console.log(\"[updateFinancialRecordFromTask] No financial properties changed for task \".concat(task.id, \", skipping update\"));\n            return;\n        }\n        // Update the financial record with new task data\n        const updatedFinrec = {\n            ...existingFinrec,\n            name: task.name,\n            description: \"Financial record from task: \".concat(task.name),\n            cost: task.cost || 0,\n            revenue: task.revenue || 0,\n            station: task.station,\n            siteId: task.siteId,\n            targetSiteId: task.targetSiteId,\n            isNotPaid: task.isNotPaid,\n            isNotCharged: task.isNotCharged,\n            rewards: task.rewards,\n            netCashflow: (task.revenue || 0) - (task.cost || 0),\n            updatedAt: new Date()\n        };\n        // Store the updated financial record\n        console.log(\"[updateFinancialRecordFromTask] Updating financial record:\", updatedFinrec);\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.upsertFinancialRecord(updatedFinrec);\n        // Log the update\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_4__.appendEntityLog)(\"financial\", existingFinrec.id, \"UPDATED\", {\n            name: task.name,\n            updatedFrom: \"task\",\n            changes: {\n                cost: {\n                    from: previousTask.cost || 0,\n                    to: task.cost || 0\n                },\n                revenue: {\n                    from: previousTask.revenue || 0,\n                    to: task.revenue || 0\n                },\n                isNotPaid: {\n                    from: previousTask.isNotPaid || false,\n                    to: task.isNotPaid || false\n                },\n                isNotCharged: {\n                    from: previousTask.isNotCharged || false,\n                    to: task.isNotCharged || false\n                }\n            },\n            updatedAt: new Date().toISOString()\n        });\n        console.log(\"[updateFinancialRecordFromTask] ✅ Financial record updated successfully for task: \".concat(task.name));\n    } catch (error) {\n        console.error(\"[updateFinancialRecordFromTask] ❌ Failed to update financial record for task \".concat(task.id, \":\"), error);\n        throw error;\n    }\n}\n/**\r\n * Remove financial records created by a specific task\r\n * This is used when a task is deleted to clean up associated financial records\r\n */ async function removeFinancialRecordsCreatedByTask(taskId) {\n    try {\n        console.log(\"[removeFinancialRecordsCreatedByTask] Removing financial records created by task: \".concat(taskId));\n        // Find financial records created by this task\n        const allFinancials = await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.getFinancialRecords();\n        const taskFinancials = allFinancials.filter((fr)=>fr.sourceTaskId === taskId);\n        if (taskFinancials.length === 0) {\n            console.log(\"[removeFinancialRecordsCreatedByTask] No financial records found for task \".concat(taskId));\n            return;\n        }\n        console.log(\"[removeFinancialRecordsCreatedByTask] Found \".concat(taskFinancials.length, \" financial record(s) to remove\"));\n        // Remove each financial record\n        for (const financial of taskFinancials){\n            try {\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.deleteFinancialRecord(financial.id);\n                console.log(\"[removeFinancialRecordsCreatedByTask] ✅ Removed financial record: \".concat(financial.name));\n            } catch (error) {\n                console.error(\"[removeFinancialRecordsCreatedByTask] ❌ Failed to remove financial record \".concat(financial.id, \":\"), error);\n            }\n        }\n        console.log(\"[removeFinancialRecordsCreatedByTask] ✅ Removed \".concat(taskFinancials.length, \" financial record(s) for task \").concat(taskId));\n    } catch (error) {\n        console.error(\"[removeFinancialRecordsCreatedByTask] ❌ Failed to remove financial records for task \".concat(taskId, \":\"), error);\n        throw error;\n    }\n}\n/**\r\n * Create a financial record from a sale (when sale has revenue)\r\n * This implements the emissary pattern: Sale DNA → FinancialRecord entity\r\n */ async function createFinancialRecordFromSale(sale) {\n    try {\n        console.log(\"[createFinancialRecordFromSale] Creating financial record from sale: \".concat(sale.counterpartyName));\n        // Check if sale has revenue\n        if (sale.totals.totalRevenue <= 0) {\n            console.log(\"[createFinancialRecordFromSale] Sale \".concat(sale.id, \" has no revenue, skipping financial record creation\"));\n            return null;\n        }\n        // IDEMPOTENCY CHECK: Look for existing financial record created by this sale\n        const allFinancials = await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.getFinancialRecords();\n        const existingFinrec = allFinancials.find((fr)=>fr.sourceSaleId === sale.id);\n        if (existingFinrec) {\n            console.log(\"[createFinancialRecordFromSale] Financial record already exists for sale \".concat(sale.id, \", skipping creation\"));\n            return existingFinrec;\n        }\n        const currentDate = new Date();\n        const newFinrec = {\n            id: \"finrec-\".concat(sale.id, \"-\").concat(Date.now()),\n            name: \"Sale: \".concat(sale.counterpartyName),\n            description: \"Financial record from sale: \".concat(sale.counterpartyName),\n            year: currentDate.getFullYear(),\n            month: currentDate.getMonth() + 1,\n            station: \"Sales\",\n            type: \"company\",\n            siteId: sale.siteId,\n            targetSiteId: undefined,\n            sourceSaleId: sale.id,\n            cost: 0,\n            revenue: sale.totals.totalRevenue,\n            jungleCoins: 0,\n            isNotPaid: sale.isNotPaid || false,\n            isNotCharged: sale.isNotCharged || false,\n            rewards: {\n                points: {\n                    xp: 0,\n                    rp: 0,\n                    fp: 0,\n                    hp: 0\n                }\n            },\n            netCashflow: sale.totals.totalRevenue,\n            jungleCoinsValue: 0,\n            isCollected: false,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            links: []\n        };\n        // Store the financial record\n        console.log(\"[createFinancialRecordFromSale] Creating financial record:\", newFinrec);\n        const createdFinrec = await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.upsertFinancialRecord(newFinrec);\n        // Create SALE_FINREC link\n        const linkMetadata = {\n            revenue: sale.totals.totalRevenue,\n            isNotPaid: sale.isNotPaid || false,\n            isNotCharged: sale.isNotCharged || false,\n            netCashflow: newFinrec.netCashflow,\n            createdFrom: \"sale\"\n        };\n        const link = (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_2__.makeLink)(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.SALE_FINREC, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE,\n            id: sale.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.FINANCIAL,\n            id: createdFinrec.id\n        }, linkMetadata);\n        await (0,_links_link_registry__WEBPACK_IMPORTED_MODULE_3__.createLink)(link);\n        console.log(\"[createFinancialRecordFromSale] ✅ Financial record created and SALE_FINREC link established: \".concat(createdFinrec.name));\n        return createdFinrec;\n    } catch (error) {\n        console.error(\"[createFinancialRecordFromSale] ❌ Failed to create financial record from sale \".concat(sale.id, \":\"), error);\n        throw error;\n    }\n}\n/**\r\n * Enhanced financial record creation - pure business logic, no link creation\r\n */ async function processFinancialRecordCreationWithLinks(record) {\n    console.log(\"[processFinancialRecordCreationWithLinks] Processing financial record creation: \".concat(record.name, \" (\").concat(record.id, \")\"));\n    return record;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./workflows/financial-record-utils.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./workflows/item-creation-utils.ts":
/*!******************************************!*\
  !*** ./workflows/item-creation-utils.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createItemFromRecord: function() { return /* binding */ createItemFromRecord; },\n/* harmony export */   createItemFromTask: function() { return /* binding */ createItemFromTask; },\n/* harmony export */   getDefaultItemStatus: function() { return /* binding */ getDefaultItemStatus; },\n/* harmony export */   processItemCreationWithLinks: function() { return /* binding */ processItemCreationWithLinks; },\n/* harmony export */   removeItemsCreatedByRecord: function() { return /* binding */ removeItemsCreatedByRecord; },\n/* harmony export */   removeItemsCreatedByTask: function() { return /* binding */ removeItemsCreatedByTask; }\n/* harmony export */ });\n/* harmony import */ var _types_enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/enums */ \"(app-pages-browser)/./types/enums.ts\");\n/* harmony import */ var _data_store_datastore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/datastore */ \"(app-pages-browser)/./data-store/datastore.ts\");\n/* harmony import */ var _data_store_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/data-store/repositories/item.repo */ \"(app-pages-browser)/./data-store/repositories/item.repo.ts\");\n// workflows/item-creation-utils.ts\n// Item Creation System - DNA/RNA Molecular Pattern Implementation\n// Creates items from Tasks and Financial Records using emissary fields\n\n\n\n/**\r\n * Determines the default item status based on item type and sale status\r\n * All newly created items start as CREATED, regardless of type\r\n * Their status will change based on business logic later\r\n */ function getDefaultItemStatus(itemType) {\n    let isSold = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    if (isSold) {\n        return _types_enums__WEBPACK_IMPORTED_MODULE_0__.ItemStatus.SOLD;\n    }\n    // All newly created items start as CREATED, regardless of type\n    // Their status will change based on business logic later\n    return _types_enums__WEBPACK_IMPORTED_MODULE_0__.ItemStatus.CREATED;\n}\n/**\r\n * Creates an Item entity from a Task's emissary fields\r\n * IDEMPOTENT: Checks if item already exists before creating\r\n * Uses atomic operations to prevent race conditions\r\n */ async function createItemFromTask(task) {\n    try {\n        console.log(\"[createItemFromTask] Starting item creation for task: \".concat(task.name, \" (\").concat(task.id, \")\"));\n        console.log(\"[createItemFromTask] outputItemType: \".concat(task.outputItemType));\n        console.log(\"[createItemFromTask] outputQuantity: \".concat(task.outputQuantity));\n        if (!task.outputItemType) {\n            console.error(\"Cannot create item: outputItemType is required\");\n            return null;\n        }\n        // IDEMPOTENCY CHECK: Look for existing item created by this task\n        console.log(\"[createItemFromTask] Checking for existing items...\");\n        const allItems = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllItems)();\n        console.log(\"[createItemFromTask] Found \".concat(allItems.length, \" total items\"));\n        const existingItems = allItems.filter((item)=>item.sourceTaskId === task.id && item.type === task.outputItemType);\n        console.log(\"[createItemFromTask] Found \".concat(existingItems.length, \" existing items for this task\"));\n        if (existingItems.length > 0) {\n            console.log(\"[createItemFromTask] Item already exists, skipping creation\");\n            return existingItems[0]; // Return existing item\n        }\n        const newItem = {\n            id: \"item-\".concat(task.id, \"-\").concat(Date.now()),\n            name: task.outputItemName || \"\".concat(task.outputItemType, \" from \").concat(task.name),\n            description: \"Created from task: \".concat(task.name),\n            type: task.outputItemType,\n            collection: task.outputItemCollection || undefined,\n            status: getDefaultItemStatus(task.outputItemType || \"\", task.isSold || false),\n            station: task.station,\n            unitCost: task.outputUnitCost || 0,\n            additionalCost: 0,\n            price: task.outputItemPrice || 0,\n            value: 0,\n            quantitySold: 0,\n            sourceTaskId: task.id,\n            ownerCharacterId: task.customerCharacterId || null,\n            isCollected: false,\n            year: new Date().getFullYear(),\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            links: [],\n            stock: [\n                {\n                    siteId: task.targetSiteId || task.siteId || \"home-storage\",\n                    quantity: task.outputQuantity || 1\n                }\n            ]\n        };\n        // Store the item in DataStore\n        console.log(\"[createItemFromTask] Creating new item:\", newItem);\n        const createdItem = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.upsertItem)(newItem);\n        console.log(\"[createItemFromTask] ✅ Item created successfully\");\n        return createdItem;\n    } catch (error) {\n        console.error(\"Error creating item from task:\", error);\n        return null;\n    }\n}\n/**\r\n * Creates an Item entity from a Financial Record's emissary fields\r\n * IDEMPOTENT: Checks if item already exists before creating\r\n * Uses atomic operations to prevent race conditions\r\n */ async function createItemFromRecord(record) {\n    try {\n        console.log(\"[createItemFromRecord] Starting item creation for record: \".concat(record.name, \" (\").concat(record.id, \")\"));\n        console.log(\"[createItemFromRecord] outputItemType: \".concat(record.outputItemType));\n        console.log(\"[createItemFromRecord] outputQuantity: \".concat(record.outputQuantity));\n        if (!record.outputItemType) {\n            console.error(\"Cannot create item: outputItemType is required\");\n            return null;\n        }\n        // IDEMPOTENCY CHECK: Look for existing item created by this record\n        console.log(\"[createItemFromRecord] Checking for existing items...\");\n        const allItems = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllItems)();\n        console.log(\"[createItemFromRecord] Found \".concat(allItems.length, \" total items\"));\n        const existingItems = allItems.filter((item)=>item.sourceRecordId === record.id && item.type === record.outputItemType);\n        console.log(\"[createItemFromRecord] Found \".concat(existingItems.length, \" existing items for this record\"));\n        if (existingItems.length > 0) {\n            console.log(\"[createItemFromRecord] Item already exists, skipping creation\");\n            return existingItems[0]; // Return existing item\n        }\n        const newItem = {\n            id: \"item-\".concat(record.id, \"-\").concat(Date.now()),\n            name: record.outputItemName || \"\".concat(record.outputItemType, \" from \").concat(record.name),\n            description: \"Created from record: \".concat(record.name),\n            type: record.outputItemType,\n            collection: record.outputItemCollection || undefined,\n            status: getDefaultItemStatus(record.outputItemType || \"\", record.isSold || false),\n            station: record.station,\n            unitCost: record.outputUnitCost || 0,\n            additionalCost: 0,\n            price: record.outputItemPrice || 0,\n            value: 0,\n            quantitySold: 0,\n            sourceRecordId: record.id,\n            isCollected: false,\n            year: record.year,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            links: [],\n            stock: [\n                {\n                    siteId: record.siteId || \"home-storage\",\n                    quantity: record.outputQuantity || 1\n                }\n            ]\n        };\n        // Store the item in DataStore\n        console.log(\"[createItemFromRecord] Creating new item:\", newItem);\n        const createdItem = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.upsertItem)(newItem);\n        console.log(\"[createItemFromRecord] ✅ Item created successfully\");\n        return createdItem;\n    } catch (error) {\n        console.error(\"Error creating item from record:\", error);\n        return null;\n    }\n}\n/**\r\n * Removes all items created by a specific task\r\n * Used when task is uncompleted or deleted\r\n */ async function removeItemsCreatedByTask(taskId) {\n    try {\n        console.log(\"[removeItemsCreatedByTask] Removing items created by task: \".concat(taskId));\n        const items = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllItems)();\n        const itemsToRemove = items.filter((item)=>item.sourceTaskId === taskId);\n        console.log(\"[removeItemsCreatedByTask] Found \".concat(itemsToRemove.length, \" items to remove\"));\n        // Remove each item created by this task\n        for (const item of itemsToRemove){\n            try {\n                await (0,_data_store_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__.deleteItem)(item.id);\n                console.log(\"[removeItemsCreatedByTask] ✅ Removed item: \".concat(item.name, \" (\").concat(item.id, \")\"));\n            } catch (error) {\n                console.error(\"[removeItemsCreatedByTask] ❌ Failed to remove item \".concat(item.id, \":\"), error);\n            }\n        }\n        // Dispatch event to update UI\n        if (true) {\n            window.dispatchEvent(new CustomEvent(\"itemsUpdated\"));\n        }\n        console.log(\"[removeItemsCreatedByTask] ✅ Completed removal of \".concat(itemsToRemove.length, \" items\"));\n    } catch (error) {\n        console.error(\"Error removing items created by task:\", error);\n    }\n}\n/**\r\n * Removes all items created by a specific financial record\r\n * Used when financial record is deleted\r\n */ async function removeItemsCreatedByRecord(recordId) {\n    try {\n        console.log(\"[removeItemsCreatedByRecord] Removing items created by record: \".concat(recordId));\n        const items = await (0,_data_store_datastore__WEBPACK_IMPORTED_MODULE_1__.getAllItems)();\n        const itemsToRemove = items.filter((item)=>item.sourceRecordId === recordId);\n        console.log(\"[removeItemsCreatedByRecord] Found \".concat(itemsToRemove.length, \" items to remove\"));\n        // Remove each item created by this record\n        for (const item of itemsToRemove){\n            try {\n                await (0,_data_store_repositories_item_repo__WEBPACK_IMPORTED_MODULE_2__.deleteItem)(item.id);\n                console.log(\"[removeItemsCreatedByRecord] ✅ Removed item: \".concat(item.name, \" (\").concat(item.id, \")\"));\n            } catch (error) {\n                console.error(\"[removeItemsCreatedByRecord] ❌ Failed to remove item \".concat(item.id, \":\"), error);\n            }\n        }\n        // Dispatch event to update UI\n        if (true) {\n            window.dispatchEvent(new CustomEvent(\"itemsUpdated\"));\n        }\n        console.log(\"[removeItemsCreatedByRecord] ✅ Completed removal of \".concat(itemsToRemove.length, \" items\"));\n    } catch (error) {\n        console.error(\"Error removing items created by record:\", error);\n    }\n}\n/**\r\n * Enhanced item creation - pure business logic, no link creation\r\n */ async function processItemCreationWithLinks(item) {\n    console.log(\"[processItemCreationWithLinks] Processing item creation: \".concat(item.name, \" (\").concat(item.id, \")\"));\n    return item;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./workflows/item-creation-utils.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./workflows/points-rewards-utils.ts":
/*!*******************************************!*\
  !*** ./workflows/points-rewards-utils.ts ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   awardJungleCoinsToCharacter: function() { return /* binding */ awardJungleCoinsToCharacter; },\n/* harmony export */   awardPointsToPlayer: function() { return /* binding */ awardPointsToPlayer; },\n/* harmony export */   calculatePointsFromRevenue: function() { return /* binding */ calculatePointsFromRevenue; },\n/* harmony export */   getMainCharacterId: function() { return /* binding */ getMainCharacterId; },\n/* harmony export */   getMainPlayerId: function() { return /* binding */ getMainPlayerId; },\n/* harmony export */   removeJungleCoinsFromCharacter: function() { return /* binding */ removeJungleCoinsFromCharacter; },\n/* harmony export */   removePointsFromPlayer: function() { return /* binding */ removePointsFromPlayer; }\n/* harmony export */ });\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/client-api */ \"(app-pages-browser)/./lib/client-api.ts\");\n/* harmony import */ var _links_links_workflows__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/links/links-workflows */ \"(app-pages-browser)/./links/links-workflows.ts\");\n/* harmony import */ var _links_link_registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/links/link-registry */ \"(app-pages-browser)/./links/link-registry.ts\");\n/* harmony import */ var _types_enums__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/types/enums */ \"(app-pages-browser)/./types/enums.ts\");\n// thegame/workflows/points-rewards-utils.ts\n\n\n\n\n/**\r\n * Awards points to a player with idempotency and proper tracking\r\n * @param playerId - ID of the player to award points to\r\n * @param points - Points to award (XP, RP, FP, HP)\r\n * @param sourceId - ID of the entity that triggered the award\r\n * @param sourceType - Type of entity (task, financial, sale)\r\n */ async function awardPointsToPlayer(playerId, points, sourceId, sourceType) {\n    try {\n        var _player_points, _player_points1, _player_points2, _player_points3, _player_totalPoints, _player_totalPoints1, _player_totalPoints2, _player_totalPoints3;\n        console.log(\"[awardPointsToPlayer] Awarding points to player \".concat(playerId, \" from \").concat(sourceType, \" \").concat(sourceId));\n        // Get the player\n        const players = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getPlayers();\n        const player = players.find((p)=>p.id === playerId);\n        if (!player) {\n            console.log(\"[awardPointsToPlayer] Player \".concat(playerId, \" not found, skipping\"));\n            return;\n        }\n        // Check if any points to award\n        const hasPoints = (points.xp || 0) > 0 || (points.rp || 0) > 0 || (points.fp || 0) > 0 || (points.hp || 0) > 0;\n        if (!hasPoints) {\n            console.log(\"[awardPointsToPlayer] No points to award, skipping\");\n            return;\n        }\n        // Update player points\n        const updatedPlayer = {\n            ...player,\n            points: {\n                xp: (((_player_points = player.points) === null || _player_points === void 0 ? void 0 : _player_points.xp) || 0) + (points.xp || 0),\n                rp: (((_player_points1 = player.points) === null || _player_points1 === void 0 ? void 0 : _player_points1.rp) || 0) + (points.rp || 0),\n                fp: (((_player_points2 = player.points) === null || _player_points2 === void 0 ? void 0 : _player_points2.fp) || 0) + (points.fp || 0),\n                hp: (((_player_points3 = player.points) === null || _player_points3 === void 0 ? void 0 : _player_points3.hp) || 0) + (points.hp || 0)\n            },\n            totalPoints: {\n                xp: (((_player_totalPoints = player.totalPoints) === null || _player_totalPoints === void 0 ? void 0 : _player_totalPoints.xp) || 0) + (points.xp || 0),\n                rp: (((_player_totalPoints1 = player.totalPoints) === null || _player_totalPoints1 === void 0 ? void 0 : _player_totalPoints1.rp) || 0) + (points.rp || 0),\n                fp: (((_player_totalPoints2 = player.totalPoints) === null || _player_totalPoints2 === void 0 ? void 0 : _player_totalPoints2.fp) || 0) + (points.fp || 0),\n                hp: (((_player_totalPoints3 = player.totalPoints) === null || _player_totalPoints3 === void 0 ? void 0 : _player_totalPoints3.hp) || 0) + (points.hp || 0)\n            },\n            updatedAt: new Date()\n        };\n        // Save updated player\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertPlayer(updatedPlayer);\n        console.log(\"[awardPointsToPlayer] ✅ Points awarded successfully:\", points);\n        // Create appropriate link based on source type - use forward links (SOURCE → PLAYER)\n        let linkType;\n        let sourceEntityType;\n        switch(sourceType){\n            case \"task\":\n                linkType = _types_enums__WEBPACK_IMPORTED_MODULE_3__.LinkType.TASK_PLAYER;\n                sourceEntityType = _types_enums__WEBPACK_IMPORTED_MODULE_3__.EntityType.TASK;\n                break;\n            case \"financial\":\n                linkType = _types_enums__WEBPACK_IMPORTED_MODULE_3__.LinkType.FINREC_PLAYER;\n                sourceEntityType = _types_enums__WEBPACK_IMPORTED_MODULE_3__.EntityType.FINANCIAL;\n                break;\n            case \"sale\":\n                linkType = _types_enums__WEBPACK_IMPORTED_MODULE_3__.LinkType.SALE_PLAYER;\n                sourceEntityType = _types_enums__WEBPACK_IMPORTED_MODULE_3__.EntityType.SALE;\n                break;\n            default:\n                console.warn(\"[awardPointsToPlayer] Unknown source type: \".concat(sourceType));\n                return;\n        }\n        // Create link with points metadata (forward link: SOURCE → PLAYER)\n        const link = (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_1__.makeLink)(linkType, {\n            type: sourceEntityType,\n            id: sourceId\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_3__.EntityType.PLAYER,\n            id: playerId\n        }, {\n            points: points,\n            sourceType: sourceType,\n            awardedAt: new Date().toISOString()\n        });\n        await (0,_links_link_registry__WEBPACK_IMPORTED_MODULE_2__.createLink)(link);\n        console.log(\"[awardPointsToPlayer] ✅ Link created: \".concat(linkType));\n    } catch (error) {\n        console.error(\"[awardPointsToPlayer] ❌ Failed to award points:\", error);\n        throw error;\n    }\n}\n/**\r\n * Removes points from a player (rollback function)\r\n * @param playerId - ID of the player to remove points from\r\n * @param points - Points to remove (XP, RP, FP, HP)\r\n */ async function removePointsFromPlayer(playerId, points) {\n    try {\n        var _player_points, _player_points1, _player_points2, _player_points3;\n        console.log(\"[removePointsFromPlayer] Removing points from player \".concat(playerId));\n        // Get the player\n        const players = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getPlayers();\n        const player = players.find((p)=>p.id === playerId);\n        if (!player) {\n            console.log(\"[removePointsFromPlayer] Player \".concat(playerId, \" not found, skipping\"));\n            return;\n        }\n        // Check if any points to remove\n        const hasPoints = (points.xp || 0) > 0 || (points.rp || 0) > 0 || (points.fp || 0) > 0 || (points.hp || 0) > 0;\n        if (!hasPoints) {\n            console.log(\"[removePointsFromPlayer] No points to remove, skipping\");\n            return;\n        }\n        // Update player points (ensure they don't go negative)\n        const updatedPlayer = {\n            ...player,\n            points: {\n                xp: Math.max(0, (((_player_points = player.points) === null || _player_points === void 0 ? void 0 : _player_points.xp) || 0) - (points.xp || 0)),\n                rp: Math.max(0, (((_player_points1 = player.points) === null || _player_points1 === void 0 ? void 0 : _player_points1.rp) || 0) - (points.rp || 0)),\n                fp: Math.max(0, (((_player_points2 = player.points) === null || _player_points2 === void 0 ? void 0 : _player_points2.fp) || 0) - (points.fp || 0)),\n                hp: Math.max(0, (((_player_points3 = player.points) === null || _player_points3 === void 0 ? void 0 : _player_points3.hp) || 0) - (points.hp || 0))\n            },\n            // Note: totalPoints are NOT reduced (they track lifetime earnings)\n            updatedAt: new Date()\n        };\n        // Save updated player\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertPlayer(updatedPlayer);\n        console.log(\"[removePointsFromPlayer] ✅ Points removed successfully:\", points);\n    } catch (error) {\n        console.error(\"[removePointsFromPlayer] ❌ Failed to remove points:\", error);\n        throw error;\n    }\n}\n/**\r\n * Awards jungle coins to a character\r\n * @param characterId - ID of the character to award jungle coins to\r\n * @param amount - Amount of jungle coins to award\r\n * @param sourceId - ID of the entity that triggered the award\r\n * @param sourceType - Type of entity (task, financial, sale)\r\n */ async function awardJungleCoinsToCharacter(characterId, amount, sourceId, sourceType) {\n    try {\n        console.log(\"[awardJungleCoinsToCharacter] Awarding \".concat(amount, \" J$ to character \").concat(characterId, \" from \").concat(sourceType, \" \").concat(sourceId));\n        if (amount <= 0) {\n            console.log(\"[awardJungleCoinsToCharacter] No jungle coins to award, skipping\");\n            return;\n        }\n        // Get the character\n        const characters = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getCharacters();\n        const character = characters.find((c)=>c.id === characterId);\n        if (!character) {\n            console.log(\"[awardJungleCoinsToCharacter] Character \".concat(characterId, \" not found, skipping\"));\n            return;\n        }\n        // Update character jungle coins\n        const updatedCharacter = {\n            ...character,\n            jungleCoins: (character.jungleCoins || 0) + amount,\n            updatedAt: new Date()\n        };\n        // Save updated character\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertCharacter(updatedCharacter);\n        console.log(\"[awardJungleCoinsToCharacter] ✅ Jungle coins awarded successfully: \".concat(amount, \" J$\"));\n        // NOTE: J$ (Jungle Coins) are CURRENCY that belongs to FINANCIALS\n        // They can be borrowed as AMBASSADOR by Player and Character, but don't belong to them\n        // No link creation needed here - J$ are handled by the Financial system\n        console.log(\"[awardJungleCoinsToCharacter] ✅ Jungle coins awarded to character (J$ handled by Financial system)\");\n    } catch (error) {\n        console.error(\"[awardJungleCoinsToCharacter] ❌ Failed to award jungle coins:\", error);\n        throw error;\n    }\n}\n/**\r\n * Removes jungle coins from a character (rollback function)\r\n * @param characterId - ID of the character to remove jungle coins from\r\n * @param amount - Amount of jungle coins to remove\r\n */ async function removeJungleCoinsFromCharacter(characterId, amount) {\n    try {\n        console.log(\"[removeJungleCoinsFromCharacter] Removing \".concat(amount, \" J$ from character \").concat(characterId));\n        if (amount <= 0) {\n            console.log(\"[removeJungleCoinsFromCharacter] No jungle coins to remove, skipping\");\n            return;\n        }\n        // Get the character\n        const characters = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getCharacters();\n        const character = characters.find((c)=>c.id === characterId);\n        if (!character) {\n            console.log(\"[removeJungleCoinsFromCharacter] Character \".concat(characterId, \" not found, skipping\"));\n            return;\n        }\n        // Update character jungle coins (ensure they don't go negative)\n        const updatedCharacter = {\n            ...character,\n            jungleCoins: Math.max(0, (character.jungleCoins || 0) - amount),\n            updatedAt: new Date()\n        };\n        // Save updated character\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertCharacter(updatedCharacter);\n        console.log(\"[removeJungleCoinsFromCharacter] ✅ Jungle coins removed successfully: \".concat(amount, \" J$\"));\n    } catch (error) {\n        console.error(\"[removeJungleCoinsFromCharacter] ❌ Failed to remove jungle coins:\", error);\n        throw error;\n    }\n}\n/**\r\n * Calculates points from sale revenue (1 Point = $100)\r\n * @param revenue - Revenue amount in dollars\r\n * @returns Points to award (distributed across all types)\r\n */ function calculatePointsFromRevenue(revenue) {\n    const pointsAwarded = Math.floor(revenue / 100);\n    if (pointsAwarded <= 0) {\n        return {\n            xp: 0,\n            rp: 0,\n            fp: 0,\n            hp: 0\n        };\n    }\n    // Distribute points across all types equally\n    const pointsPerType = Math.floor(pointsAwarded / 4);\n    const remainder = pointsAwarded % 4;\n    return {\n        xp: pointsPerType + (remainder > 0 ? 1 : 0),\n        rp: pointsPerType + (remainder > 1 ? 1 : 0),\n        fp: pointsPerType + (remainder > 2 ? 1 : 0),\n        hp: pointsPerType\n    };\n}\n/**\r\n * Gets the main player ID (V0.1 constant)\r\n * TODO: V0.2 - Use character.playerId field\r\n */ function getMainPlayerId() {\n    return \"PLAYER_ONE_ID\"; // V0.1 constant\n}\n/**\r\n * Gets the main character ID (V0.1 constant)\r\n * TODO: V0.2 - Use proper character selection\r\n */ function getMainCharacterId() {\n    return \"CHARACTER_ONE_ID\"; // V0.1 constant\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./workflows/points-rewards-utils.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./workflows/sale-line-utils.ts":
/*!**************************************!*\
  !*** ./workflows/sale-line-utils.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processBundleSaleLine: function() { return /* binding */ processBundleSaleLine; },\n/* harmony export */   processItemSaleLine: function() { return /* binding */ processItemSaleLine; },\n/* harmony export */   processSaleLines: function() { return /* binding */ processSaleLines; },\n/* harmony export */   processServiceLine: function() { return /* binding */ processServiceLine; }\n/* harmony export */ });\n/* harmony import */ var _types_enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/enums */ \"(app-pages-browser)/./types/enums.ts\");\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/client-api */ \"(app-pages-browser)/./lib/client-api.ts\");\n/* harmony import */ var _links_links_workflows__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/links/links-workflows */ \"(app-pages-browser)/./links/links-workflows.ts\");\n/* harmony import */ var _links_link_registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/links/link-registry */ \"(app-pages-browser)/./links/link-registry.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(app-pages-browser)/./data-store/effects-registry.ts\");\n/* harmony import */ var _entities_logging__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./entities-logging */ \"(app-pages-browser)/./workflows/entities-logging.ts\");\n/* harmony import */ var _financial_record_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./financial-record-utils */ \"(app-pages-browser)/./workflows/financial-record-utils.ts\");\n// workflows/sale-line-utils.ts\n// Sale line processing utilities\n\n\n\n\n\n\n\n/**\r\n * Process all sale lines in a sale\r\n * Main dispatcher that processes each line based on its kind\r\n */ async function processSaleLines(sale) {\n    try {\n        console.log(\"[processSaleLines] Processing \".concat(sale.lines.length, \" lines for sale: \").concat(sale.counterpartyName));\n        // Process each line based on its kind\n        for (const line of sale.lines){\n            console.log(\"[processSaleLines] Processing line: \".concat(line.kind, \", lineId: \").concat(line.lineId));\n            switch(line.kind){\n                case \"item\":\n                    await processItemSaleLine(line, sale);\n                    break;\n                case \"bundle\":\n                    await processBundleSaleLine(line, sale);\n                    break;\n                case \"service\":\n                    await processServiceLine(line, sale);\n                    break;\n                default:\n                    console.warn(\"[processSaleLines] Unknown line kind: \".concat(line.kind));\n            }\n        }\n        // Create financial record from sale if it has revenue\n        if (sale.totals.totalRevenue > 0) {\n            await (0,_financial_record_utils__WEBPACK_IMPORTED_MODULE_6__.createFinancialRecordFromSale)(sale);\n        }\n        console.log(\"[processSaleLines] ✅ Processed all lines for sale: \".concat(sale.counterpartyName));\n    } catch (error) {\n        console.error(\"[processSaleLines] ❌ Failed to process sale lines for sale \".concat(sale.id, \":\"), error);\n        throw error;\n    }\n}\n/**\r\n * Process item sale line - reduce item stock at specific site\r\n */ async function processItemSaleLine(line, sale) {\n    try {\n        console.log(\"[processItemSaleLine] Processing item sale: \".concat(line.itemId, \", quantity: \").concat(line.quantity));\n        // Idempotency check\n        const stockDecrementedKey = \"sale:\".concat(sale.id, \":stockDecremented:\").concat(line.lineId);\n        const hasBeenDecremented = await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.hasEffect)(stockDecrementedKey);\n        if (hasBeenDecremented) {\n            console.log(\"[processItemSaleLine] Stock already decremented for line \".concat(line.lineId, \", skipping\"));\n            return;\n        }\n        // Get the item\n        const items = await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.getItems();\n        const item = items.find((i)=>i.id === line.itemId);\n        if (!item) {\n            console.error(\"[processItemSaleLine] Item not found: \".concat(line.itemId));\n            return;\n        }\n        // Check if we have enough stock at the sale site\n        // Calculate total available quantity from stock array\n        const totalAvailableQuantity = item.stock.reduce((sum, stockPoint)=>sum + stockPoint.quantity, 0);\n        if (item.quantitySold + line.quantity > totalAvailableQuantity) {\n            console.error(\"[processItemSaleLine] Insufficient stock for item \".concat(item.name, \". Available: \").concat(totalAvailableQuantity - item.quantitySold, \", Required: \").concat(line.quantity));\n            return;\n        }\n        // Update item stock\n        const updatedItem = {\n            ...item,\n            quantitySold: item.quantitySold + line.quantity,\n            updatedAt: new Date()\n        };\n        // Mark item as SOLD if all stock is sold\n        if (updatedItem.quantitySold >= totalAvailableQuantity) {\n            updatedItem.status = \"SOLD\";\n        }\n        // Save the updated item\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.upsertItem(updatedItem);\n        // Create SALE_ITEM link\n        const linkMetadata = {\n            quantity: line.quantity,\n            unitPrice: line.unitPrice,\n            total: line.quantity * line.unitPrice,\n            soldAt: sale.saleDate.toISOString(),\n            siteId: sale.siteId\n        };\n        const link = (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_2__.makeLink)(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.SALE_ITEM, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE,\n            id: sale.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.ITEM,\n            id: line.itemId\n        }, linkMetadata);\n        await (0,_links_link_registry__WEBPACK_IMPORTED_MODULE_3__.createLink)(link);\n        // Mark effect as complete\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.markEffect)(\"sale:\".concat(sale.id, \":\").concat(stockDecrementedKey));\n        // Log the effect\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_5__.appendEntityLog)(\"item\", line.itemId, \"SOLD\", {\n            name: item.name,\n            quantity: line.quantity,\n            unitPrice: line.unitPrice,\n            total: line.quantity * line.unitPrice,\n            saleId: sale.id,\n            soldAt: sale.saleDate.toISOString()\n        });\n        console.log(\"[processItemSaleLine] ✅ Processed item sale: \".concat(item.name, \" x\").concat(line.quantity));\n    } catch (error) {\n        console.error(\"[processItemSaleLine] ❌ Failed to process item sale line \".concat(line.lineId, \":\"), error);\n        throw error;\n    }\n}\n/**\r\n * Process bundle sale line - reduce bundle stock\r\n * TODO: Implement bundle processing logic\r\n */ async function processBundleSaleLine(line, sale) {\n    try {\n        console.log(\"[processBundleSaleLine] Processing bundle sale: \".concat(line.itemType, \", quantity: \").concat(line.quantity));\n        // Idempotency check\n        const bundleProcessedKey = \"sale:\".concat(sale.id, \":bundleProcessed:\").concat(line.lineId);\n        const hasBeenProcessed = await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.hasEffect)(bundleProcessedKey);\n        if (hasBeenProcessed) {\n            console.log(\"[processBundleSaleLine] Bundle already processed for line \".concat(line.lineId, \", skipping\"));\n            return;\n        }\n        // TODO: Implement bundle processing logic\n        // This would involve:\n        // 1. Finding bundle items of the specified type\n        // 2. Reducing their stock\n        // 3. Creating SALE_ITEM links\n        // 4. Handling itemsPerBundle logic\n        console.log(\"[processBundleSaleLine] Bundle processing not yet implemented for \".concat(line.itemType));\n        // Mark effect as complete (even though not implemented)\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.markEffect)(\"sale:\".concat(sale.id, \":\").concat(bundleProcessedKey));\n    } catch (error) {\n        console.error(\"[processBundleSaleLine] ❌ Failed to process bundle sale line \".concat(line.lineId, \":\"), error);\n        throw error;\n    }\n}\n/**\r\n * Process service sale line - create task from service\r\n */ async function processServiceLine(line, sale) {\n    try {\n        console.log(\"[processServiceLine] Processing service sale: \".concat(line.description));\n        // Idempotency check\n        const taskCreatedKey = \"sale:\".concat(sale.id, \":taskCreated:\").concat(line.lineId);\n        const hasBeenCreated = await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.hasEffect)(taskCreatedKey);\n        if (hasBeenCreated || !line.createTask) {\n            console.log(\"[processServiceLine] Task already created or not requested for line \".concat(line.lineId, \", skipping\"));\n            return;\n        }\n        // Create task from service line\n        const serviceTask = {\n            id: line.taskId || \"task-\".concat(sale.id, \"-\").concat(line.lineId),\n            name: line.description || \"Service Task\",\n            description: \"Service from sale: \".concat(sale.counterpartyName),\n            type: line.taskType || \"TASK\",\n            status: \"Created\",\n            priority: \"Normal\",\n            station: line.station,\n            progress: 0,\n            order: Date.now(),\n            cost: line.taskCost || 0,\n            revenue: 0,\n            rewards: line.taskRewards ? {\n                points: line.taskRewards\n            } : {\n                points: {\n                    xp: 0,\n                    rp: 0,\n                    fp: 0,\n                    hp: 0\n                }\n            },\n            isCollected: false,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            links: [],\n            // Ambassador Fields - inherit from sale\n            siteId: sale.siteId,\n            targetSiteId: line.taskTargetSiteId || undefined,\n            sourceSaleId: sale.id,\n            // Additional fields from service line\n            parentId: line.taskParentId || undefined,\n            dueDate: line.taskDueDate || undefined,\n            // Emissary fields for item creation\n            outputItemType: line.outputItemType || undefined,\n            outputItemSubType: line.outputItemSubType || undefined,\n            outputQuantity: line.outputItemQuantity || undefined,\n            outputItemName: line.outputItemName || undefined,\n            outputUnitCost: line.outputUnitCost || undefined,\n            outputItemCollection: line.outputItemCollection || undefined,\n            outputItemPrice: line.outputItemPrice || undefined,\n            isNewItem: line.isNewOutputItem || false,\n            isSold: line.isSold || false,\n            outputItemStatus: \"Created\"\n        };\n        // Save the task\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_1__.ClientAPI.upsertTask(serviceTask);\n        // Create SALE_TASK link\n        const linkMetadata = {\n            serviceDescription: line.description,\n            revenue: line.revenue,\n            station: line.station,\n            taskType: line.taskType,\n            createdFrom: \"service_sale\"\n        };\n        const link = (0,_links_links_workflows__WEBPACK_IMPORTED_MODULE_2__.makeLink)(_types_enums__WEBPACK_IMPORTED_MODULE_0__.LinkType.SALE_TASK, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.SALE,\n            id: sale.id\n        }, {\n            type: _types_enums__WEBPACK_IMPORTED_MODULE_0__.EntityType.TASK,\n            id: serviceTask.id\n        }, linkMetadata);\n        await (0,_links_link_registry__WEBPACK_IMPORTED_MODULE_3__.createLink)(link);\n        // Mark effect as complete\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_4__.markEffect)(\"sale:\".concat(sale.id, \":\").concat(taskCreatedKey));\n        // Log the task creation\n        await (0,_entities_logging__WEBPACK_IMPORTED_MODULE_5__.appendEntityLog)(\"task\", serviceTask.id, \"CREATED\", {\n            name: serviceTask.name,\n            createdFrom: \"service_sale\",\n            saleId: sale.id,\n            serviceDescription: line.description,\n            station: line.station\n        });\n        console.log(\"[processServiceLine] ✅ Created task from service: \".concat(serviceTask.name));\n    } catch (error) {\n        console.error(\"[processServiceLine] ❌ Failed to process service sale line \".concat(line.lineId, \":\"), error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./workflows/sale-line-utils.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./workflows/update-propagation-utils.ts":
/*!***********************************************!*\
  !*** ./workflows/update-propagation-utils.ts ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasFinancialPropsChanged: function() { return /* binding */ hasFinancialPropsChanged; },\n/* harmony export */   hasJungleCoinsChanged: function() { return /* binding */ hasJungleCoinsChanged; },\n/* harmony export */   hasLinesChanged: function() { return /* binding */ hasLinesChanged; },\n/* harmony export */   hasOutputPropsChanged: function() { return /* binding */ hasOutputPropsChanged; },\n/* harmony export */   hasRevenueChanged: function() { return /* binding */ hasRevenueChanged; },\n/* harmony export */   hasRewardsChanged: function() { return /* binding */ hasRewardsChanged; },\n/* harmony export */   updateCharacterJungleCoinsFromRecord: function() { return /* binding */ updateCharacterJungleCoinsFromRecord; },\n/* harmony export */   updateFinancialRecordsFromSale: function() { return /* binding */ updateFinancialRecordsFromSale; },\n/* harmony export */   updateFinancialRecordsFromTask: function() { return /* binding */ updateFinancialRecordsFromTask; },\n/* harmony export */   updateItemsCreatedByRecord: function() { return /* binding */ updateItemsCreatedByRecord; },\n/* harmony export */   updateItemsCreatedByTask: function() { return /* binding */ updateItemsCreatedByTask; },\n/* harmony export */   updateItemsFromSale: function() { return /* binding */ updateItemsFromSale; },\n/* harmony export */   updatePlayerPointsFromSource: function() { return /* binding */ updatePlayerPointsFromSource; },\n/* harmony export */   updateTasksFromFinancialRecord: function() { return /* binding */ updateTasksFromFinancialRecord; }\n/* harmony export */ });\n/* harmony import */ var _lib_client_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/client-api */ \"(app-pages-browser)/./lib/client-api.ts\");\n/* harmony import */ var _data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data-store/effects-registry */ \"(app-pages-browser)/./data-store/effects-registry.ts\");\n// workflows/update-propagation-utils.ts\n// Comprehensive update propagation across ALL entity relationships\n\n\n// ============================================================================\n// TASK → FINANCIAL RECORD PROPAGATION\n// ============================================================================\nasync function updateFinancialRecordsFromTask(task, previousTask) {\n    try {\n        console.log(\"[updateFinancialRecordsFromTask] Updating financial records for task: \".concat(task.name));\n        // Find financial records created from this task\n        const allFinancials = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getFinancialRecords();\n        const relatedRecords = allFinancials.filter((record)=>record.sourceTaskId === task.id);\n        for (const record of relatedRecords){\n            var _task_updatedAt;\n            const updateKey = \"updateFinancialFromTask:\".concat(task.id, \":\").concat(record.id, \":\").concat((_task_updatedAt = task.updatedAt) === null || _task_updatedAt === void 0 ? void 0 : _task_updatedAt.getTime());\n            if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(updateKey)) {\n                console.log(\"[updateFinancialRecordsFromTask] ⏭️ Already updated record: \".concat(record.id));\n                continue;\n            }\n            // Check if financial properties changed\n            const financialPropsChanged = task.cost !== previousTask.cost || task.revenue !== previousTask.revenue || task.isNotPaid !== previousTask.isNotPaid || task.isNotCharged !== previousTask.isNotCharged || task.name !== previousTask.name || task.station !== previousTask.station;\n            if (financialPropsChanged) {\n                const updatedRecord = {\n                    ...record,\n                    cost: task.cost,\n                    revenue: task.revenue,\n                    isNotPaid: task.isNotPaid,\n                    isNotCharged: task.isNotCharged,\n                    name: task.name,\n                    station: task.station,\n                    updatedAt: new Date()\n                };\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertFinancialRecord(updatedRecord);\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(updateKey);\n                console.log(\"[updateFinancialRecordsFromTask] ✅ Updated financial record: \".concat(record.id));\n            }\n        }\n    } catch (error) {\n        console.error(\"[updateFinancialRecordsFromTask] Error updating financial records:\", error);\n    }\n}\n// ============================================================================\n// FINANCIAL RECORD → TASK PROPAGATION\n// ============================================================================\nasync function updateTasksFromFinancialRecord(record, previousRecord) {\n    try {\n        console.log(\"[updateTasksFromFinancialRecord] Updating tasks for financial record: \".concat(record.name));\n        // Find tasks that created this financial record\n        const allTasks = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getTasks();\n        const relatedTasks = allTasks.filter((task)=>task.id === record.sourceTaskId);\n        for (const task of relatedTasks){\n            var _record_updatedAt;\n            const updateKey = \"updateTaskFromFinancial:\".concat(record.id, \":\").concat(task.id, \":\").concat((_record_updatedAt = record.updatedAt) === null || _record_updatedAt === void 0 ? void 0 : _record_updatedAt.getTime());\n            if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(updateKey)) {\n                console.log(\"[updateTasksFromFinancialRecord] ⏭️ Already updated task: \".concat(task.id));\n                continue;\n            }\n            // Check if financial properties changed\n            const financialPropsChanged = record.cost !== previousRecord.cost || record.revenue !== previousRecord.revenue || record.isNotPaid !== previousRecord.isNotPaid || record.isNotCharged !== previousRecord.isNotCharged || record.name !== previousRecord.name || record.station !== previousRecord.station;\n            if (financialPropsChanged) {\n                const updatedTask = {\n                    ...task,\n                    cost: record.cost,\n                    revenue: record.revenue,\n                    isNotPaid: record.isNotPaid,\n                    isNotCharged: record.isNotCharged,\n                    name: record.name,\n                    station: record.station,\n                    updatedAt: new Date()\n                };\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertTask(updatedTask);\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(updateKey);\n                console.log(\"[updateTasksFromFinancialRecord] ✅ Updated task: \".concat(task.id));\n            }\n        }\n    } catch (error) {\n        console.error(\"[updateTasksFromFinancialRecord] Error updating tasks:\", error);\n    }\n}\n// ============================================================================\n// TASK → ITEM PROPAGATION (Enhanced)\n// ============================================================================\nasync function updateItemsCreatedByTask(task, previousTask) {\n    try {\n        console.log(\"[updateItemsCreatedByTask] Updating items for task: \".concat(task.name));\n        // Find items created from this task\n        const allItems = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getItems();\n        const relatedItems = allItems.filter((item)=>item.sourceTaskId === task.id);\n        for (const item of relatedItems){\n            var _task_updatedAt;\n            const updateKey = \"updateItemFromTask:\".concat(task.id, \":\").concat(item.id, \":\").concat((_task_updatedAt = task.updatedAt) === null || _task_updatedAt === void 0 ? void 0 : _task_updatedAt.getTime());\n            if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(updateKey)) {\n                console.log(\"[updateItemsCreatedByTask] ⏭️ Already updated item: \".concat(item.id));\n                continue;\n            }\n            // Check if output properties changed\n            const outputPropsChanged = task.outputQuantity !== previousTask.outputQuantity || task.outputItemName !== previousTask.outputItemName || task.outputUnitCost !== previousTask.outputUnitCost || task.outputItemPrice !== previousTask.outputItemPrice || task.station !== previousTask.station;\n            if (outputPropsChanged) {\n                const updatedItem = {\n                    ...item,\n                    name: task.outputItemName || item.name,\n                    unitCost: task.outputUnitCost || item.unitCost,\n                    price: task.outputItemPrice || item.price,\n                    station: task.station || item.station,\n                    updatedAt: new Date()\n                };\n                // Update stock quantity if it changed\n                if (task.outputQuantity !== previousTask.outputQuantity) {\n                    const quantityDiff = (task.outputQuantity || 0) - (previousTask.outputQuantity || 0);\n                    if (quantityDiff !== 0) {\n                        // Update the first stock point (or create one if none exists)\n                        if (updatedItem.stock && updatedItem.stock.length > 0) {\n                            updatedItem.stock[0].quantity += quantityDiff;\n                        } else {\n                            updatedItem.stock = [\n                                {\n                                    siteId: task.siteId || \"default\",\n                                    quantity: quantityDiff\n                                }\n                            ];\n                        }\n                    }\n                }\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertItem(updatedItem);\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(updateKey);\n                console.log(\"[updateItemsCreatedByTask] ✅ Updated item: \".concat(item.id));\n            }\n        }\n    } catch (error) {\n        console.error(\"[updateItemsCreatedByTask] Error updating items:\", error);\n    }\n}\n// ============================================================================\n// FINANCIAL RECORD → ITEM PROPAGATION (Enhanced)\n// ============================================================================\nasync function updateItemsCreatedByRecord(record, previousRecord) {\n    try {\n        console.log(\"[updateItemsCreatedByRecord] Updating items for financial record: \".concat(record.name));\n        // Find items created from this financial record\n        const allItems = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getItems();\n        const relatedItems = allItems.filter((item)=>item.sourceRecordId === record.id);\n        for (const item of relatedItems){\n            var _record_updatedAt;\n            const updateKey = \"updateItemFromRecord:\".concat(record.id, \":\").concat(item.id, \":\").concat((_record_updatedAt = record.updatedAt) === null || _record_updatedAt === void 0 ? void 0 : _record_updatedAt.getTime());\n            if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(updateKey)) {\n                console.log(\"[updateItemsCreatedByRecord] ⏭️ Already updated item: \".concat(item.id));\n                continue;\n            }\n            // Check if output properties changed\n            const outputPropsChanged = record.outputQuantity !== previousRecord.outputQuantity || record.outputItemName !== previousRecord.outputItemName || record.outputUnitCost !== previousRecord.outputUnitCost || record.outputItemPrice !== previousRecord.outputItemPrice || record.station !== previousRecord.station;\n            if (outputPropsChanged) {\n                const updatedItem = {\n                    ...item,\n                    name: record.outputItemName || item.name,\n                    unitCost: record.outputUnitCost || item.unitCost,\n                    price: record.outputItemPrice || item.price,\n                    station: record.station || item.station,\n                    updatedAt: new Date()\n                };\n                // Update stock quantity if it changed\n                if (record.outputQuantity !== previousRecord.outputQuantity) {\n                    const quantityDiff = (record.outputQuantity || 0) - (previousRecord.outputQuantity || 0);\n                    if (quantityDiff !== 0) {\n                        // Update the first stock point (or create one if none exists)\n                        if (updatedItem.stock && updatedItem.stock.length > 0) {\n                            updatedItem.stock[0].quantity += quantityDiff;\n                        } else {\n                            updatedItem.stock = [\n                                {\n                                    siteId: record.siteId || \"default\",\n                                    quantity: quantityDiff\n                                }\n                            ];\n                        }\n                    }\n                }\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertItem(updatedItem);\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(updateKey);\n                console.log(\"[updateItemsCreatedByRecord] ✅ Updated item: \".concat(item.id));\n            }\n        }\n    } catch (error) {\n        console.error(\"[updateItemsCreatedByRecord] Error updating items:\", error);\n    }\n}\n// ============================================================================\n// SALE → FINANCIAL RECORD PROPAGATION\n// ============================================================================\nasync function updateFinancialRecordsFromSale(sale, previousSale) {\n    try {\n        console.log(\"[updateFinancialRecordsFromSale] Updating financial records for sale: \".concat(sale.name));\n        // Find financial records created from this sale\n        const allFinancials = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getFinancialRecords();\n        const relatedRecords = allFinancials.filter((record)=>record.sourceSaleId === sale.id);\n        for (const record of relatedRecords){\n            var _sale_updatedAt, _sale_totals, _previousSale_totals;\n            const updateKey = \"updateFinancialFromSale:\".concat(sale.id, \":\").concat(record.id, \":\").concat((_sale_updatedAt = sale.updatedAt) === null || _sale_updatedAt === void 0 ? void 0 : _sale_updatedAt.getTime());\n            if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(updateKey)) {\n                console.log(\"[updateFinancialRecordsFromSale] ⏭️ Already updated record: \".concat(record.id));\n                continue;\n            }\n            // Check if revenue properties changed\n            const revenuePropsChanged = ((_sale_totals = sale.totals) === null || _sale_totals === void 0 ? void 0 : _sale_totals.totalRevenue) !== ((_previousSale_totals = previousSale.totals) === null || _previousSale_totals === void 0 ? void 0 : _previousSale_totals.totalRevenue) || sale.isNotPaid !== previousSale.isNotPaid || sale.status !== previousSale.status;\n            if (revenuePropsChanged) {\n                var _sale_totals1;\n                const updatedRecord = {\n                    ...record,\n                    revenue: ((_sale_totals1 = sale.totals) === null || _sale_totals1 === void 0 ? void 0 : _sale_totals1.totalRevenue) || 0,\n                    isNotPaid: sale.isNotPaid,\n                    isNotCharged: sale.status !== \"CHARGED\",\n                    updatedAt: new Date()\n                };\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertFinancialRecord(updatedRecord);\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(updateKey);\n                console.log(\"[updateFinancialRecordsFromSale] ✅ Updated financial record: \".concat(record.id));\n            }\n        }\n    } catch (error) {\n        console.error(\"[updateFinancialRecordsFromSale] Error updating financial records:\", error);\n    }\n}\n// ============================================================================\n// SALE → ITEM PROPAGATION (Stock Updates)\n// ============================================================================\nasync function updateItemsFromSale(sale, previousSale) {\n    try {\n        var _sale_lines, _previousSale_lines;\n        console.log(\"[updateItemsFromSale] Updating items for sale: \".concat(sale.name));\n        // Check if sale lines changed\n        const linesChanged = ((_sale_lines = sale.lines) === null || _sale_lines === void 0 ? void 0 : _sale_lines.length) !== ((_previousSale_lines = previousSale.lines) === null || _previousSale_lines === void 0 ? void 0 : _previousSale_lines.length) || JSON.stringify(sale.lines) !== JSON.stringify(previousSale.lines);\n        if (!linesChanged) {\n            console.log(\"[updateItemsFromSale] No line changes detected\");\n            return;\n        }\n        // Process each sale line\n        for (const line of sale.lines || []){\n            if (line.kind === \"item\" && \"itemId\" in line && line.itemId) {\n                var _sale_updatedAt;\n                const updateKey = \"updateItemFromSale:\".concat(sale.id, \":\").concat(line.itemId, \":\").concat((_sale_updatedAt = sale.updatedAt) === null || _sale_updatedAt === void 0 ? void 0 : _sale_updatedAt.getTime());\n                if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(updateKey)) {\n                    console.log(\"[updateItemsFromSale] ⏭️ Already updated item: \".concat(line.itemId));\n                    continue;\n                }\n                // Get the item\n                const item = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getItemById(line.itemId);\n                if (!item) {\n                    console.warn(\"[updateItemsFromSale] Item not found: \".concat(line.itemId));\n                    continue;\n                }\n                // Update quantity sold\n                const updatedItem = {\n                    ...item,\n                    quantitySold: (item.quantitySold || 0) + (line.quantity || 0),\n                    updatedAt: new Date()\n                };\n                await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertItem(updatedItem);\n                await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(updateKey);\n                console.log(\"[updateItemsFromSale] ✅ Updated item: \".concat(line.itemId));\n            }\n        }\n    } catch (error) {\n        console.error(\"[updateItemsFromSale] Error updating items:\", error);\n    }\n}\n// ============================================================================\n// TASK/FINANCIAL/SALE → PLAYER PROPAGATION (Points Delta)\n// ============================================================================\nasync function updatePlayerPointsFromSource(sourceType, newSource, oldSource) {\n    try {\n        var _newSource_updatedAt, _player_points, _player_points1, _player_points2, _player_points3;\n        console.log(\"[updatePlayerPointsFromSource] Updating player points from \".concat(sourceType, \": \").concat(newSource.name));\n        // Calculate points delta\n        let pointsDelta = {\n            xp: 0,\n            rp: 0,\n            fp: 0,\n            hp: 0\n        };\n        if (sourceType === \"task\" || sourceType === \"financial\") {\n            var _newSource_rewards, _oldSource_rewards;\n            const newPoints = ((_newSource_rewards = newSource.rewards) === null || _newSource_rewards === void 0 ? void 0 : _newSource_rewards.points) || {\n                xp: 0,\n                rp: 0,\n                fp: 0,\n                hp: 0\n            };\n            const oldPoints = ((_oldSource_rewards = oldSource.rewards) === null || _oldSource_rewards === void 0 ? void 0 : _oldSource_rewards.points) || {\n                xp: 0,\n                rp: 0,\n                fp: 0,\n                hp: 0\n            };\n            pointsDelta = {\n                xp: (newPoints.xp || 0) - (oldPoints.xp || 0),\n                rp: (newPoints.rp || 0) - (oldPoints.rp || 0),\n                fp: (newPoints.fp || 0) - (oldPoints.fp || 0),\n                hp: (newPoints.hp || 0) - (oldPoints.hp || 0)\n            };\n        } else if (sourceType === \"sale\") {\n            var _newSource_totals, _oldSource_totals;\n            // Calculate points from revenue (simplified)\n            const newRevenue = ((_newSource_totals = newSource.totals) === null || _newSource_totals === void 0 ? void 0 : _newSource_totals.totalRevenue) || 0;\n            const oldRevenue = ((_oldSource_totals = oldSource.totals) === null || _oldSource_totals === void 0 ? void 0 : _oldSource_totals.totalRevenue) || 0;\n            const revenueDelta = newRevenue - oldRevenue;\n            // Convert revenue to points (simplified calculation)\n            pointsDelta = {\n                xp: Math.floor(revenueDelta * 0.1),\n                rp: Math.floor(revenueDelta * 0.05),\n                fp: Math.floor(revenueDelta * 0.03),\n                hp: Math.floor(revenueDelta * 0.02)\n            };\n        }\n        // Skip if no points change\n        if (pointsDelta.xp === 0 && pointsDelta.rp === 0 && pointsDelta.fp === 0 && pointsDelta.hp === 0) {\n            console.log(\"[updatePlayerPointsFromSource] No points change detected\");\n            return;\n        }\n        // Find the player (assuming single player for now)\n        const players = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getPlayers();\n        const player = players[0]; // Simplified - in real system, find by source relationship\n        if (!player) {\n            console.warn(\"[updatePlayerPointsFromSource] No player found\");\n            return;\n        }\n        const updateKey = \"updatePlayerPoints:\".concat(sourceType, \":\").concat(newSource.id, \":\").concat(player.id, \":\").concat((_newSource_updatedAt = newSource.updatedAt) === null || _newSource_updatedAt === void 0 ? void 0 : _newSource_updatedAt.getTime());\n        if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(updateKey)) {\n            console.log(\"[updatePlayerPointsFromSource] ⏭️ Already updated player: \".concat(player.id));\n            return;\n        }\n        // Update player points\n        const updatedPlayer = {\n            ...player,\n            points: {\n                xp: (((_player_points = player.points) === null || _player_points === void 0 ? void 0 : _player_points.xp) || 0) + pointsDelta.xp,\n                rp: (((_player_points1 = player.points) === null || _player_points1 === void 0 ? void 0 : _player_points1.rp) || 0) + pointsDelta.rp,\n                fp: (((_player_points2 = player.points) === null || _player_points2 === void 0 ? void 0 : _player_points2.fp) || 0) + pointsDelta.fp,\n                hp: (((_player_points3 = player.points) === null || _player_points3 === void 0 ? void 0 : _player_points3.hp) || 0) + pointsDelta.hp\n            },\n            updatedAt: new Date()\n        };\n        await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertPlayer(updatedPlayer);\n        await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(updateKey);\n        console.log(\"[updatePlayerPointsFromSource] ✅ Updated player points: \".concat(player.id));\n    } catch (error) {\n        console.error(\"[updatePlayerPointsFromSource] Error updating player points:\", error);\n    }\n}\n// ============================================================================\n// FINANCIAL → CHARACTER PROPAGATION (Jungle Coins Delta)\n// ============================================================================\nasync function updateCharacterJungleCoinsFromRecord(record, previousRecord) {\n    try {\n        console.log(\"[updateCharacterJungleCoinsFromRecord] Updating character jungle coins for record: \".concat(record.name));\n        // Calculate jungle coins delta\n        const newJungleCoins = record.jungleCoins || 0;\n        const oldJungleCoins = previousRecord.jungleCoins || 0;\n        const jungleCoinsDelta = newJungleCoins - oldJungleCoins;\n        if (jungleCoinsDelta === 0) {\n            console.log(\"[updateCharacterJungleCoinsFromRecord] No jungle coins change detected\");\n            return;\n        }\n        // Find characters related to this financial record\n        const allCharacters = await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.getCharacters();\n        const relatedCharacters = allCharacters.filter((char)=>char.id === record.customerCharacterId);\n        for (const character of relatedCharacters){\n            var _record_updatedAt;\n            const updateKey = \"updateCharacterJungleCoins:\".concat(record.id, \":\").concat(character.id, \":\").concat((_record_updatedAt = record.updatedAt) === null || _record_updatedAt === void 0 ? void 0 : _record_updatedAt.getTime());\n            if (await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.hasEffect)(updateKey)) {\n                console.log(\"[updateCharacterJungleCoinsFromRecord] ⏭️ Already updated character: \".concat(character.id));\n                continue;\n            }\n            // Update character jungle coins\n            const updatedCharacter = {\n                ...character,\n                jungleCoins: (character.jungleCoins || 0) + jungleCoinsDelta,\n                updatedAt: new Date()\n            };\n            await _lib_client_api__WEBPACK_IMPORTED_MODULE_0__.ClientAPI.upsertCharacter(updatedCharacter);\n            await (0,_data_store_effects_registry__WEBPACK_IMPORTED_MODULE_1__.markEffect)(updateKey);\n            console.log(\"[updateCharacterJungleCoinsFromRecord] ✅ Updated character jungle coins: \".concat(character.id));\n        }\n    } catch (error) {\n        console.error(\"[updateCharacterJungleCoinsFromRecord] Error updating character jungle coins:\", error);\n    }\n}\n// ============================================================================\n// PROPERTY CHANGE DETECTION HELPERS\n// ============================================================================\nfunction hasFinancialPropsChanged(newEntity, oldEntity) {\n    return newEntity.cost !== oldEntity.cost || newEntity.revenue !== oldEntity.revenue || newEntity.isNotPaid !== oldEntity.isNotPaid || newEntity.isNotCharged !== oldEntity.isNotCharged || newEntity.name !== oldEntity.name || newEntity.station !== oldEntity.station;\n}\nfunction hasOutputPropsChanged(newEntity, oldEntity) {\n    return newEntity.outputQuantity !== oldEntity.outputQuantity || newEntity.outputItemName !== oldEntity.outputItemName || newEntity.outputUnitCost !== oldEntity.outputUnitCost || newEntity.outputItemPrice !== oldEntity.outputItemPrice || newEntity.station !== oldEntity.station;\n}\nfunction hasRewardsChanged(newEntity, oldEntity) {\n    var _newEntity_rewards, _oldEntity_rewards;\n    const newRewards = ((_newEntity_rewards = newEntity.rewards) === null || _newEntity_rewards === void 0 ? void 0 : _newEntity_rewards.points) || {\n        xp: 0,\n        rp: 0,\n        fp: 0,\n        hp: 0\n    };\n    const oldRewards = ((_oldEntity_rewards = oldEntity.rewards) === null || _oldEntity_rewards === void 0 ? void 0 : _oldEntity_rewards.points) || {\n        xp: 0,\n        rp: 0,\n        fp: 0,\n        hp: 0\n    };\n    return newRewards.xp !== oldRewards.xp || newRewards.rp !== oldRewards.rp || newRewards.fp !== oldRewards.fp || newRewards.hp !== oldRewards.hp;\n}\nfunction hasJungleCoinsChanged(newEntity, oldEntity) {\n    return (newEntity.jungleCoins || 0) !== (oldEntity.jungleCoins || 0);\n}\nfunction hasRevenueChanged(newEntity, oldEntity) {\n    var _newEntity_totals, _oldEntity_totals;\n    return (((_newEntity_totals = newEntity.totals) === null || _newEntity_totals === void 0 ? void 0 : _newEntity_totals.totalRevenue) || 0) !== (((_oldEntity_totals = oldEntity.totals) === null || _oldEntity_totals === void 0 ? void 0 : _oldEntity_totals.totalRevenue) || 0);\n}\nfunction hasLinesChanged(newEntity, oldEntity) {\n    return JSON.stringify(newEntity.lines) !== JSON.stringify(oldEntity.lines);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./workflows/update-propagation-utils.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@upstash/redis/chunk-TAJI6TAE.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@upstash/redis/chunk-TAJI6TAE.mjs ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpClient: function() { return /* binding */ HttpClient; },\n/* harmony export */   Redis: function() { return /* binding */ Redis; },\n/* harmony export */   VERSION: function() { return /* binding */ VERSION; },\n/* harmony export */   error_exports: function() { return /* binding */ error_exports; }\n/* harmony export */ });\n/* harmony import */ var uncrypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uncrypto */ \"(app-pages-browser)/./node_modules/uncrypto/dist/crypto.web.mjs\");\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// pkg/error.ts\nvar error_exports = {};\n__export(error_exports, {\n  UpstashError: () => UpstashError,\n  UpstashJSONParseError: () => UpstashJSONParseError,\n  UrlError: () => UrlError\n});\nvar UpstashError = class extends Error {\n  constructor(message, options) {\n    super(message, options);\n    this.name = \"UpstashError\";\n  }\n};\nvar UrlError = class extends Error {\n  constructor(url) {\n    super(\n      `Upstash Redis client was passed an invalid URL. You should pass a URL starting with https. Received: \"${url}\". `\n    );\n    this.name = \"UrlError\";\n  }\n};\nvar UpstashJSONParseError = class extends UpstashError {\n  constructor(body, options) {\n    const truncatedBody = body.length > 200 ? body.slice(0, 200) + \"...\" : body;\n    super(`Unable to parse response body: ${truncatedBody}`, options);\n    this.name = \"UpstashJSONParseError\";\n  }\n};\n\n// pkg/util.ts\nfunction parseRecursive(obj) {\n  const parsed = Array.isArray(obj) ? obj.map((o) => {\n    try {\n      return parseRecursive(o);\n    } catch {\n      return o;\n    }\n  }) : JSON.parse(obj);\n  if (typeof parsed === \"number\" && parsed.toString() !== obj) {\n    return obj;\n  }\n  return parsed;\n}\nfunction parseResponse(result) {\n  try {\n    return parseRecursive(result);\n  } catch {\n    return result;\n  }\n}\nfunction deserializeScanResponse(result) {\n  return [result[0], ...parseResponse(result.slice(1))];\n}\nfunction deserializeScanWithTypesResponse(result) {\n  const [cursor, keys] = result;\n  const parsedKeys = [];\n  for (let i = 0; i < keys.length; i += 2) {\n    parsedKeys.push({ key: keys[i], type: keys[i + 1] });\n  }\n  return [cursor, parsedKeys];\n}\nfunction mergeHeaders(...headers) {\n  const merged = {};\n  for (const header of headers) {\n    if (!header) continue;\n    for (const [key, value] of Object.entries(header)) {\n      if (value !== void 0 && value !== null) {\n        merged[key] = value;\n      }\n    }\n  }\n  return merged;\n}\n\n// pkg/http.ts\nvar HttpClient = class {\n  baseUrl;\n  headers;\n  options;\n  readYourWrites;\n  upstashSyncToken = \"\";\n  hasCredentials;\n  retry;\n  constructor(config) {\n    this.options = {\n      backend: config.options?.backend,\n      agent: config.agent,\n      responseEncoding: config.responseEncoding ?? \"base64\",\n      // default to base64\n      cache: config.cache,\n      signal: config.signal,\n      keepAlive: config.keepAlive ?? true\n    };\n    this.upstashSyncToken = \"\";\n    this.readYourWrites = config.readYourWrites ?? true;\n    this.baseUrl = (config.baseUrl || \"\").replace(/\\/$/, \"\");\n    const urlRegex = /^https?:\\/\\/[^\\s#$./?].\\S*$/;\n    if (this.baseUrl && !urlRegex.test(this.baseUrl)) {\n      throw new UrlError(this.baseUrl);\n    }\n    this.headers = {\n      \"Content-Type\": \"application/json\",\n      ...config.headers\n    };\n    this.hasCredentials = Boolean(this.baseUrl && this.headers.authorization.split(\" \")[1]);\n    if (this.options.responseEncoding === \"base64\") {\n      this.headers[\"Upstash-Encoding\"] = \"base64\";\n    }\n    this.retry = typeof config.retry === \"boolean\" && !config.retry ? {\n      attempts: 1,\n      backoff: () => 0\n    } : {\n      attempts: config.retry?.retries ?? 5,\n      backoff: config.retry?.backoff ?? ((retryCount) => Math.exp(retryCount) * 50)\n    };\n  }\n  mergeTelemetry(telemetry) {\n    this.headers = merge(this.headers, \"Upstash-Telemetry-Runtime\", telemetry.runtime);\n    this.headers = merge(this.headers, \"Upstash-Telemetry-Platform\", telemetry.platform);\n    this.headers = merge(this.headers, \"Upstash-Telemetry-Sdk\", telemetry.sdk);\n  }\n  async request(req) {\n    const requestHeaders = mergeHeaders(this.headers, req.headers ?? {});\n    const requestUrl = [this.baseUrl, ...req.path ?? []].join(\"/\");\n    const isEventStream = requestHeaders.Accept === \"text/event-stream\";\n    const signal = req.signal ?? this.options.signal;\n    const isSignalFunction = typeof signal === \"function\";\n    const requestOptions = {\n      //@ts-expect-error this should throw due to bun regression\n      cache: this.options.cache,\n      method: \"POST\",\n      headers: requestHeaders,\n      body: JSON.stringify(req.body),\n      keepalive: this.options.keepAlive,\n      agent: this.options.agent,\n      signal: isSignalFunction ? signal() : signal,\n      /**\n       * Fastly specific\n       */\n      backend: this.options.backend\n    };\n    if (!this.hasCredentials) {\n      console.warn(\n        \"[Upstash Redis] Redis client was initialized without url or token. Failed to execute command.\"\n      );\n    }\n    if (this.readYourWrites) {\n      const newHeader = this.upstashSyncToken;\n      this.headers[\"upstash-sync-token\"] = newHeader;\n    }\n    let res = null;\n    let error = null;\n    for (let i = 0; i <= this.retry.attempts; i++) {\n      try {\n        res = await fetch(requestUrl, requestOptions);\n        break;\n      } catch (error_) {\n        if (requestOptions.signal?.aborted && isSignalFunction) {\n          throw error_;\n        } else if (requestOptions.signal?.aborted) {\n          const myBlob = new Blob([\n            JSON.stringify({ result: requestOptions.signal.reason ?? \"Aborted\" })\n          ]);\n          const myOptions = {\n            status: 200,\n            statusText: requestOptions.signal.reason ?? \"Aborted\"\n          };\n          res = new Response(myBlob, myOptions);\n          break;\n        }\n        error = error_;\n        if (i < this.retry.attempts) {\n          await new Promise((r) => setTimeout(r, this.retry.backoff(i)));\n        }\n      }\n    }\n    if (!res) {\n      throw error ?? new Error(\"Exhausted all retries\");\n    }\n    if (!res.ok) {\n      let body2;\n      const rawBody2 = await res.text();\n      try {\n        body2 = JSON.parse(rawBody2);\n      } catch (error2) {\n        throw new UpstashJSONParseError(rawBody2, { cause: error2 });\n      }\n      throw new UpstashError(`${body2.error}, command was: ${JSON.stringify(req.body)}`);\n    }\n    if (this.readYourWrites) {\n      const headers = res.headers;\n      this.upstashSyncToken = headers.get(\"upstash-sync-token\") ?? \"\";\n    }\n    if (isEventStream && req && req.onMessage && res.body) {\n      const reader = res.body.getReader();\n      const decoder = new TextDecoder();\n      (async () => {\n        try {\n          while (true) {\n            const { value, done } = await reader.read();\n            if (done) break;\n            const chunk = decoder.decode(value);\n            const lines = chunk.split(\"\\n\");\n            for (const line of lines) {\n              if (line.startsWith(\"data: \")) {\n                const data = line.slice(6);\n                req.onMessage?.(data);\n              }\n            }\n          }\n        } catch (error2) {\n          if (error2 instanceof Error && error2.name === \"AbortError\") {\n          } else {\n            console.error(\"Stream reading error:\", error2);\n          }\n        } finally {\n          try {\n            await reader.cancel();\n          } catch {\n          }\n        }\n      })();\n      return { result: 1 };\n    }\n    let body;\n    const rawBody = await res.text();\n    try {\n      body = JSON.parse(rawBody);\n    } catch (error2) {\n      throw new UpstashJSONParseError(rawBody, { cause: error2 });\n    }\n    if (this.readYourWrites) {\n      const headers = res.headers;\n      this.upstashSyncToken = headers.get(\"upstash-sync-token\") ?? \"\";\n    }\n    if (this.options.responseEncoding === \"base64\") {\n      if (Array.isArray(body)) {\n        return body.map(({ result: result2, error: error2 }) => ({\n          result: decode(result2),\n          error: error2\n        }));\n      }\n      const result = decode(body.result);\n      return { result, error: body.error };\n    }\n    return body;\n  }\n};\nfunction base64decode(b64) {\n  let dec = \"\";\n  try {\n    const binString = atob(b64);\n    const size = binString.length;\n    const bytes = new Uint8Array(size);\n    for (let i = 0; i < size; i++) {\n      bytes[i] = binString.charCodeAt(i);\n    }\n    dec = new TextDecoder().decode(bytes);\n  } catch {\n    dec = b64;\n  }\n  return dec;\n}\nfunction decode(raw) {\n  let result = void 0;\n  switch (typeof raw) {\n    case \"undefined\": {\n      return raw;\n    }\n    case \"number\": {\n      result = raw;\n      break;\n    }\n    case \"object\": {\n      if (Array.isArray(raw)) {\n        result = raw.map(\n          (v) => typeof v === \"string\" ? base64decode(v) : Array.isArray(v) ? v.map((element) => decode(element)) : v\n        );\n      } else {\n        result = null;\n      }\n      break;\n    }\n    case \"string\": {\n      result = raw === \"OK\" ? \"OK\" : base64decode(raw);\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n  return result;\n}\nfunction merge(obj, key, value) {\n  if (!value) {\n    return obj;\n  }\n  obj[key] = obj[key] ? [obj[key], value].join(\",\") : value;\n  return obj;\n}\n\n// pkg/commands/command.ts\nvar defaultSerializer = (c) => {\n  switch (typeof c) {\n    case \"string\":\n    case \"number\":\n    case \"boolean\": {\n      return c;\n    }\n    default: {\n      return JSON.stringify(c);\n    }\n  }\n};\nvar Command = class {\n  command;\n  serialize;\n  deserialize;\n  headers;\n  path;\n  onMessage;\n  isStreaming;\n  signal;\n  /**\n   * Create a new command instance.\n   *\n   * You can define a custom `deserialize` function. By default we try to deserialize as json.\n   */\n  constructor(command, opts) {\n    this.serialize = defaultSerializer;\n    this.deserialize = opts?.automaticDeserialization === void 0 || opts.automaticDeserialization ? opts?.deserialize ?? parseResponse : (x) => x;\n    this.command = command.map((c) => this.serialize(c));\n    this.headers = opts?.headers;\n    this.path = opts?.path;\n    this.onMessage = opts?.streamOptions?.onMessage;\n    this.isStreaming = opts?.streamOptions?.isStreaming ?? false;\n    this.signal = opts?.streamOptions?.signal;\n    if (opts?.latencyLogging) {\n      const originalExec = this.exec.bind(this);\n      this.exec = async (client) => {\n        const start = performance.now();\n        const result = await originalExec(client);\n        const end = performance.now();\n        const loggerResult = (end - start).toFixed(2);\n        console.log(\n          `Latency for \\x1B[38;2;19;185;39m${this.command[0].toString().toUpperCase()}\\x1B[0m: \\x1B[38;2;0;255;255m${loggerResult} ms\\x1B[0m`\n        );\n        return result;\n      };\n    }\n  }\n  /**\n   * Execute the command using a client.\n   */\n  async exec(client) {\n    const { result, error } = await client.request({\n      body: this.command,\n      path: this.path,\n      upstashSyncToken: client.upstashSyncToken,\n      headers: this.headers,\n      onMessage: this.onMessage,\n      isStreaming: this.isStreaming,\n      signal: this.signal\n    });\n    if (error) {\n      throw new UpstashError(error);\n    }\n    if (result === void 0) {\n      throw new TypeError(\"Request did not return a result\");\n    }\n    return this.deserialize(result);\n  }\n};\n\n// pkg/commands/hrandfield.ts\nfunction deserialize(result) {\n  if (result.length === 0) {\n    return null;\n  }\n  const obj = {};\n  for (let i = 0; i < result.length; i += 2) {\n    const key = result[i];\n    const value = result[i + 1];\n    try {\n      obj[key] = JSON.parse(value);\n    } catch {\n      obj[key] = value;\n    }\n  }\n  return obj;\n}\nvar HRandFieldCommand = class extends Command {\n  constructor(cmd, opts) {\n    const command = [\"hrandfield\", cmd[0]];\n    if (typeof cmd[1] === \"number\") {\n      command.push(cmd[1]);\n    }\n    if (cmd[2]) {\n      command.push(\"WITHVALUES\");\n    }\n    super(command, {\n      // @ts-expect-error to silence compiler\n      deserialize: cmd[2] ? (result) => deserialize(result) : opts?.deserialize,\n      ...opts\n    });\n  }\n};\n\n// pkg/commands/append.ts\nvar AppendCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"append\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/bitcount.ts\nvar BitCountCommand = class extends Command {\n  constructor([key, start, end], opts) {\n    const command = [\"bitcount\", key];\n    if (typeof start === \"number\") {\n      command.push(start);\n    }\n    if (typeof end === \"number\") {\n      command.push(end);\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/bitfield.ts\nvar BitFieldCommand = class {\n  constructor(args, client, opts, execOperation = (command) => command.exec(this.client)) {\n    this.client = client;\n    this.opts = opts;\n    this.execOperation = execOperation;\n    this.command = [\"bitfield\", ...args];\n  }\n  command;\n  chain(...args) {\n    this.command.push(...args);\n    return this;\n  }\n  get(...args) {\n    return this.chain(\"get\", ...args);\n  }\n  set(...args) {\n    return this.chain(\"set\", ...args);\n  }\n  incrby(...args) {\n    return this.chain(\"incrby\", ...args);\n  }\n  overflow(overflow) {\n    return this.chain(\"overflow\", overflow);\n  }\n  exec() {\n    const command = new Command(this.command, this.opts);\n    return this.execOperation(command);\n  }\n};\n\n// pkg/commands/bitop.ts\nvar BitOpCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"bitop\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/bitpos.ts\nvar BitPosCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"bitpos\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/copy.ts\nvar CopyCommand = class extends Command {\n  constructor([key, destinationKey, opts], commandOptions) {\n    super([\"COPY\", key, destinationKey, ...opts?.replace ? [\"REPLACE\"] : []], {\n      ...commandOptions,\n      deserialize(result) {\n        if (result > 0) {\n          return \"COPIED\";\n        }\n        return \"NOT_COPIED\";\n      }\n    });\n  }\n};\n\n// pkg/commands/dbsize.ts\nvar DBSizeCommand = class extends Command {\n  constructor(opts) {\n    super([\"dbsize\"], opts);\n  }\n};\n\n// pkg/commands/decr.ts\nvar DecrCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"decr\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/decrby.ts\nvar DecrByCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"decrby\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/del.ts\nvar DelCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"del\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/echo.ts\nvar EchoCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"echo\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/evalRo.ts\nvar EvalROCommand = class extends Command {\n  constructor([script, keys, args], opts) {\n    super([\"eval_ro\", script, keys.length, ...keys, ...args ?? []], opts);\n  }\n};\n\n// pkg/commands/eval.ts\nvar EvalCommand = class extends Command {\n  constructor([script, keys, args], opts) {\n    super([\"eval\", script, keys.length, ...keys, ...args ?? []], opts);\n  }\n};\n\n// pkg/commands/evalshaRo.ts\nvar EvalshaROCommand = class extends Command {\n  constructor([sha, keys, args], opts) {\n    super([\"evalsha_ro\", sha, keys.length, ...keys, ...args ?? []], opts);\n  }\n};\n\n// pkg/commands/evalsha.ts\nvar EvalshaCommand = class extends Command {\n  constructor([sha, keys, args], opts) {\n    super([\"evalsha\", sha, keys.length, ...keys, ...args ?? []], opts);\n  }\n};\n\n// pkg/commands/exec.ts\nvar ExecCommand = class extends Command {\n  constructor(cmd, opts) {\n    const normalizedCmd = cmd.map((arg) => typeof arg === \"string\" ? arg : String(arg));\n    super(normalizedCmd, opts);\n  }\n};\n\n// pkg/commands/exists.ts\nvar ExistsCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"exists\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/expire.ts\nvar ExpireCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"expire\", ...cmd.filter(Boolean)], opts);\n  }\n};\n\n// pkg/commands/expireat.ts\nvar ExpireAtCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"expireat\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/flushall.ts\nvar FlushAllCommand = class extends Command {\n  constructor(args, opts) {\n    const command = [\"flushall\"];\n    if (args && args.length > 0 && args[0].async) {\n      command.push(\"async\");\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/flushdb.ts\nvar FlushDBCommand = class extends Command {\n  constructor([opts], cmdOpts) {\n    const command = [\"flushdb\"];\n    if (opts?.async) {\n      command.push(\"async\");\n    }\n    super(command, cmdOpts);\n  }\n};\n\n// pkg/commands/geo_add.ts\nvar GeoAddCommand = class extends Command {\n  constructor([key, arg1, ...arg2], opts) {\n    const command = [\"geoadd\", key];\n    if (\"nx\" in arg1 && arg1.nx) {\n      command.push(\"nx\");\n    } else if (\"xx\" in arg1 && arg1.xx) {\n      command.push(\"xx\");\n    }\n    if (\"ch\" in arg1 && arg1.ch) {\n      command.push(\"ch\");\n    }\n    if (\"latitude\" in arg1 && arg1.latitude) {\n      command.push(arg1.longitude, arg1.latitude, arg1.member);\n    }\n    command.push(\n      ...arg2.flatMap(({ latitude, longitude, member }) => [longitude, latitude, member])\n    );\n    super(command, opts);\n  }\n};\n\n// pkg/commands/geo_dist.ts\nvar GeoDistCommand = class extends Command {\n  constructor([key, member1, member2, unit = \"M\"], opts) {\n    super([\"GEODIST\", key, member1, member2, unit], opts);\n  }\n};\n\n// pkg/commands/geo_hash.ts\nvar GeoHashCommand = class extends Command {\n  constructor(cmd, opts) {\n    const [key] = cmd;\n    const members = Array.isArray(cmd[1]) ? cmd[1] : cmd.slice(1);\n    super([\"GEOHASH\", key, ...members], opts);\n  }\n};\n\n// pkg/commands/geo_pos.ts\nvar GeoPosCommand = class extends Command {\n  constructor(cmd, opts) {\n    const [key] = cmd;\n    const members = Array.isArray(cmd[1]) ? cmd[1] : cmd.slice(1);\n    super([\"GEOPOS\", key, ...members], {\n      deserialize: (result) => transform(result),\n      ...opts\n    });\n  }\n};\nfunction transform(result) {\n  const final = [];\n  for (const pos of result) {\n    if (!pos?.[0] || !pos?.[1]) {\n      continue;\n    }\n    final.push({ lng: Number.parseFloat(pos[0]), lat: Number.parseFloat(pos[1]) });\n  }\n  return final;\n}\n\n// pkg/commands/geo_search.ts\nvar GeoSearchCommand = class extends Command {\n  constructor([key, centerPoint, shape, order, opts], commandOptions) {\n    const command = [\"GEOSEARCH\", key];\n    if (centerPoint.type === \"FROMMEMBER\" || centerPoint.type === \"frommember\") {\n      command.push(centerPoint.type, centerPoint.member);\n    }\n    if (centerPoint.type === \"FROMLONLAT\" || centerPoint.type === \"fromlonlat\") {\n      command.push(centerPoint.type, centerPoint.coordinate.lon, centerPoint.coordinate.lat);\n    }\n    if (shape.type === \"BYRADIUS\" || shape.type === \"byradius\") {\n      command.push(shape.type, shape.radius, shape.radiusType);\n    }\n    if (shape.type === \"BYBOX\" || shape.type === \"bybox\") {\n      command.push(shape.type, shape.rect.width, shape.rect.height, shape.rectType);\n    }\n    command.push(order);\n    if (opts?.count) {\n      command.push(\"COUNT\", opts.count.limit, ...opts.count.any ? [\"ANY\"] : []);\n    }\n    const transform2 = (result) => {\n      if (!opts?.withCoord && !opts?.withDist && !opts?.withHash) {\n        return result.map((member) => {\n          try {\n            return { member: JSON.parse(member) };\n          } catch {\n            return { member };\n          }\n        });\n      }\n      return result.map((members) => {\n        let counter = 1;\n        const obj = {};\n        try {\n          obj.member = JSON.parse(members[0]);\n        } catch {\n          obj.member = members[0];\n        }\n        if (opts.withDist) {\n          obj.dist = Number.parseFloat(members[counter++]);\n        }\n        if (opts.withHash) {\n          obj.hash = members[counter++].toString();\n        }\n        if (opts.withCoord) {\n          obj.coord = {\n            long: Number.parseFloat(members[counter][0]),\n            lat: Number.parseFloat(members[counter][1])\n          };\n        }\n        return obj;\n      });\n    };\n    super(\n      [\n        ...command,\n        ...opts?.withCoord ? [\"WITHCOORD\"] : [],\n        ...opts?.withDist ? [\"WITHDIST\"] : [],\n        ...opts?.withHash ? [\"WITHHASH\"] : []\n      ],\n      {\n        deserialize: transform2,\n        ...commandOptions\n      }\n    );\n  }\n};\n\n// pkg/commands/geo_search_store.ts\nvar GeoSearchStoreCommand = class extends Command {\n  constructor([destination, key, centerPoint, shape, order, opts], commandOptions) {\n    const command = [\"GEOSEARCHSTORE\", destination, key];\n    if (centerPoint.type === \"FROMMEMBER\" || centerPoint.type === \"frommember\") {\n      command.push(centerPoint.type, centerPoint.member);\n    }\n    if (centerPoint.type === \"FROMLONLAT\" || centerPoint.type === \"fromlonlat\") {\n      command.push(centerPoint.type, centerPoint.coordinate.lon, centerPoint.coordinate.lat);\n    }\n    if (shape.type === \"BYRADIUS\" || shape.type === \"byradius\") {\n      command.push(shape.type, shape.radius, shape.radiusType);\n    }\n    if (shape.type === \"BYBOX\" || shape.type === \"bybox\") {\n      command.push(shape.type, shape.rect.width, shape.rect.height, shape.rectType);\n    }\n    command.push(order);\n    if (opts?.count) {\n      command.push(\"COUNT\", opts.count.limit, ...opts.count.any ? [\"ANY\"] : []);\n    }\n    super([...command, ...opts?.storeDist ? [\"STOREDIST\"] : []], commandOptions);\n  }\n};\n\n// pkg/commands/get.ts\nvar GetCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"get\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/getbit.ts\nvar GetBitCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"getbit\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/getdel.ts\nvar GetDelCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"getdel\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/getex.ts\nvar GetExCommand = class extends Command {\n  constructor([key, opts], cmdOpts) {\n    const command = [\"getex\", key];\n    if (opts) {\n      if (\"ex\" in opts && typeof opts.ex === \"number\") {\n        command.push(\"ex\", opts.ex);\n      } else if (\"px\" in opts && typeof opts.px === \"number\") {\n        command.push(\"px\", opts.px);\n      } else if (\"exat\" in opts && typeof opts.exat === \"number\") {\n        command.push(\"exat\", opts.exat);\n      } else if (\"pxat\" in opts && typeof opts.pxat === \"number\") {\n        command.push(\"pxat\", opts.pxat);\n      } else if (\"persist\" in opts && opts.persist) {\n        command.push(\"persist\");\n      }\n    }\n    super(command, cmdOpts);\n  }\n};\n\n// pkg/commands/getrange.ts\nvar GetRangeCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"getrange\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/getset.ts\nvar GetSetCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"getset\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/hdel.ts\nvar HDelCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hdel\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/hexists.ts\nvar HExistsCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hexists\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/hexpire.ts\nvar HExpireCommand = class extends Command {\n  constructor(cmd, opts) {\n    const [key, fields, seconds, option] = cmd;\n    const fieldArray = Array.isArray(fields) ? fields : [fields];\n    super(\n      [\n        \"hexpire\",\n        key,\n        seconds,\n        ...option ? [option] : [],\n        \"FIELDS\",\n        fieldArray.length,\n        ...fieldArray\n      ],\n      opts\n    );\n  }\n};\n\n// pkg/commands/hexpireat.ts\nvar HExpireAtCommand = class extends Command {\n  constructor(cmd, opts) {\n    const [key, fields, timestamp, option] = cmd;\n    const fieldArray = Array.isArray(fields) ? fields : [fields];\n    super(\n      [\n        \"hexpireat\",\n        key,\n        timestamp,\n        ...option ? [option] : [],\n        \"FIELDS\",\n        fieldArray.length,\n        ...fieldArray\n      ],\n      opts\n    );\n  }\n};\n\n// pkg/commands/hexpiretime.ts\nvar HExpireTimeCommand = class extends Command {\n  constructor(cmd, opts) {\n    const [key, fields] = cmd;\n    const fieldArray = Array.isArray(fields) ? fields : [fields];\n    super([\"hexpiretime\", key, \"FIELDS\", fieldArray.length, ...fieldArray], opts);\n  }\n};\n\n// pkg/commands/hpersist.ts\nvar HPersistCommand = class extends Command {\n  constructor(cmd, opts) {\n    const [key, fields] = cmd;\n    const fieldArray = Array.isArray(fields) ? fields : [fields];\n    super([\"hpersist\", key, \"FIELDS\", fieldArray.length, ...fieldArray], opts);\n  }\n};\n\n// pkg/commands/hpexpire.ts\nvar HPExpireCommand = class extends Command {\n  constructor(cmd, opts) {\n    const [key, fields, milliseconds, option] = cmd;\n    const fieldArray = Array.isArray(fields) ? fields : [fields];\n    super(\n      [\n        \"hpexpire\",\n        key,\n        milliseconds,\n        ...option ? [option] : [],\n        \"FIELDS\",\n        fieldArray.length,\n        ...fieldArray\n      ],\n      opts\n    );\n  }\n};\n\n// pkg/commands/hpexpireat.ts\nvar HPExpireAtCommand = class extends Command {\n  constructor(cmd, opts) {\n    const [key, fields, timestamp, option] = cmd;\n    const fieldArray = Array.isArray(fields) ? fields : [fields];\n    super(\n      [\n        \"hpexpireat\",\n        key,\n        timestamp,\n        ...option ? [option] : [],\n        \"FIELDS\",\n        fieldArray.length,\n        ...fieldArray\n      ],\n      opts\n    );\n  }\n};\n\n// pkg/commands/hpexpiretime.ts\nvar HPExpireTimeCommand = class extends Command {\n  constructor(cmd, opts) {\n    const [key, fields] = cmd;\n    const fieldArray = Array.isArray(fields) ? fields : [fields];\n    super([\"hpexpiretime\", key, \"FIELDS\", fieldArray.length, ...fieldArray], opts);\n  }\n};\n\n// pkg/commands/hpttl.ts\nvar HPTtlCommand = class extends Command {\n  constructor(cmd, opts) {\n    const [key, fields] = cmd;\n    const fieldArray = Array.isArray(fields) ? fields : [fields];\n    super([\"hpttl\", key, \"FIELDS\", fieldArray.length, ...fieldArray], opts);\n  }\n};\n\n// pkg/commands/hget.ts\nvar HGetCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hget\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/hgetall.ts\nfunction deserialize2(result) {\n  if (result.length === 0) {\n    return null;\n  }\n  const obj = {};\n  for (let i = 0; i < result.length; i += 2) {\n    const key = result[i];\n    const value = result[i + 1];\n    try {\n      const valueIsNumberAndNotSafeInteger = !Number.isNaN(Number(value)) && !Number.isSafeInteger(Number(value));\n      obj[key] = valueIsNumberAndNotSafeInteger ? value : JSON.parse(value);\n    } catch {\n      obj[key] = value;\n    }\n  }\n  return obj;\n}\nvar HGetAllCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hgetall\", ...cmd], {\n      deserialize: (result) => deserialize2(result),\n      ...opts\n    });\n  }\n};\n\n// pkg/commands/hincrby.ts\nvar HIncrByCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hincrby\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/hincrbyfloat.ts\nvar HIncrByFloatCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hincrbyfloat\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/hkeys.ts\nvar HKeysCommand = class extends Command {\n  constructor([key], opts) {\n    super([\"hkeys\", key], opts);\n  }\n};\n\n// pkg/commands/hlen.ts\nvar HLenCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hlen\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/hmget.ts\nfunction deserialize3(fields, result) {\n  if (result.every((field) => field === null)) {\n    return null;\n  }\n  const obj = {};\n  for (const [i, field] of fields.entries()) {\n    try {\n      obj[field] = JSON.parse(result[i]);\n    } catch {\n      obj[field] = result[i];\n    }\n  }\n  return obj;\n}\nvar HMGetCommand = class extends Command {\n  constructor([key, ...fields], opts) {\n    super([\"hmget\", key, ...fields], {\n      deserialize: (result) => deserialize3(fields, result),\n      ...opts\n    });\n  }\n};\n\n// pkg/commands/hmset.ts\nvar HMSetCommand = class extends Command {\n  constructor([key, kv], opts) {\n    super([\"hmset\", key, ...Object.entries(kv).flatMap(([field, value]) => [field, value])], opts);\n  }\n};\n\n// pkg/commands/hscan.ts\nvar HScanCommand = class extends Command {\n  constructor([key, cursor, cmdOpts], opts) {\n    const command = [\"hscan\", key, cursor];\n    if (cmdOpts?.match) {\n      command.push(\"match\", cmdOpts.match);\n    }\n    if (typeof cmdOpts?.count === \"number\") {\n      command.push(\"count\", cmdOpts.count);\n    }\n    super(command, {\n      deserialize: deserializeScanResponse,\n      ...opts\n    });\n  }\n};\n\n// pkg/commands/hset.ts\nvar HSetCommand = class extends Command {\n  constructor([key, kv], opts) {\n    super([\"hset\", key, ...Object.entries(kv).flatMap(([field, value]) => [field, value])], opts);\n  }\n};\n\n// pkg/commands/hsetnx.ts\nvar HSetNXCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hsetnx\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/hstrlen.ts\nvar HStrLenCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hstrlen\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/httl.ts\nvar HTtlCommand = class extends Command {\n  constructor(cmd, opts) {\n    const [key, fields] = cmd;\n    const fieldArray = Array.isArray(fields) ? fields : [fields];\n    super([\"httl\", key, \"FIELDS\", fieldArray.length, ...fieldArray], opts);\n  }\n};\n\n// pkg/commands/hvals.ts\nvar HValsCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hvals\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/incr.ts\nvar IncrCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"incr\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/incrby.ts\nvar IncrByCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"incrby\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/incrbyfloat.ts\nvar IncrByFloatCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"incrbyfloat\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_arrappend.ts\nvar JsonArrAppendCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.ARRAPPEND\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_arrindex.ts\nvar JsonArrIndexCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.ARRINDEX\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_arrinsert.ts\nvar JsonArrInsertCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.ARRINSERT\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_arrlen.ts\nvar JsonArrLenCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.ARRLEN\", cmd[0], cmd[1] ?? \"$\"], opts);\n  }\n};\n\n// pkg/commands/json_arrpop.ts\nvar JsonArrPopCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.ARRPOP\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_arrtrim.ts\nvar JsonArrTrimCommand = class extends Command {\n  constructor(cmd, opts) {\n    const path = cmd[1] ?? \"$\";\n    const start = cmd[2] ?? 0;\n    const stop = cmd[3] ?? 0;\n    super([\"JSON.ARRTRIM\", cmd[0], path, start, stop], opts);\n  }\n};\n\n// pkg/commands/json_clear.ts\nvar JsonClearCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.CLEAR\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_del.ts\nvar JsonDelCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.DEL\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_forget.ts\nvar JsonForgetCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.FORGET\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_get.ts\nvar JsonGetCommand = class extends Command {\n  constructor(cmd, opts) {\n    const command = [\"JSON.GET\"];\n    if (typeof cmd[1] === \"string\") {\n      command.push(...cmd);\n    } else {\n      command.push(cmd[0]);\n      if (cmd[1]) {\n        if (cmd[1].indent) {\n          command.push(\"INDENT\", cmd[1].indent);\n        }\n        if (cmd[1].newline) {\n          command.push(\"NEWLINE\", cmd[1].newline);\n        }\n        if (cmd[1].space) {\n          command.push(\"SPACE\", cmd[1].space);\n        }\n      }\n      command.push(...cmd.slice(2));\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/json_merge.ts\nvar JsonMergeCommand = class extends Command {\n  constructor(cmd, opts) {\n    const command = [\"JSON.MERGE\", ...cmd];\n    super(command, opts);\n  }\n};\n\n// pkg/commands/json_mget.ts\nvar JsonMGetCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.MGET\", ...cmd[0], cmd[1]], opts);\n  }\n};\n\n// pkg/commands/json_mset.ts\nvar JsonMSetCommand = class extends Command {\n  constructor(cmd, opts) {\n    const command = [\"JSON.MSET\"];\n    for (const c of cmd) {\n      command.push(c.key, c.path, c.value);\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/json_numincrby.ts\nvar JsonNumIncrByCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.NUMINCRBY\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_nummultby.ts\nvar JsonNumMultByCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.NUMMULTBY\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_objkeys.ts\nvar JsonObjKeysCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.OBJKEYS\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_objlen.ts\nvar JsonObjLenCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.OBJLEN\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_resp.ts\nvar JsonRespCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.RESP\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_set.ts\nvar JsonSetCommand = class extends Command {\n  constructor(cmd, opts) {\n    const command = [\"JSON.SET\", cmd[0], cmd[1], cmd[2]];\n    if (cmd[3]) {\n      if (cmd[3].nx) {\n        command.push(\"NX\");\n      } else if (cmd[3].xx) {\n        command.push(\"XX\");\n      }\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/json_strappend.ts\nvar JsonStrAppendCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.STRAPPEND\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_strlen.ts\nvar JsonStrLenCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.STRLEN\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_toggle.ts\nvar JsonToggleCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.TOGGLE\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_type.ts\nvar JsonTypeCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.TYPE\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/keys.ts\nvar KeysCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"keys\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/lindex.ts\nvar LIndexCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"lindex\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/linsert.ts\nvar LInsertCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"linsert\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/llen.ts\nvar LLenCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"llen\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/lmove.ts\nvar LMoveCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"lmove\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/lmpop.ts\nvar LmPopCommand = class extends Command {\n  constructor(cmd, opts) {\n    const [numkeys, keys, direction, count] = cmd;\n    super([\"LMPOP\", numkeys, ...keys, direction, ...count ? [\"COUNT\", count] : []], opts);\n  }\n};\n\n// pkg/commands/lpop.ts\nvar LPopCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"lpop\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/lpos.ts\nvar LPosCommand = class extends Command {\n  constructor(cmd, opts) {\n    const args = [\"lpos\", cmd[0], cmd[1]];\n    if (typeof cmd[2]?.rank === \"number\") {\n      args.push(\"rank\", cmd[2].rank);\n    }\n    if (typeof cmd[2]?.count === \"number\") {\n      args.push(\"count\", cmd[2].count);\n    }\n    if (typeof cmd[2]?.maxLen === \"number\") {\n      args.push(\"maxLen\", cmd[2].maxLen);\n    }\n    super(args, opts);\n  }\n};\n\n// pkg/commands/lpush.ts\nvar LPushCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"lpush\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/lpushx.ts\nvar LPushXCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"lpushx\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/lrange.ts\nvar LRangeCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"lrange\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/lrem.ts\nvar LRemCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"lrem\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/lset.ts\nvar LSetCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"lset\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/ltrim.ts\nvar LTrimCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"ltrim\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/mget.ts\nvar MGetCommand = class extends Command {\n  constructor(cmd, opts) {\n    const keys = Array.isArray(cmd[0]) ? cmd[0] : cmd;\n    super([\"mget\", ...keys], opts);\n  }\n};\n\n// pkg/commands/mset.ts\nvar MSetCommand = class extends Command {\n  constructor([kv], opts) {\n    super([\"mset\", ...Object.entries(kv).flatMap(([key, value]) => [key, value])], opts);\n  }\n};\n\n// pkg/commands/msetnx.ts\nvar MSetNXCommand = class extends Command {\n  constructor([kv], opts) {\n    super([\"msetnx\", ...Object.entries(kv).flat()], opts);\n  }\n};\n\n// pkg/commands/persist.ts\nvar PersistCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"persist\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/pexpire.ts\nvar PExpireCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"pexpire\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/pexpireat.ts\nvar PExpireAtCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"pexpireat\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/pfadd.ts\nvar PfAddCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"pfadd\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/pfcount.ts\nvar PfCountCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"pfcount\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/pfmerge.ts\nvar PfMergeCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"pfmerge\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/ping.ts\nvar PingCommand = class extends Command {\n  constructor(cmd, opts) {\n    const command = [\"ping\"];\n    if (cmd?.[0] !== void 0) {\n      command.push(cmd[0]);\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/psetex.ts\nvar PSetEXCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"psetex\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/pttl.ts\nvar PTtlCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"pttl\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/publish.ts\nvar PublishCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"publish\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/randomkey.ts\nvar RandomKeyCommand = class extends Command {\n  constructor(opts) {\n    super([\"randomkey\"], opts);\n  }\n};\n\n// pkg/commands/rename.ts\nvar RenameCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"rename\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/renamenx.ts\nvar RenameNXCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"renamenx\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/rpop.ts\nvar RPopCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"rpop\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/rpush.ts\nvar RPushCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"rpush\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/rpushx.ts\nvar RPushXCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"rpushx\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/sadd.ts\nvar SAddCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"sadd\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/scan.ts\nvar ScanCommand = class extends Command {\n  constructor([cursor, opts], cmdOpts) {\n    const command = [\"scan\", cursor];\n    if (opts?.match) {\n      command.push(\"match\", opts.match);\n    }\n    if (typeof opts?.count === \"number\") {\n      command.push(\"count\", opts.count);\n    }\n    if (opts && \"withType\" in opts && opts.withType === true) {\n      command.push(\"withtype\");\n    } else if (opts && \"type\" in opts && opts.type && opts.type.length > 0) {\n      command.push(\"type\", opts.type);\n    }\n    super(command, {\n      // @ts-expect-error ignore types here\n      deserialize: opts?.withType ? deserializeScanWithTypesResponse : deserializeScanResponse,\n      ...cmdOpts\n    });\n  }\n};\n\n// pkg/commands/scard.ts\nvar SCardCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"scard\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/script_exists.ts\nvar ScriptExistsCommand = class extends Command {\n  constructor(hashes, opts) {\n    super([\"script\", \"exists\", ...hashes], {\n      deserialize: (result) => result,\n      ...opts\n    });\n  }\n};\n\n// pkg/commands/script_flush.ts\nvar ScriptFlushCommand = class extends Command {\n  constructor([opts], cmdOpts) {\n    const cmd = [\"script\", \"flush\"];\n    if (opts?.sync) {\n      cmd.push(\"sync\");\n    } else if (opts?.async) {\n      cmd.push(\"async\");\n    }\n    super(cmd, cmdOpts);\n  }\n};\n\n// pkg/commands/script_load.ts\nvar ScriptLoadCommand = class extends Command {\n  constructor(args, opts) {\n    super([\"script\", \"load\", ...args], opts);\n  }\n};\n\n// pkg/commands/sdiff.ts\nvar SDiffCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"sdiff\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/sdiffstore.ts\nvar SDiffStoreCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"sdiffstore\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/set.ts\nvar SetCommand = class extends Command {\n  constructor([key, value, opts], cmdOpts) {\n    const command = [\"set\", key, value];\n    if (opts) {\n      if (\"nx\" in opts && opts.nx) {\n        command.push(\"nx\");\n      } else if (\"xx\" in opts && opts.xx) {\n        command.push(\"xx\");\n      }\n      if (\"get\" in opts && opts.get) {\n        command.push(\"get\");\n      }\n      if (\"ex\" in opts && typeof opts.ex === \"number\") {\n        command.push(\"ex\", opts.ex);\n      } else if (\"px\" in opts && typeof opts.px === \"number\") {\n        command.push(\"px\", opts.px);\n      } else if (\"exat\" in opts && typeof opts.exat === \"number\") {\n        command.push(\"exat\", opts.exat);\n      } else if (\"pxat\" in opts && typeof opts.pxat === \"number\") {\n        command.push(\"pxat\", opts.pxat);\n      } else if (\"keepTtl\" in opts && opts.keepTtl) {\n        command.push(\"keepTtl\");\n      }\n    }\n    super(command, cmdOpts);\n  }\n};\n\n// pkg/commands/setbit.ts\nvar SetBitCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"setbit\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/setex.ts\nvar SetExCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"setex\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/setnx.ts\nvar SetNxCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"setnx\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/setrange.ts\nvar SetRangeCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"setrange\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/sinter.ts\nvar SInterCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"sinter\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/sinterstore.ts\nvar SInterStoreCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"sinterstore\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/sismember.ts\nvar SIsMemberCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"sismember\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/smembers.ts\nvar SMembersCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"smembers\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/smismember.ts\nvar SMIsMemberCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"smismember\", cmd[0], ...cmd[1]], opts);\n  }\n};\n\n// pkg/commands/smove.ts\nvar SMoveCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"smove\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/spop.ts\nvar SPopCommand = class extends Command {\n  constructor([key, count], opts) {\n    const command = [\"spop\", key];\n    if (typeof count === \"number\") {\n      command.push(count);\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/srandmember.ts\nvar SRandMemberCommand = class extends Command {\n  constructor([key, count], opts) {\n    const command = [\"srandmember\", key];\n    if (typeof count === \"number\") {\n      command.push(count);\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/srem.ts\nvar SRemCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"srem\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/sscan.ts\nvar SScanCommand = class extends Command {\n  constructor([key, cursor, opts], cmdOpts) {\n    const command = [\"sscan\", key, cursor];\n    if (opts?.match) {\n      command.push(\"match\", opts.match);\n    }\n    if (typeof opts?.count === \"number\") {\n      command.push(\"count\", opts.count);\n    }\n    super(command, {\n      deserialize: deserializeScanResponse,\n      ...cmdOpts\n    });\n  }\n};\n\n// pkg/commands/strlen.ts\nvar StrLenCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"strlen\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/sunion.ts\nvar SUnionCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"sunion\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/sunionstore.ts\nvar SUnionStoreCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"sunionstore\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/time.ts\nvar TimeCommand = class extends Command {\n  constructor(opts) {\n    super([\"time\"], opts);\n  }\n};\n\n// pkg/commands/touch.ts\nvar TouchCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"touch\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/ttl.ts\nvar TtlCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"ttl\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/type.ts\nvar TypeCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"type\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/unlink.ts\nvar UnlinkCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"unlink\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/xack.ts\nvar XAckCommand = class extends Command {\n  constructor([key, group, id], opts) {\n    const ids = Array.isArray(id) ? [...id] : [id];\n    super([\"XACK\", key, group, ...ids], opts);\n  }\n};\n\n// pkg/commands/xadd.ts\nvar XAddCommand = class extends Command {\n  constructor([key, id, entries, opts], commandOptions) {\n    const command = [\"XADD\", key];\n    if (opts) {\n      if (opts.nomkStream) {\n        command.push(\"NOMKSTREAM\");\n      }\n      if (opts.trim) {\n        command.push(opts.trim.type, opts.trim.comparison, opts.trim.threshold);\n        if (opts.trim.limit !== void 0) {\n          command.push(\"LIMIT\", opts.trim.limit);\n        }\n      }\n    }\n    command.push(id);\n    for (const [k, v] of Object.entries(entries)) {\n      command.push(k, v);\n    }\n    super(command, commandOptions);\n  }\n};\n\n// pkg/commands/xautoclaim.ts\nvar XAutoClaim = class extends Command {\n  constructor([key, group, consumer, minIdleTime, start, options], opts) {\n    const commands = [];\n    if (options?.count) {\n      commands.push(\"COUNT\", options.count);\n    }\n    if (options?.justId) {\n      commands.push(\"JUSTID\");\n    }\n    super([\"XAUTOCLAIM\", key, group, consumer, minIdleTime, start, ...commands], opts);\n  }\n};\n\n// pkg/commands/xclaim.ts\nvar XClaimCommand = class extends Command {\n  constructor([key, group, consumer, minIdleTime, id, options], opts) {\n    const ids = Array.isArray(id) ? [...id] : [id];\n    const commands = [];\n    if (options?.idleMS) {\n      commands.push(\"IDLE\", options.idleMS);\n    }\n    if (options?.idleMS) {\n      commands.push(\"TIME\", options.timeMS);\n    }\n    if (options?.retryCount) {\n      commands.push(\"RETRYCOUNT\", options.retryCount);\n    }\n    if (options?.force) {\n      commands.push(\"FORCE\");\n    }\n    if (options?.justId) {\n      commands.push(\"JUSTID\");\n    }\n    if (options?.lastId) {\n      commands.push(\"LASTID\", options.lastId);\n    }\n    super([\"XCLAIM\", key, group, consumer, minIdleTime, ...ids, ...commands], opts);\n  }\n};\n\n// pkg/commands/xdel.ts\nvar XDelCommand = class extends Command {\n  constructor([key, ids], opts) {\n    const cmds = Array.isArray(ids) ? [...ids] : [ids];\n    super([\"XDEL\", key, ...cmds], opts);\n  }\n};\n\n// pkg/commands/xgroup.ts\nvar XGroupCommand = class extends Command {\n  constructor([key, opts], commandOptions) {\n    const command = [\"XGROUP\"];\n    switch (opts.type) {\n      case \"CREATE\": {\n        command.push(\"CREATE\", key, opts.group, opts.id);\n        if (opts.options) {\n          if (opts.options.MKSTREAM) {\n            command.push(\"MKSTREAM\");\n          }\n          if (opts.options.ENTRIESREAD !== void 0) {\n            command.push(\"ENTRIESREAD\", opts.options.ENTRIESREAD.toString());\n          }\n        }\n        break;\n      }\n      case \"CREATECONSUMER\": {\n        command.push(\"CREATECONSUMER\", key, opts.group, opts.consumer);\n        break;\n      }\n      case \"DELCONSUMER\": {\n        command.push(\"DELCONSUMER\", key, opts.group, opts.consumer);\n        break;\n      }\n      case \"DESTROY\": {\n        command.push(\"DESTROY\", key, opts.group);\n        break;\n      }\n      case \"SETID\": {\n        command.push(\"SETID\", key, opts.group, opts.id);\n        if (opts.options?.ENTRIESREAD !== void 0) {\n          command.push(\"ENTRIESREAD\", opts.options.ENTRIESREAD.toString());\n        }\n        break;\n      }\n      default: {\n        throw new Error(\"Invalid XGROUP\");\n      }\n    }\n    super(command, commandOptions);\n  }\n};\n\n// pkg/commands/xinfo.ts\nvar XInfoCommand = class extends Command {\n  constructor([key, options], opts) {\n    const cmds = [];\n    if (options.type === \"CONSUMERS\") {\n      cmds.push(\"CONSUMERS\", key, options.group);\n    } else {\n      cmds.push(\"GROUPS\", key);\n    }\n    super([\"XINFO\", ...cmds], opts);\n  }\n};\n\n// pkg/commands/xlen.ts\nvar XLenCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"XLEN\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/xpending.ts\nvar XPendingCommand = class extends Command {\n  constructor([key, group, start, end, count, options], opts) {\n    const consumers = options?.consumer === void 0 ? [] : Array.isArray(options.consumer) ? [...options.consumer] : [options.consumer];\n    super(\n      [\n        \"XPENDING\",\n        key,\n        group,\n        ...options?.idleTime ? [\"IDLE\", options.idleTime] : [],\n        start,\n        end,\n        count,\n        ...consumers\n      ],\n      opts\n    );\n  }\n};\n\n// pkg/commands/xrange.ts\nfunction deserialize4(result) {\n  const obj = {};\n  for (const e of result) {\n    for (let i = 0; i < e.length; i += 2) {\n      const streamId = e[i];\n      const entries = e[i + 1];\n      if (!(streamId in obj)) {\n        obj[streamId] = {};\n      }\n      for (let j = 0; j < entries.length; j += 2) {\n        const field = entries[j];\n        const value = entries[j + 1];\n        try {\n          obj[streamId][field] = JSON.parse(value);\n        } catch {\n          obj[streamId][field] = value;\n        }\n      }\n    }\n  }\n  return obj;\n}\nvar XRangeCommand = class extends Command {\n  constructor([key, start, end, count], opts) {\n    const command = [\"XRANGE\", key, start, end];\n    if (typeof count === \"number\") {\n      command.push(\"COUNT\", count);\n    }\n    super(command, {\n      deserialize: (result) => deserialize4(result),\n      ...opts\n    });\n  }\n};\n\n// pkg/commands/xread.ts\nvar UNBALANCED_XREAD_ERR = \"ERR Unbalanced XREAD list of streams: for each stream key an ID or '$' must be specified\";\nvar XReadCommand = class extends Command {\n  constructor([key, id, options], opts) {\n    if (Array.isArray(key) && Array.isArray(id) && key.length !== id.length) {\n      throw new Error(UNBALANCED_XREAD_ERR);\n    }\n    const commands = [];\n    if (typeof options?.count === \"number\") {\n      commands.push(\"COUNT\", options.count);\n    }\n    if (typeof options?.blockMS === \"number\") {\n      commands.push(\"BLOCK\", options.blockMS);\n    }\n    commands.push(\n      \"STREAMS\",\n      ...Array.isArray(key) ? [...key] : [key],\n      ...Array.isArray(id) ? [...id] : [id]\n    );\n    super([\"XREAD\", ...commands], opts);\n  }\n};\n\n// pkg/commands/xreadgroup.ts\nvar UNBALANCED_XREADGROUP_ERR = \"ERR Unbalanced XREADGROUP list of streams: for each stream key an ID or '$' must be specified\";\nvar XReadGroupCommand = class extends Command {\n  constructor([group, consumer, key, id, options], opts) {\n    if (Array.isArray(key) && Array.isArray(id) && key.length !== id.length) {\n      throw new Error(UNBALANCED_XREADGROUP_ERR);\n    }\n    const commands = [];\n    if (typeof options?.count === \"number\") {\n      commands.push(\"COUNT\", options.count);\n    }\n    if (typeof options?.blockMS === \"number\") {\n      commands.push(\"BLOCK\", options.blockMS);\n    }\n    if (typeof options?.NOACK === \"boolean\" && options.NOACK) {\n      commands.push(\"NOACK\");\n    }\n    commands.push(\n      \"STREAMS\",\n      ...Array.isArray(key) ? [...key] : [key],\n      ...Array.isArray(id) ? [...id] : [id]\n    );\n    super([\"XREADGROUP\", \"GROUP\", group, consumer, ...commands], opts);\n  }\n};\n\n// pkg/commands/xrevrange.ts\nvar XRevRangeCommand = class extends Command {\n  constructor([key, end, start, count], opts) {\n    const command = [\"XREVRANGE\", key, end, start];\n    if (typeof count === \"number\") {\n      command.push(\"COUNT\", count);\n    }\n    super(command, {\n      deserialize: (result) => deserialize5(result),\n      ...opts\n    });\n  }\n};\nfunction deserialize5(result) {\n  const obj = {};\n  for (const e of result) {\n    for (let i = 0; i < e.length; i += 2) {\n      const streamId = e[i];\n      const entries = e[i + 1];\n      if (!(streamId in obj)) {\n        obj[streamId] = {};\n      }\n      for (let j = 0; j < entries.length; j += 2) {\n        const field = entries[j];\n        const value = entries[j + 1];\n        try {\n          obj[streamId][field] = JSON.parse(value);\n        } catch {\n          obj[streamId][field] = value;\n        }\n      }\n    }\n  }\n  return obj;\n}\n\n// pkg/commands/xtrim.ts\nvar XTrimCommand = class extends Command {\n  constructor([key, options], opts) {\n    const { limit, strategy, threshold, exactness = \"~\" } = options;\n    super([\"XTRIM\", key, strategy, exactness, threshold, ...limit ? [\"LIMIT\", limit] : []], opts);\n  }\n};\n\n// pkg/commands/zadd.ts\nvar ZAddCommand = class extends Command {\n  constructor([key, arg1, ...arg2], opts) {\n    const command = [\"zadd\", key];\n    if (\"nx\" in arg1 && arg1.nx) {\n      command.push(\"nx\");\n    } else if (\"xx\" in arg1 && arg1.xx) {\n      command.push(\"xx\");\n    }\n    if (\"ch\" in arg1 && arg1.ch) {\n      command.push(\"ch\");\n    }\n    if (\"incr\" in arg1 && arg1.incr) {\n      command.push(\"incr\");\n    }\n    if (\"lt\" in arg1 && arg1.lt) {\n      command.push(\"lt\");\n    } else if (\"gt\" in arg1 && arg1.gt) {\n      command.push(\"gt\");\n    }\n    if (\"score\" in arg1 && \"member\" in arg1) {\n      command.push(arg1.score, arg1.member);\n    }\n    command.push(...arg2.flatMap(({ score, member }) => [score, member]));\n    super(command, opts);\n  }\n};\n\n// pkg/commands/zcard.ts\nvar ZCardCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zcard\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zcount.ts\nvar ZCountCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zcount\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zincrby.ts\nvar ZIncrByCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zincrby\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zinterstore.ts\nvar ZInterStoreCommand = class extends Command {\n  constructor([destination, numKeys, keyOrKeys, opts], cmdOpts) {\n    const command = [\"zinterstore\", destination, numKeys];\n    if (Array.isArray(keyOrKeys)) {\n      command.push(...keyOrKeys);\n    } else {\n      command.push(keyOrKeys);\n    }\n    if (opts) {\n      if (\"weights\" in opts && opts.weights) {\n        command.push(\"weights\", ...opts.weights);\n      } else if (\"weight\" in opts && typeof opts.weight === \"number\") {\n        command.push(\"weights\", opts.weight);\n      }\n      if (\"aggregate\" in opts) {\n        command.push(\"aggregate\", opts.aggregate);\n      }\n    }\n    super(command, cmdOpts);\n  }\n};\n\n// pkg/commands/zlexcount.ts\nvar ZLexCountCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zlexcount\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zpopmax.ts\nvar ZPopMaxCommand = class extends Command {\n  constructor([key, count], opts) {\n    const command = [\"zpopmax\", key];\n    if (typeof count === \"number\") {\n      command.push(count);\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/zpopmin.ts\nvar ZPopMinCommand = class extends Command {\n  constructor([key, count], opts) {\n    const command = [\"zpopmin\", key];\n    if (typeof count === \"number\") {\n      command.push(count);\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/zrange.ts\nvar ZRangeCommand = class extends Command {\n  constructor([key, min, max, opts], cmdOpts) {\n    const command = [\"zrange\", key, min, max];\n    if (opts?.byScore) {\n      command.push(\"byscore\");\n    }\n    if (opts?.byLex) {\n      command.push(\"bylex\");\n    }\n    if (opts?.rev) {\n      command.push(\"rev\");\n    }\n    if (opts?.count !== void 0 && opts.offset !== void 0) {\n      command.push(\"limit\", opts.offset, opts.count);\n    }\n    if (opts?.withScores) {\n      command.push(\"withscores\");\n    }\n    super(command, cmdOpts);\n  }\n};\n\n// pkg/commands/zrank.ts\nvar ZRankCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zrank\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zrem.ts\nvar ZRemCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zrem\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zremrangebylex.ts\nvar ZRemRangeByLexCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zremrangebylex\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zremrangebyrank.ts\nvar ZRemRangeByRankCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zremrangebyrank\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zremrangebyscore.ts\nvar ZRemRangeByScoreCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zremrangebyscore\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zrevrank.ts\nvar ZRevRankCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zrevrank\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zscan.ts\nvar ZScanCommand = class extends Command {\n  constructor([key, cursor, opts], cmdOpts) {\n    const command = [\"zscan\", key, cursor];\n    if (opts?.match) {\n      command.push(\"match\", opts.match);\n    }\n    if (typeof opts?.count === \"number\") {\n      command.push(\"count\", opts.count);\n    }\n    super(command, {\n      deserialize: deserializeScanResponse,\n      ...cmdOpts\n    });\n  }\n};\n\n// pkg/commands/zscore.ts\nvar ZScoreCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zscore\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zunion.ts\nvar ZUnionCommand = class extends Command {\n  constructor([numKeys, keyOrKeys, opts], cmdOpts) {\n    const command = [\"zunion\", numKeys];\n    if (Array.isArray(keyOrKeys)) {\n      command.push(...keyOrKeys);\n    } else {\n      command.push(keyOrKeys);\n    }\n    if (opts) {\n      if (\"weights\" in opts && opts.weights) {\n        command.push(\"weights\", ...opts.weights);\n      } else if (\"weight\" in opts && typeof opts.weight === \"number\") {\n        command.push(\"weights\", opts.weight);\n      }\n      if (\"aggregate\" in opts) {\n        command.push(\"aggregate\", opts.aggregate);\n      }\n      if (opts.withScores) {\n        command.push(\"withscores\");\n      }\n    }\n    super(command, cmdOpts);\n  }\n};\n\n// pkg/commands/zunionstore.ts\nvar ZUnionStoreCommand = class extends Command {\n  constructor([destination, numKeys, keyOrKeys, opts], cmdOpts) {\n    const command = [\"zunionstore\", destination, numKeys];\n    if (Array.isArray(keyOrKeys)) {\n      command.push(...keyOrKeys);\n    } else {\n      command.push(keyOrKeys);\n    }\n    if (opts) {\n      if (\"weights\" in opts && opts.weights) {\n        command.push(\"weights\", ...opts.weights);\n      } else if (\"weight\" in opts && typeof opts.weight === \"number\") {\n        command.push(\"weights\", opts.weight);\n      }\n      if (\"aggregate\" in opts) {\n        command.push(\"aggregate\", opts.aggregate);\n      }\n    }\n    super(command, cmdOpts);\n  }\n};\n\n// pkg/commands/zdiffstore.ts\nvar ZDiffStoreCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zdiffstore\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zmscore.ts\nvar ZMScoreCommand = class extends Command {\n  constructor(cmd, opts) {\n    const [key, members] = cmd;\n    super([\"zmscore\", key, ...members], opts);\n  }\n};\n\n// pkg/pipeline.ts\nvar Pipeline = class {\n  client;\n  commands;\n  commandOptions;\n  multiExec;\n  constructor(opts) {\n    this.client = opts.client;\n    this.commands = [];\n    this.commandOptions = opts.commandOptions;\n    this.multiExec = opts.multiExec ?? false;\n    if (this.commandOptions?.latencyLogging) {\n      const originalExec = this.exec.bind(this);\n      this.exec = async (options) => {\n        const start = performance.now();\n        const result = await (options ? originalExec(options) : originalExec());\n        const end = performance.now();\n        const loggerResult = (end - start).toFixed(2);\n        console.log(\n          `Latency for \\x1B[38;2;19;185;39m${this.multiExec ? [\"MULTI-EXEC\"] : [\"PIPELINE\"].toString().toUpperCase()}\\x1B[0m: \\x1B[38;2;0;255;255m${loggerResult} ms\\x1B[0m`\n        );\n        return result;\n      };\n    }\n  }\n  exec = async (options) => {\n    if (this.commands.length === 0) {\n      throw new Error(\"Pipeline is empty\");\n    }\n    const path = this.multiExec ? [\"multi-exec\"] : [\"pipeline\"];\n    const res = await this.client.request({\n      path,\n      body: Object.values(this.commands).map((c) => c.command)\n    });\n    return options?.keepErrors ? res.map(({ error, result }, i) => {\n      return {\n        error,\n        result: this.commands[i].deserialize(result)\n      };\n    }) : res.map(({ error, result }, i) => {\n      if (error) {\n        throw new UpstashError(\n          `Command ${i + 1} [ ${this.commands[i].command[0]} ] failed: ${error}`\n        );\n      }\n      return this.commands[i].deserialize(result);\n    });\n  };\n  /**\n   * Returns the length of pipeline before the execution\n   */\n  length() {\n    return this.commands.length;\n  }\n  /**\n   * Pushes a command into the pipeline and returns a chainable instance of the\n   * pipeline\n   */\n  chain(command) {\n    this.commands.push(command);\n    return this;\n  }\n  /**\n   * @see https://redis.io/commands/append\n   */\n  append = (...args) => this.chain(new AppendCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/bitcount\n   */\n  bitcount = (...args) => this.chain(new BitCountCommand(args, this.commandOptions));\n  /**\n   * Returns an instance that can be used to execute `BITFIELD` commands on one key.\n   *\n   * @example\n   * ```typescript\n   * redis.set(\"mykey\", 0);\n   * const result = await redis.pipeline()\n   *   .bitfield(\"mykey\")\n   *   .set(\"u4\", 0, 16)\n   *   .incr(\"u4\", \"#1\", 1)\n   *   .exec();\n   * console.log(result); // [[0, 1]]\n   * ```\n   *\n   * @see https://redis.io/commands/bitfield\n   */\n  bitfield = (...args) => new BitFieldCommand(args, this.client, this.commandOptions, this.chain.bind(this));\n  /**\n   * @see https://redis.io/commands/bitop\n   */\n  bitop = (op, destinationKey, sourceKey, ...sourceKeys) => this.chain(\n    new BitOpCommand([op, destinationKey, sourceKey, ...sourceKeys], this.commandOptions)\n  );\n  /**\n   * @see https://redis.io/commands/bitpos\n   */\n  bitpos = (...args) => this.chain(new BitPosCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/copy\n   */\n  copy = (...args) => this.chain(new CopyCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zdiffstore\n   */\n  zdiffstore = (...args) => this.chain(new ZDiffStoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/dbsize\n   */\n  dbsize = () => this.chain(new DBSizeCommand(this.commandOptions));\n  /**\n   * @see https://redis.io/commands/decr\n   */\n  decr = (...args) => this.chain(new DecrCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/decrby\n   */\n  decrby = (...args) => this.chain(new DecrByCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/del\n   */\n  del = (...args) => this.chain(new DelCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/echo\n   */\n  echo = (...args) => this.chain(new EchoCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/eval_ro\n   */\n  evalRo = (...args) => this.chain(new EvalROCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/eval\n   */\n  eval = (...args) => this.chain(new EvalCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/evalsha_ro\n   */\n  evalshaRo = (...args) => this.chain(new EvalshaROCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/evalsha\n   */\n  evalsha = (...args) => this.chain(new EvalshaCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/exists\n   */\n  exists = (...args) => this.chain(new ExistsCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/expire\n   */\n  expire = (...args) => this.chain(new ExpireCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/expireat\n   */\n  expireat = (...args) => this.chain(new ExpireAtCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/flushall\n   */\n  flushall = (args) => this.chain(new FlushAllCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/flushdb\n   */\n  flushdb = (...args) => this.chain(new FlushDBCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/geoadd\n   */\n  geoadd = (...args) => this.chain(new GeoAddCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/geodist\n   */\n  geodist = (...args) => this.chain(new GeoDistCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/geopos\n   */\n  geopos = (...args) => this.chain(new GeoPosCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/geohash\n   */\n  geohash = (...args) => this.chain(new GeoHashCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/geosearch\n   */\n  geosearch = (...args) => this.chain(new GeoSearchCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/geosearchstore\n   */\n  geosearchstore = (...args) => this.chain(new GeoSearchStoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/get\n   */\n  get = (...args) => this.chain(new GetCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/getbit\n   */\n  getbit = (...args) => this.chain(new GetBitCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/getdel\n   */\n  getdel = (...args) => this.chain(new GetDelCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/getex\n   */\n  getex = (...args) => this.chain(new GetExCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/getrange\n   */\n  getrange = (...args) => this.chain(new GetRangeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/getset\n   */\n  getset = (key, value) => this.chain(new GetSetCommand([key, value], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hdel\n   */\n  hdel = (...args) => this.chain(new HDelCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hexists\n   */\n  hexists = (...args) => this.chain(new HExistsCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hexpire\n   */\n  hexpire = (...args) => this.chain(new HExpireCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hexpireat\n   */\n  hexpireat = (...args) => this.chain(new HExpireAtCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hexpiretime\n   */\n  hexpiretime = (...args) => this.chain(new HExpireTimeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/httl\n   */\n  httl = (...args) => this.chain(new HTtlCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hpexpire\n   */\n  hpexpire = (...args) => this.chain(new HPExpireCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hpexpireat\n   */\n  hpexpireat = (...args) => this.chain(new HPExpireAtCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hpexpiretime\n   */\n  hpexpiretime = (...args) => this.chain(new HPExpireTimeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hpttl\n   */\n  hpttl = (...args) => this.chain(new HPTtlCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hpersist\n   */\n  hpersist = (...args) => this.chain(new HPersistCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hget\n   */\n  hget = (...args) => this.chain(new HGetCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hgetall\n   */\n  hgetall = (...args) => this.chain(new HGetAllCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hincrby\n   */\n  hincrby = (...args) => this.chain(new HIncrByCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hincrbyfloat\n   */\n  hincrbyfloat = (...args) => this.chain(new HIncrByFloatCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hkeys\n   */\n  hkeys = (...args) => this.chain(new HKeysCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hlen\n   */\n  hlen = (...args) => this.chain(new HLenCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hmget\n   */\n  hmget = (...args) => this.chain(new HMGetCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hmset\n   */\n  hmset = (key, kv) => this.chain(new HMSetCommand([key, kv], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hrandfield\n   */\n  hrandfield = (key, count, withValues) => this.chain(new HRandFieldCommand([key, count, withValues], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hscan\n   */\n  hscan = (...args) => this.chain(new HScanCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hset\n   */\n  hset = (key, kv) => this.chain(new HSetCommand([key, kv], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hsetnx\n   */\n  hsetnx = (key, field, value) => this.chain(new HSetNXCommand([key, field, value], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hstrlen\n   */\n  hstrlen = (...args) => this.chain(new HStrLenCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hvals\n   */\n  hvals = (...args) => this.chain(new HValsCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/incr\n   */\n  incr = (...args) => this.chain(new IncrCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/incrby\n   */\n  incrby = (...args) => this.chain(new IncrByCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/incrbyfloat\n   */\n  incrbyfloat = (...args) => this.chain(new IncrByFloatCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/keys\n   */\n  keys = (...args) => this.chain(new KeysCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lindex\n   */\n  lindex = (...args) => this.chain(new LIndexCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/linsert\n   */\n  linsert = (key, direction, pivot, value) => this.chain(new LInsertCommand([key, direction, pivot, value], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/llen\n   */\n  llen = (...args) => this.chain(new LLenCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lmove\n   */\n  lmove = (...args) => this.chain(new LMoveCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lpop\n   */\n  lpop = (...args) => this.chain(new LPopCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lmpop\n   */\n  lmpop = (...args) => this.chain(new LmPopCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lpos\n   */\n  lpos = (...args) => this.chain(new LPosCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lpush\n   */\n  lpush = (key, ...elements) => this.chain(new LPushCommand([key, ...elements], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lpushx\n   */\n  lpushx = (key, ...elements) => this.chain(new LPushXCommand([key, ...elements], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lrange\n   */\n  lrange = (...args) => this.chain(new LRangeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lrem\n   */\n  lrem = (key, count, value) => this.chain(new LRemCommand([key, count, value], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lset\n   */\n  lset = (key, index, value) => this.chain(new LSetCommand([key, index, value], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/ltrim\n   */\n  ltrim = (...args) => this.chain(new LTrimCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/mget\n   */\n  mget = (...args) => this.chain(new MGetCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/mset\n   */\n  mset = (kv) => this.chain(new MSetCommand([kv], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/msetnx\n   */\n  msetnx = (kv) => this.chain(new MSetNXCommand([kv], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/persist\n   */\n  persist = (...args) => this.chain(new PersistCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/pexpire\n   */\n  pexpire = (...args) => this.chain(new PExpireCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/pexpireat\n   */\n  pexpireat = (...args) => this.chain(new PExpireAtCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/pfadd\n   */\n  pfadd = (...args) => this.chain(new PfAddCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/pfcount\n   */\n  pfcount = (...args) => this.chain(new PfCountCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/pfmerge\n   */\n  pfmerge = (...args) => this.chain(new PfMergeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/ping\n   */\n  ping = (args) => this.chain(new PingCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/psetex\n   */\n  psetex = (key, ttl, value) => this.chain(new PSetEXCommand([key, ttl, value], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/pttl\n   */\n  pttl = (...args) => this.chain(new PTtlCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/publish\n   */\n  publish = (...args) => this.chain(new PublishCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/randomkey\n   */\n  randomkey = () => this.chain(new RandomKeyCommand(this.commandOptions));\n  /**\n   * @see https://redis.io/commands/rename\n   */\n  rename = (...args) => this.chain(new RenameCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/renamenx\n   */\n  renamenx = (...args) => this.chain(new RenameNXCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/rpop\n   */\n  rpop = (...args) => this.chain(new RPopCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/rpush\n   */\n  rpush = (key, ...elements) => this.chain(new RPushCommand([key, ...elements], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/rpushx\n   */\n  rpushx = (key, ...elements) => this.chain(new RPushXCommand([key, ...elements], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/sadd\n   */\n  sadd = (key, member, ...members) => this.chain(new SAddCommand([key, member, ...members], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/scan\n   */\n  scan = (...args) => this.chain(new ScanCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/scard\n   */\n  scard = (...args) => this.chain(new SCardCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/script-exists\n   */\n  scriptExists = (...args) => this.chain(new ScriptExistsCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/script-flush\n   */\n  scriptFlush = (...args) => this.chain(new ScriptFlushCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/script-load\n   */\n  scriptLoad = (...args) => this.chain(new ScriptLoadCommand(args, this.commandOptions));\n  /*)*\n   * @see https://redis.io/commands/sdiff\n   */\n  sdiff = (...args) => this.chain(new SDiffCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/sdiffstore\n   */\n  sdiffstore = (...args) => this.chain(new SDiffStoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/set\n   */\n  set = (key, value, opts) => this.chain(new SetCommand([key, value, opts], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/setbit\n   */\n  setbit = (...args) => this.chain(new SetBitCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/setex\n   */\n  setex = (key, ttl, value) => this.chain(new SetExCommand([key, ttl, value], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/setnx\n   */\n  setnx = (key, value) => this.chain(new SetNxCommand([key, value], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/setrange\n   */\n  setrange = (...args) => this.chain(new SetRangeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/sinter\n   */\n  sinter = (...args) => this.chain(new SInterCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/sinterstore\n   */\n  sinterstore = (...args) => this.chain(new SInterStoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/sismember\n   */\n  sismember = (key, member) => this.chain(new SIsMemberCommand([key, member], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/smembers\n   */\n  smembers = (...args) => this.chain(new SMembersCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/smismember\n   */\n  smismember = (key, members) => this.chain(new SMIsMemberCommand([key, members], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/smove\n   */\n  smove = (source, destination, member) => this.chain(new SMoveCommand([source, destination, member], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/spop\n   */\n  spop = (...args) => this.chain(new SPopCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/srandmember\n   */\n  srandmember = (...args) => this.chain(new SRandMemberCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/srem\n   */\n  srem = (key, ...members) => this.chain(new SRemCommand([key, ...members], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/sscan\n   */\n  sscan = (...args) => this.chain(new SScanCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/strlen\n   */\n  strlen = (...args) => this.chain(new StrLenCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/sunion\n   */\n  sunion = (...args) => this.chain(new SUnionCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/sunionstore\n   */\n  sunionstore = (...args) => this.chain(new SUnionStoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/time\n   */\n  time = () => this.chain(new TimeCommand(this.commandOptions));\n  /**\n   * @see https://redis.io/commands/touch\n   */\n  touch = (...args) => this.chain(new TouchCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/ttl\n   */\n  ttl = (...args) => this.chain(new TtlCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/type\n   */\n  type = (...args) => this.chain(new TypeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/unlink\n   */\n  unlink = (...args) => this.chain(new UnlinkCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zadd\n   */\n  zadd = (...args) => {\n    if (\"score\" in args[1]) {\n      return this.chain(\n        new ZAddCommand([args[0], args[1], ...args.slice(2)], this.commandOptions)\n      );\n    }\n    return this.chain(\n      new ZAddCommand(\n        [args[0], args[1], ...args.slice(2)],\n        this.commandOptions\n      )\n    );\n  };\n  /**\n   * @see https://redis.io/commands/xadd\n   */\n  xadd = (...args) => this.chain(new XAddCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xack\n   */\n  xack = (...args) => this.chain(new XAckCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xdel\n   */\n  xdel = (...args) => this.chain(new XDelCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xgroup\n   */\n  xgroup = (...args) => this.chain(new XGroupCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xread\n   */\n  xread = (...args) => this.chain(new XReadCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xreadgroup\n   */\n  xreadgroup = (...args) => this.chain(new XReadGroupCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xinfo\n   */\n  xinfo = (...args) => this.chain(new XInfoCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xlen\n   */\n  xlen = (...args) => this.chain(new XLenCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xpending\n   */\n  xpending = (...args) => this.chain(new XPendingCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xclaim\n   */\n  xclaim = (...args) => this.chain(new XClaimCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xautoclaim\n   */\n  xautoclaim = (...args) => this.chain(new XAutoClaim(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xtrim\n   */\n  xtrim = (...args) => this.chain(new XTrimCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xrange\n   */\n  xrange = (...args) => this.chain(new XRangeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xrevrange\n   */\n  xrevrange = (...args) => this.chain(new XRevRangeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zcard\n   */\n  zcard = (...args) => this.chain(new ZCardCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zcount\n   */\n  zcount = (...args) => this.chain(new ZCountCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zincrby\n   */\n  zincrby = (key, increment, member) => this.chain(new ZIncrByCommand([key, increment, member], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zinterstore\n   */\n  zinterstore = (...args) => this.chain(new ZInterStoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zlexcount\n   */\n  zlexcount = (...args) => this.chain(new ZLexCountCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zmscore\n   */\n  zmscore = (...args) => this.chain(new ZMScoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zpopmax\n   */\n  zpopmax = (...args) => this.chain(new ZPopMaxCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zpopmin\n   */\n  zpopmin = (...args) => this.chain(new ZPopMinCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zrange\n   */\n  zrange = (...args) => this.chain(new ZRangeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zrank\n   */\n  zrank = (key, member) => this.chain(new ZRankCommand([key, member], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zrem\n   */\n  zrem = (key, ...members) => this.chain(new ZRemCommand([key, ...members], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zremrangebylex\n   */\n  zremrangebylex = (...args) => this.chain(new ZRemRangeByLexCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zremrangebyrank\n   */\n  zremrangebyrank = (...args) => this.chain(new ZRemRangeByRankCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zremrangebyscore\n   */\n  zremrangebyscore = (...args) => this.chain(new ZRemRangeByScoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zrevrank\n   */\n  zrevrank = (key, member) => this.chain(new ZRevRankCommand([key, member], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zscan\n   */\n  zscan = (...args) => this.chain(new ZScanCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zscore\n   */\n  zscore = (key, member) => this.chain(new ZScoreCommand([key, member], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zunionstore\n   */\n  zunionstore = (...args) => this.chain(new ZUnionStoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zunion\n   */\n  zunion = (...args) => this.chain(new ZUnionCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/?group=json\n   */\n  get json() {\n    return {\n      /**\n       * @see https://redis.io/commands/json.arrappend\n       */\n      arrappend: (...args) => this.chain(new JsonArrAppendCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.arrindex\n       */\n      arrindex: (...args) => this.chain(new JsonArrIndexCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.arrinsert\n       */\n      arrinsert: (...args) => this.chain(new JsonArrInsertCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.arrlen\n       */\n      arrlen: (...args) => this.chain(new JsonArrLenCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.arrpop\n       */\n      arrpop: (...args) => this.chain(new JsonArrPopCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.arrtrim\n       */\n      arrtrim: (...args) => this.chain(new JsonArrTrimCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.clear\n       */\n      clear: (...args) => this.chain(new JsonClearCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.del\n       */\n      del: (...args) => this.chain(new JsonDelCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.forget\n       */\n      forget: (...args) => this.chain(new JsonForgetCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.get\n       */\n      get: (...args) => this.chain(new JsonGetCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.merge\n       */\n      merge: (...args) => this.chain(new JsonMergeCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.mget\n       */\n      mget: (...args) => this.chain(new JsonMGetCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.mset\n       */\n      mset: (...args) => this.chain(new JsonMSetCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.numincrby\n       */\n      numincrby: (...args) => this.chain(new JsonNumIncrByCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.nummultby\n       */\n      nummultby: (...args) => this.chain(new JsonNumMultByCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.objkeys\n       */\n      objkeys: (...args) => this.chain(new JsonObjKeysCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.objlen\n       */\n      objlen: (...args) => this.chain(new JsonObjLenCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.resp\n       */\n      resp: (...args) => this.chain(new JsonRespCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.set\n       */\n      set: (...args) => this.chain(new JsonSetCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.strappend\n       */\n      strappend: (...args) => this.chain(new JsonStrAppendCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.strlen\n       */\n      strlen: (...args) => this.chain(new JsonStrLenCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.toggle\n       */\n      toggle: (...args) => this.chain(new JsonToggleCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.type\n       */\n      type: (...args) => this.chain(new JsonTypeCommand(args, this.commandOptions))\n    };\n  }\n};\n\n// pkg/auto-pipeline.ts\nvar EXCLUDE_COMMANDS = /* @__PURE__ */ new Set([\n  \"scan\",\n  \"keys\",\n  \"flushdb\",\n  \"flushall\",\n  \"dbsize\",\n  \"hscan\",\n  \"hgetall\",\n  \"hkeys\",\n  \"lrange\",\n  \"sscan\",\n  \"smembers\",\n  \"xrange\",\n  \"xrevrange\",\n  \"zscan\",\n  \"zrange\",\n  \"exec\"\n]);\nfunction createAutoPipelineProxy(_redis, json) {\n  const redis = _redis;\n  if (!redis.autoPipelineExecutor) {\n    redis.autoPipelineExecutor = new AutoPipelineExecutor(redis);\n  }\n  return new Proxy(redis, {\n    get: (redis2, command) => {\n      if (command === \"pipelineCounter\") {\n        return redis2.autoPipelineExecutor.pipelineCounter;\n      }\n      if (command === \"json\") {\n        return createAutoPipelineProxy(redis2, true);\n      }\n      const commandInRedisButNotPipeline = command in redis2 && !(command in redis2.autoPipelineExecutor.pipeline);\n      const isCommandExcluded = EXCLUDE_COMMANDS.has(command);\n      if (commandInRedisButNotPipeline || isCommandExcluded) {\n        return redis2[command];\n      }\n      const isFunction = json ? typeof redis2.autoPipelineExecutor.pipeline.json[command] === \"function\" : typeof redis2.autoPipelineExecutor.pipeline[command] === \"function\";\n      if (isFunction) {\n        return (...args) => {\n          return redis2.autoPipelineExecutor.withAutoPipeline((pipeline) => {\n            if (json) {\n              pipeline.json[command](\n                ...args\n              );\n            } else {\n              pipeline[command](...args);\n            }\n          });\n        };\n      }\n      return redis2.autoPipelineExecutor.pipeline[command];\n    }\n  });\n}\nvar AutoPipelineExecutor = class {\n  pipelinePromises = /* @__PURE__ */ new WeakMap();\n  activePipeline = null;\n  indexInCurrentPipeline = 0;\n  redis;\n  pipeline;\n  // only to make sure that proxy can work\n  pipelineCounter = 0;\n  // to keep track of how many times a pipeline was executed\n  constructor(redis) {\n    this.redis = redis;\n    this.pipeline = redis.pipeline();\n  }\n  async withAutoPipeline(executeWithPipeline) {\n    const pipeline = this.activePipeline ?? this.redis.pipeline();\n    if (!this.activePipeline) {\n      this.activePipeline = pipeline;\n      this.indexInCurrentPipeline = 0;\n    }\n    const index = this.indexInCurrentPipeline++;\n    executeWithPipeline(pipeline);\n    const pipelineDone = this.deferExecution().then(() => {\n      if (!this.pipelinePromises.has(pipeline)) {\n        const pipelinePromise = pipeline.exec({ keepErrors: true });\n        this.pipelineCounter += 1;\n        this.pipelinePromises.set(pipeline, pipelinePromise);\n        this.activePipeline = null;\n      }\n      return this.pipelinePromises.get(pipeline);\n    });\n    const results = await pipelineDone;\n    const commandResult = results[index];\n    if (commandResult.error) {\n      throw new UpstashError(`Command failed: ${commandResult.error}`);\n    }\n    return commandResult.result;\n  }\n  async deferExecution() {\n    await Promise.resolve();\n    await Promise.resolve();\n  }\n};\n\n// pkg/commands/psubscribe.ts\nvar PSubscribeCommand = class extends Command {\n  constructor(cmd, opts) {\n    const sseHeaders = {\n      Accept: \"text/event-stream\",\n      \"Cache-Control\": \"no-cache\",\n      Connection: \"keep-alive\"\n    };\n    super([], {\n      ...opts,\n      headers: sseHeaders,\n      path: [\"psubscribe\", ...cmd],\n      streamOptions: {\n        isStreaming: true,\n        onMessage: opts?.streamOptions?.onMessage,\n        signal: opts?.streamOptions?.signal\n      }\n    });\n  }\n};\n\n// pkg/commands/subscribe.ts\nvar Subscriber = class extends EventTarget {\n  subscriptions;\n  client;\n  listeners;\n  opts;\n  constructor(client, channels, isPattern = false, opts) {\n    super();\n    this.client = client;\n    this.subscriptions = /* @__PURE__ */ new Map();\n    this.listeners = /* @__PURE__ */ new Map();\n    this.opts = opts;\n    for (const channel of channels) {\n      if (isPattern) {\n        this.subscribeToPattern(channel);\n      } else {\n        this.subscribeToChannel(channel);\n      }\n    }\n  }\n  subscribeToChannel(channel) {\n    const controller = new AbortController();\n    const command = new SubscribeCommand([channel], {\n      streamOptions: {\n        signal: controller.signal,\n        onMessage: (data) => this.handleMessage(data, false)\n      }\n    });\n    command.exec(this.client).catch((error) => {\n      if (error.name !== \"AbortError\") {\n        this.dispatchToListeners(\"error\", error);\n      }\n    });\n    this.subscriptions.set(channel, {\n      command,\n      controller,\n      isPattern: false\n    });\n  }\n  subscribeToPattern(pattern) {\n    const controller = new AbortController();\n    const command = new PSubscribeCommand([pattern], {\n      streamOptions: {\n        signal: controller.signal,\n        onMessage: (data) => this.handleMessage(data, true)\n      }\n    });\n    command.exec(this.client).catch((error) => {\n      if (error.name !== \"AbortError\") {\n        this.dispatchToListeners(\"error\", error);\n      }\n    });\n    this.subscriptions.set(pattern, {\n      command,\n      controller,\n      isPattern: true\n    });\n  }\n  handleMessage(data, isPattern) {\n    const messageData = data.replace(/^data:\\s*/, \"\");\n    const firstCommaIndex = messageData.indexOf(\",\");\n    const secondCommaIndex = messageData.indexOf(\",\", firstCommaIndex + 1);\n    const thirdCommaIndex = isPattern ? messageData.indexOf(\",\", secondCommaIndex + 1) : -1;\n    if (firstCommaIndex !== -1 && secondCommaIndex !== -1) {\n      const type = messageData.slice(0, firstCommaIndex);\n      if (isPattern && type === \"pmessage\" && thirdCommaIndex !== -1) {\n        const pattern = messageData.slice(firstCommaIndex + 1, secondCommaIndex);\n        const channel = messageData.slice(secondCommaIndex + 1, thirdCommaIndex);\n        const messageStr = messageData.slice(thirdCommaIndex + 1);\n        try {\n          const message = this.opts?.automaticDeserialization === false ? messageStr : JSON.parse(messageStr);\n          this.dispatchToListeners(\"pmessage\", { pattern, channel, message });\n          this.dispatchToListeners(`pmessage:${pattern}`, { pattern, channel, message });\n        } catch (error) {\n          this.dispatchToListeners(\"error\", new Error(`Failed to parse message: ${error}`));\n        }\n      } else {\n        const channel = messageData.slice(firstCommaIndex + 1, secondCommaIndex);\n        const messageStr = messageData.slice(secondCommaIndex + 1);\n        try {\n          if (type === \"subscribe\" || type === \"psubscribe\" || type === \"unsubscribe\" || type === \"punsubscribe\") {\n            const count = Number.parseInt(messageStr);\n            this.dispatchToListeners(type, count);\n          } else {\n            const message = this.opts?.automaticDeserialization === false ? messageStr : parseWithTryCatch(messageStr);\n            this.dispatchToListeners(type, { channel, message });\n            this.dispatchToListeners(`${type}:${channel}`, { channel, message });\n          }\n        } catch (error) {\n          this.dispatchToListeners(\"error\", new Error(`Failed to parse message: ${error}`));\n        }\n      }\n    }\n  }\n  dispatchToListeners(type, data) {\n    const listeners = this.listeners.get(type);\n    if (listeners) {\n      for (const listener of listeners) {\n        listener(data);\n      }\n    }\n  }\n  on(type, listener) {\n    if (!this.listeners.has(type)) {\n      this.listeners.set(type, /* @__PURE__ */ new Set());\n    }\n    this.listeners.get(type)?.add(listener);\n  }\n  removeAllListeners() {\n    this.listeners.clear();\n  }\n  async unsubscribe(channels) {\n    if (channels) {\n      for (const channel of channels) {\n        const subscription = this.subscriptions.get(channel);\n        if (subscription) {\n          try {\n            subscription.controller.abort();\n          } catch {\n          }\n          this.subscriptions.delete(channel);\n        }\n      }\n    } else {\n      for (const subscription of this.subscriptions.values()) {\n        try {\n          subscription.controller.abort();\n        } catch {\n        }\n      }\n      this.subscriptions.clear();\n      this.removeAllListeners();\n    }\n  }\n  getSubscribedChannels() {\n    return [...this.subscriptions.keys()];\n  }\n};\nvar SubscribeCommand = class extends Command {\n  constructor(cmd, opts) {\n    const sseHeaders = {\n      Accept: \"text/event-stream\",\n      \"Cache-Control\": \"no-cache\",\n      Connection: \"keep-alive\"\n    };\n    super([], {\n      ...opts,\n      headers: sseHeaders,\n      path: [\"subscribe\", ...cmd],\n      streamOptions: {\n        isStreaming: true,\n        onMessage: opts?.streamOptions?.onMessage,\n        signal: opts?.streamOptions?.signal\n      }\n    });\n  }\n};\nvar parseWithTryCatch = (str) => {\n  try {\n    return JSON.parse(str);\n  } catch {\n    return str;\n  }\n};\n\n// pkg/script.ts\n\nvar Script = class {\n  script;\n  /**\n   * @deprecated This property is initialized to an empty string and will be set in the init method\n   * asynchronously. Do not use this property immidiately after the constructor.\n   *\n   * This property is only exposed for backwards compatibility and will be removed in the\n   * future major release.\n   */\n  sha1;\n  redis;\n  constructor(redis, script) {\n    this.redis = redis;\n    this.script = script;\n    this.sha1 = \"\";\n    void this.init(script);\n  }\n  /**\n   * Initialize the script by computing its SHA-1 hash.\n   */\n  async init(script) {\n    if (this.sha1) return;\n    this.sha1 = await this.digest(script);\n  }\n  /**\n   * Send an `EVAL` command to redis.\n   */\n  async eval(keys, args) {\n    await this.init(this.script);\n    return await this.redis.eval(this.script, keys, args);\n  }\n  /**\n   * Calculates the sha1 hash of the script and then calls `EVALSHA`.\n   */\n  async evalsha(keys, args) {\n    await this.init(this.script);\n    return await this.redis.evalsha(this.sha1, keys, args);\n  }\n  /**\n   * Optimistically try to run `EVALSHA` first.\n   * If the script is not loaded in redis, it will fall back and try again with `EVAL`.\n   *\n   * Following calls will be able to use the cached script\n   */\n  async exec(keys, args) {\n    await this.init(this.script);\n    const res = await this.redis.evalsha(this.sha1, keys, args).catch(async (error) => {\n      if (error instanceof Error && error.message.toLowerCase().includes(\"noscript\")) {\n        return await this.redis.eval(this.script, keys, args);\n      }\n      throw error;\n    });\n    return res;\n  }\n  /**\n   * Compute the sha1 hash of the script and return its hex representation.\n   */\n  async digest(s) {\n    const data = new TextEncoder().encode(s);\n    const hashBuffer = await uncrypto__WEBPACK_IMPORTED_MODULE_0__.subtle.digest(\"SHA-1\", data);\n    const hashArray = [...new Uint8Array(hashBuffer)];\n    return hashArray.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n  }\n};\n\n// pkg/scriptRo.ts\n\nvar ScriptRO = class {\n  script;\n  /**\n   * @deprecated This property is initialized to an empty string and will be set in the init method\n   * asynchronously. Do not use this property immidiately after the constructor.\n   *\n   * This property is only exposed for backwards compatibility and will be removed in the\n   * future major release.\n   */\n  sha1;\n  redis;\n  constructor(redis, script) {\n    this.redis = redis;\n    this.sha1 = \"\";\n    this.script = script;\n    void this.init(script);\n  }\n  async init(script) {\n    if (this.sha1) return;\n    this.sha1 = await this.digest(script);\n  }\n  /**\n   * Send an `EVAL_RO` command to redis.\n   */\n  async evalRo(keys, args) {\n    await this.init(this.script);\n    return await this.redis.evalRo(this.script, keys, args);\n  }\n  /**\n   * Calculates the sha1 hash of the script and then calls `EVALSHA_RO`.\n   */\n  async evalshaRo(keys, args) {\n    await this.init(this.script);\n    return await this.redis.evalshaRo(this.sha1, keys, args);\n  }\n  /**\n   * Optimistically try to run `EVALSHA_RO` first.\n   * If the script is not loaded in redis, it will fall back and try again with `EVAL_RO`.\n   *\n   * Following calls will be able to use the cached script\n   */\n  async exec(keys, args) {\n    await this.init(this.script);\n    const res = await this.redis.evalshaRo(this.sha1, keys, args).catch(async (error) => {\n      if (error instanceof Error && error.message.toLowerCase().includes(\"noscript\")) {\n        return await this.redis.evalRo(this.script, keys, args);\n      }\n      throw error;\n    });\n    return res;\n  }\n  /**\n   * Compute the sha1 hash of the script and return its hex representation.\n   */\n  async digest(s) {\n    const data = new TextEncoder().encode(s);\n    const hashBuffer = await uncrypto__WEBPACK_IMPORTED_MODULE_0__.subtle.digest(\"SHA-1\", data);\n    const hashArray = [...new Uint8Array(hashBuffer)];\n    return hashArray.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n  }\n};\n\n// pkg/redis.ts\nvar Redis = class {\n  client;\n  opts;\n  enableTelemetry;\n  enableAutoPipelining;\n  /**\n   * Create a new redis client\n   *\n   * @example\n   * ```typescript\n   * const redis = new Redis({\n   *  url: \"<UPSTASH_REDIS_REST_URL>\",\n   *  token: \"<UPSTASH_REDIS_REST_TOKEN>\",\n   * });\n   * ```\n   */\n  constructor(client, opts) {\n    this.client = client;\n    this.opts = opts;\n    this.enableTelemetry = opts?.enableTelemetry ?? true;\n    if (opts?.readYourWrites === false) {\n      this.client.readYourWrites = false;\n    }\n    this.enableAutoPipelining = opts?.enableAutoPipelining ?? true;\n  }\n  get readYourWritesSyncToken() {\n    return this.client.upstashSyncToken;\n  }\n  set readYourWritesSyncToken(session) {\n    this.client.upstashSyncToken = session;\n  }\n  get json() {\n    return {\n      /**\n       * @see https://redis.io/commands/json.arrappend\n       */\n      arrappend: (...args) => new JsonArrAppendCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.arrindex\n       */\n      arrindex: (...args) => new JsonArrIndexCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.arrinsert\n       */\n      arrinsert: (...args) => new JsonArrInsertCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.arrlen\n       */\n      arrlen: (...args) => new JsonArrLenCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.arrpop\n       */\n      arrpop: (...args) => new JsonArrPopCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.arrtrim\n       */\n      arrtrim: (...args) => new JsonArrTrimCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.clear\n       */\n      clear: (...args) => new JsonClearCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.del\n       */\n      del: (...args) => new JsonDelCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.forget\n       */\n      forget: (...args) => new JsonForgetCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.get\n       */\n      get: (...args) => new JsonGetCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.merge\n       */\n      merge: (...args) => new JsonMergeCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.mget\n       */\n      mget: (...args) => new JsonMGetCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.mset\n       */\n      mset: (...args) => new JsonMSetCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.numincrby\n       */\n      numincrby: (...args) => new JsonNumIncrByCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.nummultby\n       */\n      nummultby: (...args) => new JsonNumMultByCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.objkeys\n       */\n      objkeys: (...args) => new JsonObjKeysCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.objlen\n       */\n      objlen: (...args) => new JsonObjLenCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.resp\n       */\n      resp: (...args) => new JsonRespCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.set\n       */\n      set: (...args) => new JsonSetCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.strappend\n       */\n      strappend: (...args) => new JsonStrAppendCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.strlen\n       */\n      strlen: (...args) => new JsonStrLenCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.toggle\n       */\n      toggle: (...args) => new JsonToggleCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.type\n       */\n      type: (...args) => new JsonTypeCommand(args, this.opts).exec(this.client)\n    };\n  }\n  /**\n   * Wrap a new middleware around the HTTP client.\n   */\n  use = (middleware) => {\n    const makeRequest = this.client.request.bind(this.client);\n    this.client.request = (req) => middleware(req, makeRequest);\n  };\n  /**\n   * Technically this is not private, we can hide it from intellisense by doing this\n   */\n  addTelemetry = (telemetry) => {\n    if (!this.enableTelemetry) {\n      return;\n    }\n    try {\n      this.client.mergeTelemetry(telemetry);\n    } catch {\n    }\n  };\n  /**\n   * Creates a new script.\n   *\n   * Scripts offer the ability to optimistically try to execute a script without having to send the\n   * entire script to the server. If the script is loaded on the server, it tries again by sending\n   * the entire script. Afterwards, the script is cached on the server.\n   *\n   * @param script - The script to create\n   * @param opts - Optional options to pass to the script `{ readonly?: boolean }`\n   * @returns A new script\n   *\n   * @example\n   * ```ts\n   * const redis = new Redis({...})\n   *\n   * const script = redis.createScript<string>(\"return ARGV[1];\")\n   * const arg1 = await script.eval([], [\"Hello World\"])\n   * expect(arg1, \"Hello World\")\n   * ```\n   * @example\n   * ```ts\n   * const redis = new Redis({...})\n   *\n   * const script = redis.createScript<string>(\"return ARGV[1];\", { readonly: true })\n   * const arg1 = await script.evalRo([], [\"Hello World\"])\n   * expect(arg1, \"Hello World\")\n   * ```\n   */\n  createScript(script, opts) {\n    return opts?.readonly ? new ScriptRO(this, script) : new Script(this, script);\n  }\n  /**\n   * Create a new pipeline that allows you to send requests in bulk.\n   *\n   * @see {@link Pipeline}\n   */\n  pipeline = () => new Pipeline({\n    client: this.client,\n    commandOptions: this.opts,\n    multiExec: false\n  });\n  autoPipeline = () => {\n    return createAutoPipelineProxy(this);\n  };\n  /**\n   * Create a new transaction to allow executing multiple steps atomically.\n   *\n   * All the commands in a transaction are serialized and executed sequentially. A request sent by\n   * another client will never be served in the middle of the execution of a Redis Transaction. This\n   * guarantees that the commands are executed as a single isolated operation.\n   *\n   * @see {@link Pipeline}\n   */\n  multi = () => new Pipeline({\n    client: this.client,\n    commandOptions: this.opts,\n    multiExec: true\n  });\n  /**\n   * Returns an instance that can be used to execute `BITFIELD` commands on one key.\n   *\n   * @example\n   * ```typescript\n   * redis.set(\"mykey\", 0);\n   * const result = await redis.bitfield(\"mykey\")\n   *   .set(\"u4\", 0, 16)\n   *   .incr(\"u4\", \"#1\", 1)\n   *   .exec();\n   * console.log(result); // [0, 1]\n   * ```\n   *\n   * @see https://redis.io/commands/bitfield\n   */\n  bitfield = (...args) => new BitFieldCommand(args, this.client, this.opts);\n  /**\n   * @see https://redis.io/commands/append\n   */\n  append = (...args) => new AppendCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/bitcount\n   */\n  bitcount = (...args) => new BitCountCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/bitop\n   */\n  bitop = (op, destinationKey, sourceKey, ...sourceKeys) => new BitOpCommand([op, destinationKey, sourceKey, ...sourceKeys], this.opts).exec(\n    this.client\n  );\n  /**\n   * @see https://redis.io/commands/bitpos\n   */\n  bitpos = (...args) => new BitPosCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/copy\n   */\n  copy = (...args) => new CopyCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/dbsize\n   */\n  dbsize = () => new DBSizeCommand(this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/decr\n   */\n  decr = (...args) => new DecrCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/decrby\n   */\n  decrby = (...args) => new DecrByCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/del\n   */\n  del = (...args) => new DelCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/echo\n   */\n  echo = (...args) => new EchoCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/eval_ro\n   */\n  evalRo = (...args) => new EvalROCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/eval\n   */\n  eval = (...args) => new EvalCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/evalsha_ro\n   */\n  evalshaRo = (...args) => new EvalshaROCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/evalsha\n   */\n  evalsha = (...args) => new EvalshaCommand(args, this.opts).exec(this.client);\n  /**\n   * Generic method to execute any Redis command.\n   */\n  exec = (args) => new ExecCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/exists\n   */\n  exists = (...args) => new ExistsCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/expire\n   */\n  expire = (...args) => new ExpireCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/expireat\n   */\n  expireat = (...args) => new ExpireAtCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/flushall\n   */\n  flushall = (args) => new FlushAllCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/flushdb\n   */\n  flushdb = (...args) => new FlushDBCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/geoadd\n   */\n  geoadd = (...args) => new GeoAddCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/geopos\n   */\n  geopos = (...args) => new GeoPosCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/geodist\n   */\n  geodist = (...args) => new GeoDistCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/geohash\n   */\n  geohash = (...args) => new GeoHashCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/geosearch\n   */\n  geosearch = (...args) => new GeoSearchCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/geosearchstore\n   */\n  geosearchstore = (...args) => new GeoSearchStoreCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/get\n   */\n  get = (...args) => new GetCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/getbit\n   */\n  getbit = (...args) => new GetBitCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/getdel\n   */\n  getdel = (...args) => new GetDelCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/getex\n   */\n  getex = (...args) => new GetExCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/getrange\n   */\n  getrange = (...args) => new GetRangeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/getset\n   */\n  getset = (key, value) => new GetSetCommand([key, value], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hdel\n   */\n  hdel = (...args) => new HDelCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hexists\n   */\n  hexists = (...args) => new HExistsCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hexpire\n   */\n  hexpire = (...args) => new HExpireCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hexpireat\n   */\n  hexpireat = (...args) => new HExpireAtCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hexpiretime\n   */\n  hexpiretime = (...args) => new HExpireTimeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/httl\n   */\n  httl = (...args) => new HTtlCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hpexpire\n   */\n  hpexpire = (...args) => new HPExpireCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hpexpireat\n   */\n  hpexpireat = (...args) => new HPExpireAtCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hpexpiretime\n   */\n  hpexpiretime = (...args) => new HPExpireTimeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hpttl\n   */\n  hpttl = (...args) => new HPTtlCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hpersist\n   */\n  hpersist = (...args) => new HPersistCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hget\n   */\n  hget = (...args) => new HGetCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hgetall\n   */\n  hgetall = (...args) => new HGetAllCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hincrby\n   */\n  hincrby = (...args) => new HIncrByCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hincrbyfloat\n   */\n  hincrbyfloat = (...args) => new HIncrByFloatCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hkeys\n   */\n  hkeys = (...args) => new HKeysCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hlen\n   */\n  hlen = (...args) => new HLenCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hmget\n   */\n  hmget = (...args) => new HMGetCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hmset\n   */\n  hmset = (key, kv) => new HMSetCommand([key, kv], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hrandfield\n   */\n  hrandfield = (key, count, withValues) => new HRandFieldCommand([key, count, withValues], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hscan\n   */\n  hscan = (...args) => new HScanCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hset\n   */\n  hset = (key, kv) => new HSetCommand([key, kv], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hsetnx\n   */\n  hsetnx = (key, field, value) => new HSetNXCommand([key, field, value], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hstrlen\n   */\n  hstrlen = (...args) => new HStrLenCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hvals\n   */\n  hvals = (...args) => new HValsCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/incr\n   */\n  incr = (...args) => new IncrCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/incrby\n   */\n  incrby = (...args) => new IncrByCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/incrbyfloat\n   */\n  incrbyfloat = (...args) => new IncrByFloatCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/keys\n   */\n  keys = (...args) => new KeysCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lindex\n   */\n  lindex = (...args) => new LIndexCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/linsert\n   */\n  linsert = (key, direction, pivot, value) => new LInsertCommand([key, direction, pivot, value], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/llen\n   */\n  llen = (...args) => new LLenCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lmove\n   */\n  lmove = (...args) => new LMoveCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lpop\n   */\n  lpop = (...args) => new LPopCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lmpop\n   */\n  lmpop = (...args) => new LmPopCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lpos\n   */\n  lpos = (...args) => new LPosCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lpush\n   */\n  lpush = (key, ...elements) => new LPushCommand([key, ...elements], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lpushx\n   */\n  lpushx = (key, ...elements) => new LPushXCommand([key, ...elements], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lrange\n   */\n  lrange = (...args) => new LRangeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lrem\n   */\n  lrem = (key, count, value) => new LRemCommand([key, count, value], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lset\n   */\n  lset = (key, index, value) => new LSetCommand([key, index, value], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/ltrim\n   */\n  ltrim = (...args) => new LTrimCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/mget\n   */\n  mget = (...args) => new MGetCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/mset\n   */\n  mset = (kv) => new MSetCommand([kv], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/msetnx\n   */\n  msetnx = (kv) => new MSetNXCommand([kv], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/persist\n   */\n  persist = (...args) => new PersistCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/pexpire\n   */\n  pexpire = (...args) => new PExpireCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/pexpireat\n   */\n  pexpireat = (...args) => new PExpireAtCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/pfadd\n   */\n  pfadd = (...args) => new PfAddCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/pfcount\n   */\n  pfcount = (...args) => new PfCountCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/pfmerge\n   */\n  pfmerge = (...args) => new PfMergeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/ping\n   */\n  ping = (args) => new PingCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/psetex\n   */\n  psetex = (key, ttl, value) => new PSetEXCommand([key, ttl, value], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/psubscribe\n   */\n  psubscribe = (patterns) => {\n    const patternArray = Array.isArray(patterns) ? patterns : [patterns];\n    return new Subscriber(this.client, patternArray, true, this.opts);\n  };\n  /**\n   * @see https://redis.io/commands/pttl\n   */\n  pttl = (...args) => new PTtlCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/publish\n   */\n  publish = (...args) => new PublishCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/randomkey\n   */\n  randomkey = () => new RandomKeyCommand().exec(this.client);\n  /**\n   * @see https://redis.io/commands/rename\n   */\n  rename = (...args) => new RenameCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/renamenx\n   */\n  renamenx = (...args) => new RenameNXCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/rpop\n   */\n  rpop = (...args) => new RPopCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/rpush\n   */\n  rpush = (key, ...elements) => new RPushCommand([key, ...elements], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/rpushx\n   */\n  rpushx = (key, ...elements) => new RPushXCommand([key, ...elements], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/sadd\n   */\n  sadd = (key, member, ...members) => new SAddCommand([key, member, ...members], this.opts).exec(this.client);\n  scan(cursor, opts) {\n    return new ScanCommand([cursor, opts], this.opts).exec(this.client);\n  }\n  /**\n   * @see https://redis.io/commands/scard\n   */\n  scard = (...args) => new SCardCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/script-exists\n   */\n  scriptExists = (...args) => new ScriptExistsCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/script-flush\n   */\n  scriptFlush = (...args) => new ScriptFlushCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/script-load\n   */\n  scriptLoad = (...args) => new ScriptLoadCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/sdiff\n   */\n  sdiff = (...args) => new SDiffCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/sdiffstore\n   */\n  sdiffstore = (...args) => new SDiffStoreCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/set\n   */\n  set = (key, value, opts) => new SetCommand([key, value, opts], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/setbit\n   */\n  setbit = (...args) => new SetBitCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/setex\n   */\n  setex = (key, ttl, value) => new SetExCommand([key, ttl, value], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/setnx\n   */\n  setnx = (key, value) => new SetNxCommand([key, value], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/setrange\n   */\n  setrange = (...args) => new SetRangeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/sinter\n   */\n  sinter = (...args) => new SInterCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/sinterstore\n   */\n  sinterstore = (...args) => new SInterStoreCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/sismember\n   */\n  sismember = (key, member) => new SIsMemberCommand([key, member], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/smismember\n   */\n  smismember = (key, members) => new SMIsMemberCommand([key, members], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/smembers\n   */\n  smembers = (...args) => new SMembersCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/smove\n   */\n  smove = (source, destination, member) => new SMoveCommand([source, destination, member], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/spop\n   */\n  spop = (...args) => new SPopCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/srandmember\n   */\n  srandmember = (...args) => new SRandMemberCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/srem\n   */\n  srem = (key, ...members) => new SRemCommand([key, ...members], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/sscan\n   */\n  sscan = (...args) => new SScanCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/strlen\n   */\n  strlen = (...args) => new StrLenCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/subscribe\n   */\n  subscribe = (channels) => {\n    const channelArray = Array.isArray(channels) ? channels : [channels];\n    return new Subscriber(this.client, channelArray, false, this.opts);\n  };\n  /**\n   * @see https://redis.io/commands/sunion\n   */\n  sunion = (...args) => new SUnionCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/sunionstore\n   */\n  sunionstore = (...args) => new SUnionStoreCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/time\n   */\n  time = () => new TimeCommand().exec(this.client);\n  /**\n   * @see https://redis.io/commands/touch\n   */\n  touch = (...args) => new TouchCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/ttl\n   */\n  ttl = (...args) => new TtlCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/type\n   */\n  type = (...args) => new TypeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/unlink\n   */\n  unlink = (...args) => new UnlinkCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xadd\n   */\n  xadd = (...args) => new XAddCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xack\n   */\n  xack = (...args) => new XAckCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xdel\n   */\n  xdel = (...args) => new XDelCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xgroup\n   */\n  xgroup = (...args) => new XGroupCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xread\n   */\n  xread = (...args) => new XReadCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xreadgroup\n   */\n  xreadgroup = (...args) => new XReadGroupCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xinfo\n   */\n  xinfo = (...args) => new XInfoCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xlen\n   */\n  xlen = (...args) => new XLenCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xpending\n   */\n  xpending = (...args) => new XPendingCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xclaim\n   */\n  xclaim = (...args) => new XClaimCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xautoclaim\n   */\n  xautoclaim = (...args) => new XAutoClaim(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xtrim\n   */\n  xtrim = (...args) => new XTrimCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xrange\n   */\n  xrange = (...args) => new XRangeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xrevrange\n   */\n  xrevrange = (...args) => new XRevRangeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zadd\n   */\n  zadd = (...args) => {\n    if (\"score\" in args[1]) {\n      return new ZAddCommand([args[0], args[1], ...args.slice(2)], this.opts).exec(\n        this.client\n      );\n    }\n    return new ZAddCommand(\n      [args[0], args[1], ...args.slice(2)],\n      this.opts\n    ).exec(this.client);\n  };\n  /**\n   * @see https://redis.io/commands/zcard\n   */\n  zcard = (...args) => new ZCardCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zcount\n   */\n  zcount = (...args) => new ZCountCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zdiffstore\n   */\n  zdiffstore = (...args) => new ZDiffStoreCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zincrby\n   */\n  zincrby = (key, increment, member) => new ZIncrByCommand([key, increment, member], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zinterstore\n   */\n  zinterstore = (...args) => new ZInterStoreCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zlexcount\n   */\n  zlexcount = (...args) => new ZLexCountCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zmscore\n   */\n  zmscore = (...args) => new ZMScoreCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zpopmax\n   */\n  zpopmax = (...args) => new ZPopMaxCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zpopmin\n   */\n  zpopmin = (...args) => new ZPopMinCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zrange\n   */\n  zrange = (...args) => new ZRangeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zrank\n   */\n  zrank = (key, member) => new ZRankCommand([key, member], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zrem\n   */\n  zrem = (key, ...members) => new ZRemCommand([key, ...members], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zremrangebylex\n   */\n  zremrangebylex = (...args) => new ZRemRangeByLexCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zremrangebyrank\n   */\n  zremrangebyrank = (...args) => new ZRemRangeByRankCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zremrangebyscore\n   */\n  zremrangebyscore = (...args) => new ZRemRangeByScoreCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zrevrank\n   */\n  zrevrank = (key, member) => new ZRevRankCommand([key, member], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zscan\n   */\n  zscan = (...args) => new ZScanCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zscore\n   */\n  zscore = (key, member) => new ZScoreCommand([key, member], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zunion\n   */\n  zunion = (...args) => new ZUnionCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zunionstore\n   */\n  zunionstore = (...args) => new ZUnionStoreCommand(args, this.opts).exec(this.client);\n};\n\n// version.ts\nvar VERSION = \"v1.35.6\";\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@upstash/redis/chunk-TAJI6TAE.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@upstash/redis/nodejs.mjs":
/*!************************************************!*\
  !*** ./node_modules/@upstash/redis/nodejs.mjs ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Redis: function() { return /* binding */ Redis2; },\n/* harmony export */   errors: function() { return /* reexport safe */ _chunk_TAJI6TAE_mjs__WEBPACK_IMPORTED_MODULE_0__.error_exports; }\n/* harmony export */ });\n/* harmony import */ var _chunk_TAJI6TAE_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-TAJI6TAE.mjs */ \"(app-pages-browser)/./node_modules/@upstash/redis/chunk-TAJI6TAE.mjs\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n\n// platforms/nodejs.ts\nif (typeof atob === \"undefined\") {\n  global.atob = (b64) => Buffer.from(b64, \"base64\").toString(\"utf8\");\n}\nvar Redis2 = class _Redis extends _chunk_TAJI6TAE_mjs__WEBPACK_IMPORTED_MODULE_0__.Redis {\n  /**\n   * Create a new redis client by providing a custom `Requester` implementation\n   *\n   * @example\n   * ```ts\n   *\n   * import { UpstashRequest, Requester, UpstashResponse, Redis } from \"@upstash/redis\"\n   *\n   *  const requester: Requester = {\n   *    request: <TResult>(req: UpstashRequest): Promise<UpstashResponse<TResult>> => {\n   *      // ...\n   *    }\n   *  }\n   *\n   * const redis = new Redis(requester)\n   * ```\n   */\n  constructor(configOrRequester) {\n    if (\"request\" in configOrRequester) {\n      super(configOrRequester);\n      return;\n    }\n    if (!configOrRequester.url) {\n      console.warn(\n        `[Upstash Redis] The 'url' property is missing or undefined in your Redis config.`\n      );\n    } else if (configOrRequester.url.startsWith(\" \") || configOrRequester.url.endsWith(\" \") || /\\r|\\n/.test(configOrRequester.url)) {\n      console.warn(\n        \"[Upstash Redis] The redis url contains whitespace or newline, which can cause errors!\"\n      );\n    }\n    if (!configOrRequester.token) {\n      console.warn(\n        `[Upstash Redis] The 'token' property is missing or undefined in your Redis config.`\n      );\n    } else if (configOrRequester.token.startsWith(\" \") || configOrRequester.token.endsWith(\" \") || /\\r|\\n/.test(configOrRequester.token)) {\n      console.warn(\n        \"[Upstash Redis] The redis token contains whitespace or newline, which can cause errors!\"\n      );\n    }\n    const client = new _chunk_TAJI6TAE_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpClient({\n      baseUrl: configOrRequester.url,\n      retry: configOrRequester.retry,\n      headers: { authorization: `Bearer ${configOrRequester.token}` },\n      agent: configOrRequester.agent,\n      responseEncoding: configOrRequester.responseEncoding,\n      cache: configOrRequester.cache ?? \"no-store\",\n      signal: configOrRequester.signal,\n      keepAlive: configOrRequester.keepAlive,\n      readYourWrites: configOrRequester.readYourWrites\n    });\n    super(client, {\n      automaticDeserialization: configOrRequester.automaticDeserialization,\n      enableTelemetry: !process.env.UPSTASH_DISABLE_TELEMETRY,\n      latencyLogging: configOrRequester.latencyLogging,\n      enableAutoPipelining: configOrRequester.enableAutoPipelining\n    });\n    this.addTelemetry({\n      runtime: (\n        // @ts-expect-error to silence compiler\n        typeof EdgeRuntime === \"string\" ? \"edge-light\" : `node@${process.version}`\n      ),\n      platform: process.env.UPSTASH_CONSOLE ? \"console\" : process.env.VERCEL ? \"vercel\" : process.env.AWS_REGION ? \"aws\" : \"unknown\",\n      sdk: `@upstash/redis@${_chunk_TAJI6TAE_mjs__WEBPACK_IMPORTED_MODULE_0__.VERSION}`\n    });\n    if (this.enableAutoPipelining) {\n      return this.autoPipeline();\n    }\n  }\n  /**\n   * Create a new Upstash Redis instance from environment variables.\n   *\n   * Use this to automatically load connection secrets from your environment\n   * variables. For instance when using the Vercel integration.\n   *\n   * This tries to load connection details from your environment using `process.env`:\n   * - URL: `UPSTASH_REDIS_REST_URL` or fallback to `KV_REST_API_URL`\n   * - Token: `UPSTASH_REDIS_REST_TOKEN` or fallback to `KV_REST_API_TOKEN`\n   *\n   * The fallback variables provide compatibility with Vercel KV and other platforms\n   * that may use different naming conventions.\n   */\n  static fromEnv(config) {\n    if (process.env === void 0) {\n      throw new TypeError(\n        '[Upstash Redis] Unable to get environment variables, `process.env` is undefined. If you are deploying to cloudflare, please import from \"@upstash/redis/cloudflare\" instead'\n      );\n    }\n    const url = process.env.UPSTASH_REDIS_REST_URL || process.env.KV_REST_API_URL;\n    if (!url) {\n      console.warn(\"[Upstash Redis] Unable to find environment variable: `UPSTASH_REDIS_REST_URL`\");\n    }\n    const token = process.env.UPSTASH_REDIS_REST_TOKEN || process.env.KV_REST_API_TOKEN;\n    if (!token) {\n      console.warn(\n        \"[Upstash Redis] Unable to find environment variable: `UPSTASH_REDIS_REST_TOKEN`\"\n      );\n    }\n    return new _Redis({ ...config, url, token });\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdXBzdGFzaC9yZWRpcy9ub2RlanMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBSzhCOztBQUU5QjtBQUNBO0FBQ0EseUJBQXlCLE1BQU07QUFDL0I7QUFDQSxrQ0FBa0Msc0RBQUs7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxvREFBb0Q7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwyREFBVTtBQUNqQztBQUNBO0FBQ0EsaUJBQWlCLHlCQUF5Qix3QkFBd0IsR0FBRztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHdCQUF3QixPQUFPO0FBQy9CO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLE9BQU8sU0FBUztBQUNqRjtBQUNBLGdCQUFnQixPQUFPLG1DQUFtQyxPQUFPLHlCQUF5QixPQUFPO0FBQ2pHLDZCQUE2Qix3REFBTyxDQUFDO0FBQ3JDLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLE9BQU87QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixPQUFPLCtCQUErQixPQUFPO0FBQzdEO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixPQUFPLGlDQUFpQyxPQUFPO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0E7QUFJRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHVwc3Rhc2gvcmVkaXMvbm9kZWpzLm1qcz8xNWIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEh0dHBDbGllbnQsXG4gIFJlZGlzLFxuICBWRVJTSU9OLFxuICBlcnJvcl9leHBvcnRzXG59IGZyb20gXCIuL2NodW5rLVRBSkk2VEFFLm1qc1wiO1xuXG4vLyBwbGF0Zm9ybXMvbm9kZWpzLnRzXG5pZiAodHlwZW9mIGF0b2IgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgZ2xvYmFsLmF0b2IgPSAoYjY0KSA9PiBCdWZmZXIuZnJvbShiNjQsIFwiYmFzZTY0XCIpLnRvU3RyaW5nKFwidXRmOFwiKTtcbn1cbnZhciBSZWRpczIgPSBjbGFzcyBfUmVkaXMgZXh0ZW5kcyBSZWRpcyB7XG4gIC8qKlxuICAgKiBDcmVhdGUgYSBuZXcgcmVkaXMgY2xpZW50IGJ5IHByb3ZpZGluZyBhIGN1c3RvbSBgUmVxdWVzdGVyYCBpbXBsZW1lbnRhdGlvblxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBgYGB0c1xuICAgKlxuICAgKiBpbXBvcnQgeyBVcHN0YXNoUmVxdWVzdCwgUmVxdWVzdGVyLCBVcHN0YXNoUmVzcG9uc2UsIFJlZGlzIH0gZnJvbSBcIkB1cHN0YXNoL3JlZGlzXCJcbiAgICpcbiAgICogIGNvbnN0IHJlcXVlc3RlcjogUmVxdWVzdGVyID0ge1xuICAgKiAgICByZXF1ZXN0OiA8VFJlc3VsdD4ocmVxOiBVcHN0YXNoUmVxdWVzdCk6IFByb21pc2U8VXBzdGFzaFJlc3BvbnNlPFRSZXN1bHQ+PiA9PiB7XG4gICAqICAgICAgLy8gLi4uXG4gICAqICAgIH1cbiAgICogIH1cbiAgICpcbiAgICogY29uc3QgcmVkaXMgPSBuZXcgUmVkaXMocmVxdWVzdGVyKVxuICAgKiBgYGBcbiAgICovXG4gIGNvbnN0cnVjdG9yKGNvbmZpZ09yUmVxdWVzdGVyKSB7XG4gICAgaWYgKFwicmVxdWVzdFwiIGluIGNvbmZpZ09yUmVxdWVzdGVyKSB7XG4gICAgICBzdXBlcihjb25maWdPclJlcXVlc3Rlcik7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICghY29uZmlnT3JSZXF1ZXN0ZXIudXJsKSB7XG4gICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgIGBbVXBzdGFzaCBSZWRpc10gVGhlICd1cmwnIHByb3BlcnR5IGlzIG1pc3Npbmcgb3IgdW5kZWZpbmVkIGluIHlvdXIgUmVkaXMgY29uZmlnLmBcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChjb25maWdPclJlcXVlc3Rlci51cmwuc3RhcnRzV2l0aChcIiBcIikgfHwgY29uZmlnT3JSZXF1ZXN0ZXIudXJsLmVuZHNXaXRoKFwiIFwiKSB8fCAvXFxyfFxcbi8udGVzdChjb25maWdPclJlcXVlc3Rlci51cmwpKSB7XG4gICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgIFwiW1Vwc3Rhc2ggUmVkaXNdIFRoZSByZWRpcyB1cmwgY29udGFpbnMgd2hpdGVzcGFjZSBvciBuZXdsaW5lLCB3aGljaCBjYW4gY2F1c2UgZXJyb3JzIVwiXG4gICAgICApO1xuICAgIH1cbiAgICBpZiAoIWNvbmZpZ09yUmVxdWVzdGVyLnRva2VuKSB7XG4gICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgIGBbVXBzdGFzaCBSZWRpc10gVGhlICd0b2tlbicgcHJvcGVydHkgaXMgbWlzc2luZyBvciB1bmRlZmluZWQgaW4geW91ciBSZWRpcyBjb25maWcuYFxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKGNvbmZpZ09yUmVxdWVzdGVyLnRva2VuLnN0YXJ0c1dpdGgoXCIgXCIpIHx8IGNvbmZpZ09yUmVxdWVzdGVyLnRva2VuLmVuZHNXaXRoKFwiIFwiKSB8fCAvXFxyfFxcbi8udGVzdChjb25maWdPclJlcXVlc3Rlci50b2tlbikpIHtcbiAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgXCJbVXBzdGFzaCBSZWRpc10gVGhlIHJlZGlzIHRva2VuIGNvbnRhaW5zIHdoaXRlc3BhY2Ugb3IgbmV3bGluZSwgd2hpY2ggY2FuIGNhdXNlIGVycm9ycyFcIlxuICAgICAgKTtcbiAgICB9XG4gICAgY29uc3QgY2xpZW50ID0gbmV3IEh0dHBDbGllbnQoe1xuICAgICAgYmFzZVVybDogY29uZmlnT3JSZXF1ZXN0ZXIudXJsLFxuICAgICAgcmV0cnk6IGNvbmZpZ09yUmVxdWVzdGVyLnJldHJ5LFxuICAgICAgaGVhZGVyczogeyBhdXRob3JpemF0aW9uOiBgQmVhcmVyICR7Y29uZmlnT3JSZXF1ZXN0ZXIudG9rZW59YCB9LFxuICAgICAgYWdlbnQ6IGNvbmZpZ09yUmVxdWVzdGVyLmFnZW50LFxuICAgICAgcmVzcG9uc2VFbmNvZGluZzogY29uZmlnT3JSZXF1ZXN0ZXIucmVzcG9uc2VFbmNvZGluZyxcbiAgICAgIGNhY2hlOiBjb25maWdPclJlcXVlc3Rlci5jYWNoZSA/PyBcIm5vLXN0b3JlXCIsXG4gICAgICBzaWduYWw6IGNvbmZpZ09yUmVxdWVzdGVyLnNpZ25hbCxcbiAgICAgIGtlZXBBbGl2ZTogY29uZmlnT3JSZXF1ZXN0ZXIua2VlcEFsaXZlLFxuICAgICAgcmVhZFlvdXJXcml0ZXM6IGNvbmZpZ09yUmVxdWVzdGVyLnJlYWRZb3VyV3JpdGVzXG4gICAgfSk7XG4gICAgc3VwZXIoY2xpZW50LCB7XG4gICAgICBhdXRvbWF0aWNEZXNlcmlhbGl6YXRpb246IGNvbmZpZ09yUmVxdWVzdGVyLmF1dG9tYXRpY0Rlc2VyaWFsaXphdGlvbixcbiAgICAgIGVuYWJsZVRlbGVtZXRyeTogIXByb2Nlc3MuZW52LlVQU1RBU0hfRElTQUJMRV9URUxFTUVUUlksXG4gICAgICBsYXRlbmN5TG9nZ2luZzogY29uZmlnT3JSZXF1ZXN0ZXIubGF0ZW5jeUxvZ2dpbmcsXG4gICAgICBlbmFibGVBdXRvUGlwZWxpbmluZzogY29uZmlnT3JSZXF1ZXN0ZXIuZW5hYmxlQXV0b1BpcGVsaW5pbmdcbiAgICB9KTtcbiAgICB0aGlzLmFkZFRlbGVtZXRyeSh7XG4gICAgICBydW50aW1lOiAoXG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdG8gc2lsZW5jZSBjb21waWxlclxuICAgICAgICB0eXBlb2YgRWRnZVJ1bnRpbWUgPT09IFwic3RyaW5nXCIgPyBcImVkZ2UtbGlnaHRcIiA6IGBub2RlQCR7cHJvY2Vzcy52ZXJzaW9ufWBcbiAgICAgICksXG4gICAgICBwbGF0Zm9ybTogcHJvY2Vzcy5lbnYuVVBTVEFTSF9DT05TT0xFID8gXCJjb25zb2xlXCIgOiBwcm9jZXNzLmVudi5WRVJDRUwgPyBcInZlcmNlbFwiIDogcHJvY2Vzcy5lbnYuQVdTX1JFR0lPTiA/IFwiYXdzXCIgOiBcInVua25vd25cIixcbiAgICAgIHNkazogYEB1cHN0YXNoL3JlZGlzQCR7VkVSU0lPTn1gXG4gICAgfSk7XG4gICAgaWYgKHRoaXMuZW5hYmxlQXV0b1BpcGVsaW5pbmcpIHtcbiAgICAgIHJldHVybiB0aGlzLmF1dG9QaXBlbGluZSgpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogQ3JlYXRlIGEgbmV3IFVwc3Rhc2ggUmVkaXMgaW5zdGFuY2UgZnJvbSBlbnZpcm9ubWVudCB2YXJpYWJsZXMuXG4gICAqXG4gICAqIFVzZSB0aGlzIHRvIGF1dG9tYXRpY2FsbHkgbG9hZCBjb25uZWN0aW9uIHNlY3JldHMgZnJvbSB5b3VyIGVudmlyb25tZW50XG4gICAqIHZhcmlhYmxlcy4gRm9yIGluc3RhbmNlIHdoZW4gdXNpbmcgdGhlIFZlcmNlbCBpbnRlZ3JhdGlvbi5cbiAgICpcbiAgICogVGhpcyB0cmllcyB0byBsb2FkIGNvbm5lY3Rpb24gZGV0YWlscyBmcm9tIHlvdXIgZW52aXJvbm1lbnQgdXNpbmcgYHByb2Nlc3MuZW52YDpcbiAgICogLSBVUkw6IGBVUFNUQVNIX1JFRElTX1JFU1RfVVJMYCBvciBmYWxsYmFjayB0byBgS1ZfUkVTVF9BUElfVVJMYFxuICAgKiAtIFRva2VuOiBgVVBTVEFTSF9SRURJU19SRVNUX1RPS0VOYCBvciBmYWxsYmFjayB0byBgS1ZfUkVTVF9BUElfVE9LRU5gXG4gICAqXG4gICAqIFRoZSBmYWxsYmFjayB2YXJpYWJsZXMgcHJvdmlkZSBjb21wYXRpYmlsaXR5IHdpdGggVmVyY2VsIEtWIGFuZCBvdGhlciBwbGF0Zm9ybXNcbiAgICogdGhhdCBtYXkgdXNlIGRpZmZlcmVudCBuYW1pbmcgY29udmVudGlvbnMuXG4gICAqL1xuICBzdGF0aWMgZnJvbUVudihjb25maWcpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYgPT09IHZvaWQgMCkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgICAgJ1tVcHN0YXNoIFJlZGlzXSBVbmFibGUgdG8gZ2V0IGVudmlyb25tZW50IHZhcmlhYmxlcywgYHByb2Nlc3MuZW52YCBpcyB1bmRlZmluZWQuIElmIHlvdSBhcmUgZGVwbG95aW5nIHRvIGNsb3VkZmxhcmUsIHBsZWFzZSBpbXBvcnQgZnJvbSBcIkB1cHN0YXNoL3JlZGlzL2Nsb3VkZmxhcmVcIiBpbnN0ZWFkJ1xuICAgICAgKTtcbiAgICB9XG4gICAgY29uc3QgdXJsID0gcHJvY2Vzcy5lbnYuVVBTVEFTSF9SRURJU19SRVNUX1VSTCB8fCBwcm9jZXNzLmVudi5LVl9SRVNUX0FQSV9VUkw7XG4gICAgaWYgKCF1cmwpIHtcbiAgICAgIGNvbnNvbGUud2FybihcIltVcHN0YXNoIFJlZGlzXSBVbmFibGUgdG8gZmluZCBlbnZpcm9ubWVudCB2YXJpYWJsZTogYFVQU1RBU0hfUkVESVNfUkVTVF9VUkxgXCIpO1xuICAgIH1cbiAgICBjb25zdCB0b2tlbiA9IHByb2Nlc3MuZW52LlVQU1RBU0hfUkVESVNfUkVTVF9UT0tFTiB8fCBwcm9jZXNzLmVudi5LVl9SRVNUX0FQSV9UT0tFTjtcbiAgICBpZiAoIXRva2VuKSB7XG4gICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgIFwiW1Vwc3Rhc2ggUmVkaXNdIFVuYWJsZSB0byBmaW5kIGVudmlyb25tZW50IHZhcmlhYmxlOiBgVVBTVEFTSF9SRURJU19SRVNUX1RPS0VOYFwiXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IF9SZWRpcyh7IC4uLmNvbmZpZywgdXJsLCB0b2tlbiB9KTtcbiAgfVxufTtcbmV4cG9ydCB7XG4gIFJlZGlzMiBhcyBSZWRpcyxcbiAgZXJyb3JfZXhwb3J0cyBhcyBlcnJvcnNcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@upstash/redis/nodejs.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vercel/kv/dist/index.js":
/*!***********************************************!*\
  !*** ./node_modules/@vercel/kv/dist/index.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VercelKV: function() { return /* binding */ VercelKV; },\n/* harmony export */   createClient: function() { return /* binding */ createClient; },\n/* harmony export */   \"default\": function() { return /* binding */ src_default; },\n/* harmony export */   kv: function() { return /* binding */ kv; }\n/* harmony export */ });\n/* harmony import */ var _upstash_redis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @upstash/redis */ \"(app-pages-browser)/./node_modules/@upstash/redis/nodejs.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// src/index.ts\n\nvar _kv = null;\nprocess.env.UPSTASH_DISABLE_TELEMETRY = \"1\";\nvar VercelKV = class extends _upstash_redis__WEBPACK_IMPORTED_MODULE_0__.Redis {\n  // This API is based on https://github.com/redis/node-redis#scan-iterator which is not supported in @upstash/redis\n  /**\n   * Same as `scan` but returns an AsyncIterator to allow iteration via `for await`.\n   */\n  async *scanIterator(options) {\n    let cursor = \"0\";\n    let keys;\n    do {\n      [cursor, keys] = await this.scan(cursor, options);\n      for (const key of keys) {\n        yield key;\n      }\n    } while (cursor !== \"0\");\n  }\n  /**\n   * Same as `hscan` but returns an AsyncIterator to allow iteration via `for await`.\n   */\n  async *hscanIterator(key, options) {\n    let cursor = \"0\";\n    let items;\n    do {\n      [cursor, items] = await this.hscan(key, cursor, options);\n      for (const item of items) {\n        yield item;\n      }\n    } while (cursor !== \"0\");\n  }\n  /**\n   * Same as `sscan` but returns an AsyncIterator to allow iteration via `for await`.\n   */\n  async *sscanIterator(key, options) {\n    let cursor = \"0\";\n    let items;\n    do {\n      [cursor, items] = await this.sscan(key, cursor, options);\n      for (const item of items) {\n        yield item;\n      }\n    } while (cursor !== \"0\");\n  }\n  /**\n   * Same as `zscan` but returns an AsyncIterator to allow iteration via `for await`.\n   */\n  async *zscanIterator(key, options) {\n    let cursor = \"0\";\n    let items;\n    do {\n      [cursor, items] = await this.zscan(key, cursor, options);\n      for (const item of items) {\n        yield item;\n      }\n    } while (cursor !== \"0\");\n  }\n};\nfunction createClient(config) {\n  return new VercelKV({\n    // The Next.js team recommends no value or `default` for fetch requests's `cache` option\n    // upstash/redis defaults to `no-store`, so we enforce `default`\n    cache: \"default\",\n    enableAutoPipelining: true,\n    ...config\n  });\n}\nvar src_default = new Proxy(\n  {},\n  {\n    get(target, prop, receiver) {\n      if (prop === \"then\" || prop === \"parse\") {\n        return Reflect.get(target, prop, receiver);\n      }\n      if (!_kv) {\n        if (!process.env.KV_REST_API_URL || !process.env.KV_REST_API_TOKEN) {\n          throw new Error(\n            \"@vercel/kv: Missing required environment variables KV_REST_API_URL and KV_REST_API_TOKEN\"\n          );\n        }\n        console.warn(\n          '\\x1B[33m\"The default export has been moved to a named export and it will be removed in version 1, change to import { kv }\\x1B[0m\"'\n        );\n        _kv = createClient({\n          url: process.env.KV_REST_API_URL,\n          token: process.env.KV_REST_API_TOKEN\n        });\n      }\n      return Reflect.get(_kv, prop);\n    }\n  }\n);\nvar kv = new Proxy(\n  {},\n  {\n    get(target, prop) {\n      if (!_kv) {\n        if (!process.env.KV_REST_API_URL || !process.env.KV_REST_API_TOKEN) {\n          throw new Error(\n            \"@vercel/kv: Missing required environment variables KV_REST_API_URL and KV_REST_API_TOKEN\"\n          );\n        }\n        _kv = createClient({\n          url: process.env.KV_REST_API_URL,\n          token: process.env.KV_REST_API_TOKEN\n        });\n      }\n      return Reflect.get(_kv, prop);\n    }\n  }\n);\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdmVyY2VsL2t2L2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDdUM7QUFDdkM7QUFDQSxPQUFPO0FBQ1AsNkJBQTZCLGlEQUFLO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLE9BQU8seUJBQXlCLE9BQU87QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdJQUFnSSxJQUFJO0FBQ3BJO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEIsaUJBQWlCLE9BQU87QUFDeEIsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxhQUFhLE9BQU8seUJBQXlCLE9BQU87QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QixpQkFBaUIsT0FBTztBQUN4QixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1FO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B2ZXJjZWwva3YvZGlzdC9pbmRleC5qcz81ZmQzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9pbmRleC50c1xuaW1wb3J0IHsgUmVkaXMgfSBmcm9tIFwiQHVwc3Rhc2gvcmVkaXNcIjtcbnZhciBfa3YgPSBudWxsO1xucHJvY2Vzcy5lbnYuVVBTVEFTSF9ESVNBQkxFX1RFTEVNRVRSWSA9IFwiMVwiO1xudmFyIFZlcmNlbEtWID0gY2xhc3MgZXh0ZW5kcyBSZWRpcyB7XG4gIC8vIFRoaXMgQVBJIGlzIGJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9yZWRpcy9ub2RlLXJlZGlzI3NjYW4taXRlcmF0b3Igd2hpY2ggaXMgbm90IHN1cHBvcnRlZCBpbiBAdXBzdGFzaC9yZWRpc1xuICAvKipcbiAgICogU2FtZSBhcyBgc2NhbmAgYnV0IHJldHVybnMgYW4gQXN5bmNJdGVyYXRvciB0byBhbGxvdyBpdGVyYXRpb24gdmlhIGBmb3IgYXdhaXRgLlxuICAgKi9cbiAgYXN5bmMgKnNjYW5JdGVyYXRvcihvcHRpb25zKSB7XG4gICAgbGV0IGN1cnNvciA9IFwiMFwiO1xuICAgIGxldCBrZXlzO1xuICAgIGRvIHtcbiAgICAgIFtjdXJzb3IsIGtleXNdID0gYXdhaXQgdGhpcy5zY2FuKGN1cnNvciwgb3B0aW9ucyk7XG4gICAgICBmb3IgKGNvbnN0IGtleSBvZiBrZXlzKSB7XG4gICAgICAgIHlpZWxkIGtleTtcbiAgICAgIH1cbiAgICB9IHdoaWxlIChjdXJzb3IgIT09IFwiMFwiKTtcbiAgfVxuICAvKipcbiAgICogU2FtZSBhcyBgaHNjYW5gIGJ1dCByZXR1cm5zIGFuIEFzeW5jSXRlcmF0b3IgdG8gYWxsb3cgaXRlcmF0aW9uIHZpYSBgZm9yIGF3YWl0YC5cbiAgICovXG4gIGFzeW5jICpoc2Nhbkl0ZXJhdG9yKGtleSwgb3B0aW9ucykge1xuICAgIGxldCBjdXJzb3IgPSBcIjBcIjtcbiAgICBsZXQgaXRlbXM7XG4gICAgZG8ge1xuICAgICAgW2N1cnNvciwgaXRlbXNdID0gYXdhaXQgdGhpcy5oc2NhbihrZXksIGN1cnNvciwgb3B0aW9ucyk7XG4gICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgaXRlbXMpIHtcbiAgICAgICAgeWllbGQgaXRlbTtcbiAgICAgIH1cbiAgICB9IHdoaWxlIChjdXJzb3IgIT09IFwiMFwiKTtcbiAgfVxuICAvKipcbiAgICogU2FtZSBhcyBgc3NjYW5gIGJ1dCByZXR1cm5zIGFuIEFzeW5jSXRlcmF0b3IgdG8gYWxsb3cgaXRlcmF0aW9uIHZpYSBgZm9yIGF3YWl0YC5cbiAgICovXG4gIGFzeW5jICpzc2Nhbkl0ZXJhdG9yKGtleSwgb3B0aW9ucykge1xuICAgIGxldCBjdXJzb3IgPSBcIjBcIjtcbiAgICBsZXQgaXRlbXM7XG4gICAgZG8ge1xuICAgICAgW2N1cnNvciwgaXRlbXNdID0gYXdhaXQgdGhpcy5zc2NhbihrZXksIGN1cnNvciwgb3B0aW9ucyk7XG4gICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgaXRlbXMpIHtcbiAgICAgICAgeWllbGQgaXRlbTtcbiAgICAgIH1cbiAgICB9IHdoaWxlIChjdXJzb3IgIT09IFwiMFwiKTtcbiAgfVxuICAvKipcbiAgICogU2FtZSBhcyBgenNjYW5gIGJ1dCByZXR1cm5zIGFuIEFzeW5jSXRlcmF0b3IgdG8gYWxsb3cgaXRlcmF0aW9uIHZpYSBgZm9yIGF3YWl0YC5cbiAgICovXG4gIGFzeW5jICp6c2Nhbkl0ZXJhdG9yKGtleSwgb3B0aW9ucykge1xuICAgIGxldCBjdXJzb3IgPSBcIjBcIjtcbiAgICBsZXQgaXRlbXM7XG4gICAgZG8ge1xuICAgICAgW2N1cnNvciwgaXRlbXNdID0gYXdhaXQgdGhpcy56c2NhbihrZXksIGN1cnNvciwgb3B0aW9ucyk7XG4gICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgaXRlbXMpIHtcbiAgICAgICAgeWllbGQgaXRlbTtcbiAgICAgIH1cbiAgICB9IHdoaWxlIChjdXJzb3IgIT09IFwiMFwiKTtcbiAgfVxufTtcbmZ1bmN0aW9uIGNyZWF0ZUNsaWVudChjb25maWcpIHtcbiAgcmV0dXJuIG5ldyBWZXJjZWxLVih7XG4gICAgLy8gVGhlIE5leHQuanMgdGVhbSByZWNvbW1lbmRzIG5vIHZhbHVlIG9yIGBkZWZhdWx0YCBmb3IgZmV0Y2ggcmVxdWVzdHMncyBgY2FjaGVgIG9wdGlvblxuICAgIC8vIHVwc3Rhc2gvcmVkaXMgZGVmYXVsdHMgdG8gYG5vLXN0b3JlYCwgc28gd2UgZW5mb3JjZSBgZGVmYXVsdGBcbiAgICBjYWNoZTogXCJkZWZhdWx0XCIsXG4gICAgZW5hYmxlQXV0b1BpcGVsaW5pbmc6IHRydWUsXG4gICAgLi4uY29uZmlnXG4gIH0pO1xufVxudmFyIHNyY19kZWZhdWx0ID0gbmV3IFByb3h5KFxuICB7fSxcbiAge1xuICAgIGdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSB7XG4gICAgICBpZiAocHJvcCA9PT0gXCJ0aGVuXCIgfHwgcHJvcCA9PT0gXCJwYXJzZVwiKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0LmdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKTtcbiAgICAgIH1cbiAgICAgIGlmICghX2t2KSB7XG4gICAgICAgIGlmICghcHJvY2Vzcy5lbnYuS1ZfUkVTVF9BUElfVVJMIHx8ICFwcm9jZXNzLmVudi5LVl9SRVNUX0FQSV9UT0tFTikge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAgIFwiQHZlcmNlbC9rdjogTWlzc2luZyByZXF1aXJlZCBlbnZpcm9ubWVudCB2YXJpYWJsZXMgS1ZfUkVTVF9BUElfVVJMIGFuZCBLVl9SRVNUX0FQSV9UT0tFTlwiXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICAgJ1xceDFCWzMzbVwiVGhlIGRlZmF1bHQgZXhwb3J0IGhhcyBiZWVuIG1vdmVkIHRvIGEgbmFtZWQgZXhwb3J0IGFuZCBpdCB3aWxsIGJlIHJlbW92ZWQgaW4gdmVyc2lvbiAxLCBjaGFuZ2UgdG8gaW1wb3J0IHsga3YgfVxceDFCWzBtXCInXG4gICAgICAgICk7XG4gICAgICAgIF9rdiA9IGNyZWF0ZUNsaWVudCh7XG4gICAgICAgICAgdXJsOiBwcm9jZXNzLmVudi5LVl9SRVNUX0FQSV9VUkwsXG4gICAgICAgICAgdG9rZW46IHByb2Nlc3MuZW52LktWX1JFU1RfQVBJX1RPS0VOXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFJlZmxlY3QuZ2V0KF9rdiwgcHJvcCk7XG4gICAgfVxuICB9XG4pO1xudmFyIGt2ID0gbmV3IFByb3h5KFxuICB7fSxcbiAge1xuICAgIGdldCh0YXJnZXQsIHByb3ApIHtcbiAgICAgIGlmICghX2t2KSB7XG4gICAgICAgIGlmICghcHJvY2Vzcy5lbnYuS1ZfUkVTVF9BUElfVVJMIHx8ICFwcm9jZXNzLmVudi5LVl9SRVNUX0FQSV9UT0tFTikge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAgIFwiQHZlcmNlbC9rdjogTWlzc2luZyByZXF1aXJlZCBlbnZpcm9ubWVudCB2YXJpYWJsZXMgS1ZfUkVTVF9BUElfVVJMIGFuZCBLVl9SRVNUX0FQSV9UT0tFTlwiXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBfa3YgPSBjcmVhdGVDbGllbnQoe1xuICAgICAgICAgIHVybDogcHJvY2Vzcy5lbnYuS1ZfUkVTVF9BUElfVVJMLFxuICAgICAgICAgIHRva2VuOiBwcm9jZXNzLmVudi5LVl9SRVNUX0FQSV9UT0tFTlxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBSZWZsZWN0LmdldChfa3YsIHByb3ApO1xuICAgIH1cbiAgfVxuKTtcbmV4cG9ydCB7XG4gIFZlcmNlbEtWLFxuICBjcmVhdGVDbGllbnQsXG4gIHNyY19kZWZhdWx0IGFzIGRlZmF1bHQsXG4gIGt2XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vercel/kv/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/uncrypto/dist/crypto.web.mjs":
/*!***************************************************!*\
  !*** ./node_modules/uncrypto/dist/crypto.web.mjs ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _crypto; },\n/* harmony export */   getRandomValues: function() { return /* binding */ getRandomValues; },\n/* harmony export */   randomUUID: function() { return /* binding */ randomUUID; },\n/* harmony export */   subtle: function() { return /* binding */ subtle; }\n/* harmony export */ });\nconst webCrypto = globalThis.crypto;\nconst subtle = webCrypto.subtle;\nconst randomUUID = () => {\n  return webCrypto.randomUUID();\n};\nconst getRandomValues = (array) => {\n  return webCrypto.getRandomValues(array);\n};\nconst _crypto = {\n  randomUUID,\n  getRandomValues,\n  subtle\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91bmNyeXB0by9kaXN0L2NyeXB0by53ZWIubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFbUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VuY3J5cHRvL2Rpc3QvY3J5cHRvLndlYi5tanM/MjRmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB3ZWJDcnlwdG8gPSBnbG9iYWxUaGlzLmNyeXB0bztcbmNvbnN0IHN1YnRsZSA9IHdlYkNyeXB0by5zdWJ0bGU7XG5jb25zdCByYW5kb21VVUlEID0gKCkgPT4ge1xuICByZXR1cm4gd2ViQ3J5cHRvLnJhbmRvbVVVSUQoKTtcbn07XG5jb25zdCBnZXRSYW5kb21WYWx1ZXMgPSAoYXJyYXkpID0+IHtcbiAgcmV0dXJuIHdlYkNyeXB0by5nZXRSYW5kb21WYWx1ZXMoYXJyYXkpO1xufTtcbmNvbnN0IF9jcnlwdG8gPSB7XG4gIHJhbmRvbVVVSUQsXG4gIGdldFJhbmRvbVZhbHVlcyxcbiAgc3VidGxlXG59O1xuXG5leHBvcnQgeyBfY3J5cHRvIGFzIGRlZmF1bHQsIGdldFJhbmRvbVZhbHVlcywgcmFuZG9tVVVJRCwgc3VidGxlIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/uncrypto/dist/crypto.web.mjs\n"));

/***/ })

}]);