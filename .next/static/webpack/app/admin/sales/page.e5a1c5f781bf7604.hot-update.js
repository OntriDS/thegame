"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/sales/page",{

/***/ "(app-pages-browser)/./lib/utils/settlement-utils.ts":
/*!***************************************!*\
  !*** ./lib/utils/settlement-utils.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAllSettlementCategories: function() { return /* binding */ getAllSettlementCategories; },\n/* harmony export */   getAllSettlementNames: function() { return /* binding */ getAllSettlementNames; },\n/* harmony export */   getAllSettlements: function() { return /* binding */ getAllSettlements; },\n/* harmony export */   getCategoryForSettlement: function() { return /* binding */ getCategoryForSettlement; },\n/* harmony export */   getSettlementsForCategory: function() { return /* binding */ getSettlementsForCategory; }\n/* harmony export */ });\n// lib/utils/settlement-utils.ts\n// Settlement and location helper functions\n/** Helper function to get all settlements from API */ async function getAllSettlements() {\n    try {\n        const { getAllSettlements: getSettlements } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_data-store_datastore_ts-_27d00\").then(__webpack_require__.bind(__webpack_require__, /*! @/data-store/datastore */ \"(app-pages-browser)/./data-store/datastore.ts\"));\n        return await getSettlements();\n    } catch (error) {\n        console.error(\"Failed to load settlements:\", error);\n        return [];\n    }\n}\n/** Helper function to get settlement names as string array (for backward compatibility) */ async function getAllSettlementNames() {\n    const settlements = await getAllSettlements();\n    return settlements.map((s)=>s.name);\n}\n/** Helper function to get the category for a given settlement */ function getCategoryForSettlement(settlement) {\n    if (typeof settlement === \"string\") {\n        // For backward compatibility, try to find by name\n        return \"Other\";\n    }\n    return settlement.country;\n}\n/** Helper function to get settlements for a given category/country */ async function getSettlementsForCategory(category) {\n    const settlements = await getAllSettlements();\n    return settlements.filter((s)=>s.country === category);\n}\n/** Helper function to get all settlement categories/countries */ async function getAllSettlementCategories() {\n    const settlements = await getAllSettlements();\n    const countries = [\n        ...new Set(settlements.map((s)=>s.country))\n    ];\n    return countries.sort();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi91dGlscy9zZXR0bGVtZW50LXV0aWxzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsZ0NBQWdDO0FBQ2hDLDJDQUEyQztBQUkzQyxvREFBb0QsR0FDN0MsZUFBZUE7SUFDcEIsSUFBSTtRQUNGLE1BQU0sRUFBRUEsbUJBQW1CQyxjQUFjLEVBQUUsR0FBRyxNQUFNLDZOQUFPO1FBQzNELE9BQU8sTUFBTUE7SUFDZixFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLCtCQUErQkE7UUFDN0MsT0FBTyxFQUFFO0lBQ1g7QUFDRjtBQUVBLHlGQUF5RixHQUNsRixlQUFlRTtJQUNwQixNQUFNQyxjQUFjLE1BQU1MO0lBQzFCLE9BQU9LLFlBQVlDLEdBQUcsQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRUMsSUFBSTtBQUNwQztBQUVBLCtEQUErRCxHQUN4RCxTQUFTQyx5QkFBeUJDLFVBQStCO0lBQ3RFLElBQUksT0FBT0EsZUFBZSxVQUFVO1FBQ2xDLGtEQUFrRDtRQUNsRCxPQUFPO0lBQ1Q7SUFDQSxPQUFPQSxXQUFXQyxPQUFPO0FBQzNCO0FBRUEsb0VBQW9FLEdBQzdELGVBQWVDLDBCQUEwQkMsUUFBZ0I7SUFDOUQsTUFBTVIsY0FBYyxNQUFNTDtJQUMxQixPQUFPSyxZQUFZUyxNQUFNLENBQUNQLENBQUFBLElBQUtBLEVBQUVJLE9BQU8sS0FBS0U7QUFDL0M7QUFFQSwrREFBK0QsR0FDeEQsZUFBZUU7SUFDcEIsTUFBTVYsY0FBYyxNQUFNTDtJQUMxQixNQUFNZ0IsWUFBWTtXQUFJLElBQUlDLElBQUlaLFlBQVlDLEdBQUcsQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRUksT0FBTztLQUFHO0lBQy9ELE9BQU9LLFVBQVVFLElBQUk7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL3V0aWxzL3NldHRsZW1lbnQtdXRpbHMudHM/NzYyYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBsaWIvdXRpbHMvc2V0dGxlbWVudC11dGlscy50c1xyXG4vLyBTZXR0bGVtZW50IGFuZCBsb2NhdGlvbiBoZWxwZXIgZnVuY3Rpb25zXHJcblxyXG5pbXBvcnQgdHlwZSB7IFNldHRsZW1lbnQgfSBmcm9tICdAL3R5cGVzL2VudGl0aWVzJztcclxuXHJcbi8qKiBIZWxwZXIgZnVuY3Rpb24gdG8gZ2V0IGFsbCBzZXR0bGVtZW50cyBmcm9tIEFQSSAqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsU2V0dGxlbWVudHMoKTogUHJvbWlzZTxTZXR0bGVtZW50W10+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgeyBnZXRBbGxTZXR0bGVtZW50czogZ2V0U2V0dGxlbWVudHMgfSA9IGF3YWl0IGltcG9ydCgnQC9kYXRhLXN0b3JlL2RhdGFzdG9yZScpO1xyXG4gICAgcmV0dXJuIGF3YWl0IGdldFNldHRsZW1lbnRzKCk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBsb2FkIHNldHRsZW1lbnRzOicsIGVycm9yKTtcclxuICAgIHJldHVybiBbXTtcclxuICB9XHJcbn1cclxuXHJcbi8qKiBIZWxwZXIgZnVuY3Rpb24gdG8gZ2V0IHNldHRsZW1lbnQgbmFtZXMgYXMgc3RyaW5nIGFycmF5IChmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eSkgKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEFsbFNldHRsZW1lbnROYW1lcygpOiBQcm9taXNlPHN0cmluZ1tdPiB7XHJcbiAgY29uc3Qgc2V0dGxlbWVudHMgPSBhd2FpdCBnZXRBbGxTZXR0bGVtZW50cygpO1xyXG4gIHJldHVybiBzZXR0bGVtZW50cy5tYXAocyA9PiBzLm5hbWUpO1xyXG59XHJcblxyXG4vKiogSGVscGVyIGZ1bmN0aW9uIHRvIGdldCB0aGUgY2F0ZWdvcnkgZm9yIGEgZ2l2ZW4gc2V0dGxlbWVudCAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2F0ZWdvcnlGb3JTZXR0bGVtZW50KHNldHRsZW1lbnQ6IFNldHRsZW1lbnQgfCBzdHJpbmcpOiBzdHJpbmcge1xyXG4gIGlmICh0eXBlb2Ygc2V0dGxlbWVudCA9PT0gJ3N0cmluZycpIHtcclxuICAgIC8vIEZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LCB0cnkgdG8gZmluZCBieSBuYW1lXHJcbiAgICByZXR1cm4gJ090aGVyJztcclxuICB9XHJcbiAgcmV0dXJuIHNldHRsZW1lbnQuY291bnRyeTtcclxufVxyXG5cclxuLyoqIEhlbHBlciBmdW5jdGlvbiB0byBnZXQgc2V0dGxlbWVudHMgZm9yIGEgZ2l2ZW4gY2F0ZWdvcnkvY291bnRyeSAqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2V0dGxlbWVudHNGb3JDYXRlZ29yeShjYXRlZ29yeTogc3RyaW5nKTogUHJvbWlzZTxTZXR0bGVtZW50W10+IHtcclxuICBjb25zdCBzZXR0bGVtZW50cyA9IGF3YWl0IGdldEFsbFNldHRsZW1lbnRzKCk7XHJcbiAgcmV0dXJuIHNldHRsZW1lbnRzLmZpbHRlcihzID0+IHMuY291bnRyeSA9PT0gY2F0ZWdvcnkpO1xyXG59XHJcblxyXG4vKiogSGVscGVyIGZ1bmN0aW9uIHRvIGdldCBhbGwgc2V0dGxlbWVudCBjYXRlZ29yaWVzL2NvdW50cmllcyAqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsU2V0dGxlbWVudENhdGVnb3JpZXMoKTogUHJvbWlzZTxzdHJpbmdbXT4ge1xyXG4gIGNvbnN0IHNldHRsZW1lbnRzID0gYXdhaXQgZ2V0QWxsU2V0dGxlbWVudHMoKTtcclxuICBjb25zdCBjb3VudHJpZXMgPSBbLi4ubmV3IFNldChzZXR0bGVtZW50cy5tYXAocyA9PiBzLmNvdW50cnkpKV07XHJcbiAgcmV0dXJuIGNvdW50cmllcy5zb3J0KCk7XHJcbn1cclxuIl0sIm5hbWVzIjpbImdldEFsbFNldHRsZW1lbnRzIiwiZ2V0U2V0dGxlbWVudHMiLCJlcnJvciIsImNvbnNvbGUiLCJnZXRBbGxTZXR0bGVtZW50TmFtZXMiLCJzZXR0bGVtZW50cyIsIm1hcCIsInMiLCJuYW1lIiwiZ2V0Q2F0ZWdvcnlGb3JTZXR0bGVtZW50Iiwic2V0dGxlbWVudCIsImNvdW50cnkiLCJnZXRTZXR0bGVtZW50c0ZvckNhdGVnb3J5IiwiY2F0ZWdvcnkiLCJmaWx0ZXIiLCJnZXRBbGxTZXR0bGVtZW50Q2F0ZWdvcmllcyIsImNvdW50cmllcyIsIlNldCIsInNvcnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/utils/settlement-utils.ts\n"));

/***/ })

});